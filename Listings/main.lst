A51 MACRO ASSEMBLER  MAIN                                                                 05/06/2016 13:12:34 PAGE     1


MACRO ASSEMBLER A51 V8.02c
OBJECT MODULE PLACED IN .\Objects\main.obj
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE main.a51 NOMOD51 SET(SMALL) DEBUG PRINT(.\Listings\main.lst) OBJECT(.\O
                      bjects\main.obj) EP

LOC  OBJ            LINE     SOURCE

                       1     
                       2     ;*******************************************
                       3     ;* Sensors & Microsystem electronics       *
                       4     ;*                                         *
                       5     ;* Names: Steven Peters - Thomas Lapauw    *
                       6     ;*                                         *
                       7     ;*                Task 9                   *
                       8     ;*                                         *
                       9     ;*******************************************
                      10     
                      11     
                      12     ;Special register declarations
                      13     ;$include (t89c51cc01.inc)
                +1    14     ;*INC*************************************************************************
                +1    15     ; NAME: 89C51CC01.inc           
                +1    16     ;----------------------------------------------------------------------------
                +1    17     ; PURPOSE: for Keil
                +1    18     ;*****************************************************************************
                +1    19     
                +1    20     ;----------------------------------------
                +1    21     ; Include file for 8051 SFR Definitions  
                +1    22     ;----------------------------------------
                +1    23     
                +1    24     ;  BYTE Register 
  0080          +1    25     P0      DATA    80H
  0090          +1    26     P1      DATA    90H
  00A0          +1    27     P2      DATA    0A0H
                +1    28     
  00B0          +1    29     P3      DATA    0B0H
  00B7          +1    30     RD      BIT     0B7H
  00B6          +1    31     WR      BIT     0B6H
  00B5          +1    32     T1      BIT     0B5H
  00B4          +1    33     T0      BIT     0B4H
  00B3          +1    34     INT1    BIT     0B3H
  00B2          +1    35     INT0    BIT     0B2H
  00B1          +1    36     TXD     BIT     0B1H
  00B0          +1    37     RXD     BIT     0B0H
                +1    38     
  00C0          +1    39     P4      DATA    0C0H
                +1    40     
  00D0          +1    41     PSW     DATA    0D0H
  00D7          +1    42     CY      BIT     0D7H
  00D6          +1    43     AC      BIT     0D6H
  00D5          +1    44     F0      BIT     0D5H
  00D4          +1    45     RS1     BIT     0D4H
  00D3          +1    46     RS0     BIT     0D3H
  00D2          +1    47     OV      BIT     0D2H
  00D0          +1    48     P       BIT     0D0H
                +1    49     
  00E0          +1    50     ACC     DATA    0E0H
  00F0          +1    51     B       DATA    0F0H
  0081          +1    52     SP      DATA    81H
  0082          +1    53     DPL     DATA    82H
  0083          +1    54     DPH     DATA    83H
  0087          +1    55     PCON    DATA    87H
  008F          +1    56     CKCON   DATA    8FH
                +1    57     
A51 MACRO ASSEMBLER  MAIN                                                                 05/06/2016 13:12:34 PAGE     2

                +1    58     ;------------------ TIMERS registers ---------------------
  0088          +1    59     TCON    DATA    88H
  008F          +1    60     TF1     BIT     8FH
  008E          +1    61     TR1     BIT     8EH
  008D          +1    62     TF0     BIT     8DH
  008C          +1    63     TR0     BIT     8CH
  008B          +1    64     IE1     BIT     8BH
  008A          +1    65     IT1     BIT     8AH
  0089          +1    66     IE0     BIT     89H
  0088          +1    67     IT0     BIT     88H
                +1    68             
  0089          +1    69     TMOD    DATA    89H
                +1    70     
  00C8          +1    71     T2CON   DATA    0C8H
  00CF          +1    72     TF2     BIT     0CFH
  00CE          +1    73     EXF2    BIT     0CEH
  00CD          +1    74     RCLK    BIT     0CDH
  00CC          +1    75     TCLK    BIT     0CCH
  00CB          +1    76     EXEN2   BIT     0CBH
  00CA          +1    77     TR2     BIT     0CAH
  00C9          +1    78     C_T2    BIT     0C9H
  00C8          +1    79     CP_RL2  BIT     0C8H
                +1    80             
  00C9          +1    81     T2MOD   DATA    0C9H    
  008A          +1    82     TL0     DATA    8AH
  008B          +1    83     TL1     DATA    8BH
  00CC          +1    84     TL2     DATA    0CCH
  008C          +1    85     TH0     DATA    8CH
  008D          +1    86     TH1     DATA    8DH
  00CD          +1    87     TH2     DATA    0CDH    
  00CA          +1    88     RCAP2L  DATA    0CAH    
  00CB          +1    89     RCAP2H  DATA    0CBH    
  00A6          +1    90     WDTRST  DATA    0A6H    
  00A7          +1    91     WDTPRG  DATA    0A7H    
                +1    92     
                +1    93     
                +1    94     ;------------------- UART registers ------------------------
  0098          +1    95     SCON    DATA    98H
  009F          +1    96     SM0     BIT     9FH
  009F          +1    97     FE      BIT     9FH
  009E          +1    98     SM1     BIT     9EH
  009D          +1    99     SM2     BIT     9DH
  009C          +1   100     REN     BIT     9CH
  009B          +1   101     TB8     BIT     9BH
  009A          +1   102     RB8     BIT     9AH
  0099          +1   103     TI      BIT     99H
  0098          +1   104     RI      BIT     98H
                +1   105     
  0099          +1   106     SBUF    DATA    99H
  00B9          +1   107     SADEN   DATA    0B9H
  00A9          +1   108     SADDR   DATA    0A9H    
                +1   109     
                +1   110     ;-------------------- ADC registers ----------------------
  00F2          +1   111     ADCLK   DATA    0F2H    
  00F3          +1   112     ADCON   DATA    0F3H    
  00F4          +1   113     ADDL    DATA    0F4H    
  00F5          +1   114     ADDH    DATA    0F5H    
  00F6          +1   115     ADCF    DATA    0F6H    
                +1   116     
                +1   117     ;-------------------- FLASH EEPROM registers ------------
  00F1          +1   118     FPGACON  DATA   0F1H    
  00D1          +1   119     FCON    DATA    0D1H    
  00D2          +1   120     EECON   DATA    0D2H    
  008E          +1   121     AUXR    DATA    8EH
  00A2          +1   122     AUXR1   DATA    0A2H
                +1   123     
A51 MACRO ASSEMBLER  MAIN                                                                 05/06/2016 13:12:34 PAGE     3

                +1   124     ;-------------------- IT registers -----------------------
  00F8          +1   125     IPL1    DATA    0F8H    
  00F7          +1   126     IPH1    DATA    0F7H    
  00A8          +1   127     IEN0    DATA    0A8H    
  00B8          +1   128     IPL0    DATA    0B8H    
  00B7          +1   129     IPH0    DATA    0B7H    
  00E8          +1   130     IEN1    DATA    0E8H    
                +1   131     
                +1   132     ;  IEN0  
  00AF          +1   133     EA      BIT     0AFH
  00AE          +1   134     EC      BIT     0AEH
  00AD          +1   135     ET2     BIT     0ADH
  00AC          +1   136     ES      BIT     0ACH
  00AB          +1   137     ET1     BIT     0ABH
  00AA          +1   138     EX1     BIT     0AAH
  00A9          +1   139     ET0     BIT     0A9H
  00A8          +1   140     EX0     BIT     0A8H
                +1   141     
                +1   142     ;  IEN1 
  00EA          +1   143     ETIM    BIT     0EAH
  00E9          +1   144     EADC    BIT     0E9H
  00E8          +1   145     ECAN    BIT     0E8H
                +1   146     
                +1   147     ;--------------------- PCA registers --------------------
  00D8          +1   148     CCON    DATA    0D8H    
  00DF          +1   149     CF              BIT             0DFH
  00DE          +1   150     CR              BIT             0DEH
  00D4          +1   151     CCF4    BIT             0D4H
  00D3          +1   152     CCF3    BIT             0D3H
  00D2          +1   153     CCF2    BIT             0D2H
  00D1          +1   154     CCF1    BIT             0D1H
  00D0          +1   155     CCF0    BIT             0D0H
                +1   156     
  00D9          +1   157     CMOD    DATA    0D9H    
  00F9          +1   158     CH      DATA    0F9H    
  00E9          +1   159     CL      DATA    0E9H    
  00FA          +1   160     CCAP0H  DATA    0FAH    
  00EA          +1   161     CCAP0L  DATA    0EAH    
  00DA          +1   162     CCAPM0  DATA    0DAH    
  00FB          +1   163     CCAP1H  DATA    0FBH    
  00EB          +1   164     CCAP1L  DATA    0EBH    
  00DB          +1   165     CCAPM1  DATA    0DBH    
  00FC          +1   166     CCAP2H  DATA    0FCH    
  00EC          +1   167     CCAP2L  DATA    0ECH    
  00DC          +1   168     CCAPM2  DATA    0DCH    
  00FD          +1   169     CCAP3H  DATA    0FDH    
  00ED          +1   170     CCAP3L  DATA    0EDH    
  00DD          +1   171     CCAPM3  DATA    0DDH    
  00FE          +1   172     CCAP4H  DATA    0FEH    
  00EE          +1   173     CCAP4L  DATA    0EEH    
  00DE          +1   174     CCAPM4  DATA    0DEH    
                +1   175     
                +1   176     ;------------------- CAN registers --------------------------
  009B          +1   177     CANGIT          DATA    09BH
  009C          +1   178     CANTEC          DATA    09CH
  009D          +1   179     CANREC          DATA    09DH
  00A1          +1   180     CANTCON         DATA    0A1H    
  00A3          +1   181     CANMSG          DATA    0A3H    
  00A4          +1   182     CANTTCL         DATA    0A4H    
  00A5          +1   183     CANTTCH         DATA    0A5H    
  00AA          +1   184     CANGSTA         DATA    0AAH
  00AB          +1   185     CANGCON         DATA    0ABH
  00AC          +1   186     CANTIML         DATA    0ACH    
  00AD          +1   187     CANTIMH         DATA    0ADH    
  00AE          +1   188     CANSTMPL        DATA    0AEH    
  00AF          +1   189     CANSTMPH        DATA    0AFH
A51 MACRO ASSEMBLER  MAIN                                                                 05/06/2016 13:12:34 PAGE     4

  00B1          +1   190     CANPAGE         DATA    0B1H
  00B2          +1   191     CANSTCH         DATA    0B2H    
  00B3          +1   192     CANCONCH        DATA    0B3H    
  00B4          +1   193     CANBT1          DATA    0B4H
  00B5          +1   194     CANBT2          DATA    0B5H
  00B6          +1   195     CANBT3          DATA    0B6H
  00BA          +1   196     CANSIT1         DATA    0BAH
  00BB          +1   197     CANSIT2         DATA    0BBH    
  00BC          +1   198     CANIDT1         DATA    0BCH
  00BD          +1   199     CANIDT2         DATA    0BDH    
  00BE          +1   200     CANIDT3         DATA    0BEH    
  00BF          +1   201     CANIDT4         DATA    0BFH    
  00C1          +1   202     CANGIE          DATA    0C1H
  00C2          +1   203     CANIE1          DATA    0C2H    
  00C3          +1   204     CANIE2          DATA    0C3H
  00C4          +1   205     CANIDM1         DATA    0C4H
  00C5          +1   206     CANIDM2         DATA    0C5H
  00C6          +1   207     CANIDM3         DATA    0C6H
  00C7          +1   208     CANIDM4         DATA    0C7H
  00CE          +1   209     CANEN1          DATA    0CEH
  00CF          +1   210     CANEN2          DATA    0CFH
                +1   211     
                +1   212     
                     213     
                     214             
                     215     ;Boot code
0000                 216     ORG 0000h
0000 02001E          217     LJMP init 
                     218     
                     219     ;Interrupt address vectors
                     220     ;Specify tmr0 interrupt address vector 
000B                 221     ORG 000Bh
000B 020055          222     LJMP ISR_tmr0
                     223     
001B                 224     ORG 001Bh
001B 020098          225     LJMP ISR_tmr1
                     226     ;Address declarations
                     227     
                     228     ;Constants
                     229     
                     230     ;Initialization code
001E                 231     init:   
                     232     
                     233                             ;Initialization code here
001E C2A3            234                             CLR P2.3 ;led to see if code is running
                     235                             
                     236                             ;init tmr0
0020 758911          237                             MOV TMOD,#00010001b ;config tmr0 & tmr1 in 16bit mode
0023 758CFB          238                             MOV TH0,#0FBh ;tmr0 MSB
0026 758A99          239                             MOV TL0,#099h ;tmr0 LSB
                     240                             
0029 758DFF          241                             MOV TH1,#0FFh ;tmr0 MSB
002C 758BFF          242                             MOV TL1,#0FFh ;tmr0 LSB
                     243                             
002F D2AB            244                             SETB ET1
0031 D2A9            245                             SETB ET0 ;enable interrupt of tmr0
0033 D2AF            246                             SETB EA ;global interrupt enable
                     247     
0035 758170          248                             MOV SP, #70h ; move stackpointer above registers
                     249                              
                     250                              
                     251     ;Initialize ram                  
0038 7830            252                             MOV R0,#030h 
003A 7928            253                             MOV R1,#040
003C                 254     ramInit:
003C 76FF            255                             MOV @R0,#0FFh
A51 MACRO ASSEMBLER  MAIN                                                                 05/06/2016 13:12:34 PAGE     5

003E 08              256                             INC R0
003F D9FB            257                             DJNZ R1,ramInit
                     258                             
                     259     ; seed of LFSR          
0041 75186A          260     MOV 18h, #1101010b 
0044 7F7F            261     MOV R7, #01111111b ;data rows (msb = 0, others are 1) single bit zero, to enable current ro
                             w
                     262     
0046 120107          263     LCALL LFSR  ; generate new random data  
                     264     
0049 D28C            265     SETB TR0 ;run tmr0
004B D28E            266     SETB TR1
                     267     
004D 7D14            268     MOV R5,#20
                     269     
004F 020052          270     LJMP main
                     271                             
                     272     ;Main program
0052                 273     main:           
                     274     
                     275     ;;DISPLAY PART
                     276                     ;CLR TR0 ;stop timer during buffer update
                     277                     ;;CLR EA ;global interrupt disable
                     278                     ;CPL P2.4 ; toggle led to see if working
                     279                     ;MOV A,18h ; get data from MSB LFSR
                     280                     ;;RL A ; multiply twice by 2 because 4 bytes per block
                     281                     ;;RL A
                     282                     
                     283                     ;ANL A,#0011100b ;mask for the number of blocks
                     284                     ;;MOV B,#4
                     285                     ;;MUL AB
                     286                     
                     287                     ;MOV R2, A ; save current adress
                     288                     ;;;MOV A,#0
                     289                     ;MOV R3,#4 ; repeat 4 times
                     290                     ;;MOV A, #0h
                     291                     ;;MOV R2, #0h ; save current adress
                     292     ;byteIt:
                     293                     ;MOV A,R2
                     294                     ;MOV DPTR, #block0              ; begin bij block0
                     295                     ;MOVC A,@A+DPTR
                     296     
                     297                     ;MOV R7,A ; stockate data in R7 for collumnshift
                     298                     ;LCALL dispColShift
                     299                     
                     300                     ;MOV A,R2 ; retrieve current data offset
                     301                     ;INC A; advance one adress
                     302                     ;MOV R2, A ; save current adress
                     303                     
                     304                     ;SETB TR0 ;stop timer during buffer update
                     305                     ;;SETB EA ;global interrupt disable
                     306                     ;;LCALL delay ; delay before repeat
                     307                     ;CLR TR0 ;stop timer during buffer update
                     308                     ;;CLR EA ;global interrupt disable
                     309                     
                     310                     ;DJNZ R3, byteIt ; jupmp back to te iteration
                     311                     
                     312     
                     313                     ;LCALL LFSR  ; generate new random data
                     314                     
                     315                     ;;LCALL delay ; delay before repeat
                     316                     ;;LCALL dispColShift ; shift new column in display buffer
                     317                     ;SETB TR0 ;stop timer during buffer update
                     318                     ;;SETB EA ;global interrupt disable
                     319     
                     320                     ;;MOV A,R7
A51 MACRO ASSEMBLER  MAIN                                                                 05/06/2016 13:12:34 PAGE     6

                     321                     ;;RR A
                     322                     ;;MOV R7,A
                     323                     
                     324                     ;;MOV R7,#00h
                     325                     ;;CLR TR0
                     326                     ;;CLR P2.4
                     327                     ;;LCALL dispColShift
                     328                     ;;SETB TR0 ;run tmr0
                     329                     ;;LCALL delay
                     330     
                     331                                     
0052 020052          332                             LJMP main
                     333                     
                     334     ;Interrupt handlers
                     335     
                     336     
0055                 337     ISR_tmr0: 
0055 C2AF            338                             CLR EA ;global interrupt disable
0057 C28C            339                             CLR TR0 ;stop tmr0
0059 C28E            340                             CLR TR1
                     341                             ;reload timer
005B 758CFB          342                             MOV TH0,#0FBh ;tmr0 MSB
005E 758A99          343                             MOV TL0,#099h ;tmr0 LSB
                     344                             
                     345     ;DISPLAY PART
0061 C2D4            346                     CLR RS1 ;move to registerbank 08h to 0Fh
0063 D2D3            347                     SETB RS0
0065 7907            348                     MOV R1, #07 ;counting register to 8 for rows
0067 7A7F            349                     MOV R2, #01111111b ;data rows (msb = 0, others are 1) single bit zero, to e
                             nable current row
0069 7830            350                     MOV R0, #030h ; starting adress disp mem
006B                 351     rowIteration:
                     352     
006B 7F05            353                             MOV R7, #05 ; counter for 5 bytes of row data
006D                 354     lineBytes:
006D E6              355                             MOV A,@R0 ; get data from ram
006E FE              356                             MOV R6,A
006F 11CD            357                             acall shiftR6 ; shift byte into ram
0071 08              358                             INC R0 ; get next byte
0072 DFF9            359                             DJNZ R7,lineBytes ; rinse and repeat
                     360                             
                     361                             ;shift R2 with the current row enable in the register
0074 EA              362                             MOV A,R2
0075 FE              363                             MOV R6, A
0076 11CD            364                             Acall shiftR6 ; shift column data byte into SR
0078 D2B2            365                             SETB P3.2 ; cycle store clock
007A C2B2            366                             CLR P3.2
                     367     
                     368                             ;rotate row bit to enable next row
007C EA              369                             MOV A, R2 
007D 03              370                             RR A
007E FA              371                             MOV R2,A
                     372                              ; repeat until 7 rows done
007F D9EA            373                             DJNZ R1, rowIteration
                     374                             
                     375                             
                     376                             
0081 7906            377                             MOV R1, #06
0083                 378     lastLineComp:                    ;loop to approximate the timing of the other rows to have 
                             similar brightness
0083 7EFF            379                             MOV R6, #0FFh
0085 11CD            380                             Acall shiftR6 ; shift collumn data byte into SR
0087 D9FA            381                             DJNZ R1,lastLineComp
                     382                             
0089 D2B2            383                             SETB P3.2 ; cycle store clock
008B C2B2            384                             CLR P3.2
A51 MACRO ASSEMBLER  MAIN                                                                 05/06/2016 13:12:34 PAGE     7

                     385     
008D C2D4            386                             CLR RS1 ;move to registerbank 00h to 08h
008F C2D3            387                             CLR RS0 
                     388                             ;reenable timers
0091 D28C            389                             SETB TR0 ;run tmr0
0093 D28E            390                             SETB TR1
0095 D2AF            391                             SETB EA ;global interrupt disable
                     392                             
0097 32              393                             RETI
                     394     
                     395     
0098                 396     ISR_tmr1:
                     397     ;DISPLAY PART
0098 C28C            398                     CLR TR0 ;stop timer during buffer update
009A C28E            399                     CLR TR1 ;stop timer during buffer update
009C C2AF            400                     CLR EA ;global interrupt disable
                     401                     
009E 758DFF          402                     MOV TH1,#0FFh ;tmr0 MSB
00A1 758B99          403                     MOV TL1,#099h ;tmr0 LSB
                     404                     
00A4 DD20            405                     DJNZ R5, afterRandom
                     406                     
                     407                     
00A6 E553            408                     MOV A, 53h
00A8 90013F          409                     MOV DPTR, #block0               ; begin bij block0
00AB 93              410                     MOVC A,@A+DPTR
                     411     
00AC FF              412                     MOV R7,A ; stockate data in R7 for collumnshift
00AD 1200E5          413                     LCALL dispColShift
                     414                     
00B0 E553            415                     MOV A, 53h ; retrieve current data offset
00B2 04              416                     INC A; advance one adress
00B3 F553            417                     MOV 53h, A ; save current adress
                     418     
00B5 DB0F            419                     DJNZ R3, afterRandom ; jupmp back to te iteration
00B7 7B04            420                     MOV R3,#4 ; repeat 4 times
00B9 E518            421                     MOV A,18h ; get data from MSB LFSR
00BB 541C            422                     ANL A,#0011100b ;mask for the number of blocks          
00BD F553            423                     MOV 53h, A ; save current adress for next block
00BF 120107          424                     LCALL LFSR  ; generate new random data
00C2 B2A4            425                     CPL P2.4 ; toggle led to see if working
00C4 7D14            426                     MOV R5,#20
00C6                 427             afterRandom:
00C6 D28E            428                     SETB TR1 ;stop timer during buffer update
00C8 D28C            429                     SETB TR0
00CA D2AF            430                     SETB EA
                     431     
00CC 32              432     reti
                     433     
                     434     
                     435     ;Shift byte from R6 into shift registers
00CD                 436     shiftR6:
00CD C0E0            437                                     push Acc
00CF EE              438                                     MOV A, R6 
00D0 7E08            439                                     MOV R6, #08 ;counting register to 8
00D2                 440                                     Reg:
00D2 13              441                                     RRC A ;rotate accumulator
00D3 92C1            442                                     MOV P4.1,C ;carry to Data
00D5 D2C0            443                                     SETB P4.0 ; cycle serial clock
00D7 C2C0            444                                     CLR P4.0
00D9 DEF7            445                                     DJNZ R6,Reg ;if 8 bits are shifted go further otherwise rep
                             eat
00DB D0E0            446                                     pop Acc
00DD 22              447                                     ret
                     448     ;Last line of code
                     449     
A51 MACRO ASSEMBLER  MAIN                                                                 05/06/2016 13:12:34 PAGE     8

                     450     
00DE                 451     dispRowShift:
00DE E7              452             MOV A,@R1
00DF 13              453             RRC A
00E0 F7              454             MOV @R1,A
00E1 19              455             DEC R1
00E2 DEFA            456             DJNZ R6, dispRowShift
00E4 22              457             RET
                     458     ;shift 7 MSB in framebuffer
00E5                 459     dispColShift:
00E5 EF              460             MOV A, R7
00E6 7D07            461             MOV     R5, #07 ;counter to count rows
                     462             ;RRC A ;rotate to drop LSB
00E8 7952            463             MOV R1, #52h ; start at highest address to decrease each time
00EA                 464     dispColShiftLoop:
00EA 13              465             RRC A ;Rotate LSB in carry to shift in row
00EB 7E05            466             MOV     R6, #05 ; counter to rotate 5 horizontal bytes
00ED C0E0            467             PUSH ACC ; push acc to save current data
00EF 11DE            468             ACALL dispRowShift ; rotate all row bytes
00F1 D0E0            469             POP ACC
00F3 DDF5            470             DJNZ R5, dispColShiftLoop
00F5 22              471             RET
                     472             
                     473     ;rudimentary delay for test purposes
00F6                 474     delay:   
00F6 7E9F            475                     MOV R6, #09Fh
00F8 1200FC          476                     LCALL loop
00FB 22              477                     RET
                     478     
00FC                 479     loop:   
00FC 7F00            480                     MOV R7, #00h
00FE 120104          481                     LCALL loop2
0101 D9F9            482                     DJNZ R1, loop
0103 22              483                     RET
                     484                     
0104 DAFE            485     loop2:  DJNZ R2,loop2
0106 22              486                     RET
                     487                     
                     488                     
                     489     ;random number generator code trough LFSR               
0107                 490     LFSR: 
0107 D2D4            491             SETB RS1 ;move to registerbank 08h to 0Fh
0109 D2D3            492             SETB RS0
010B E8              493             MOV A,R0 ;Save highest byte to address
010C FC              494             MOV R4,A
010D 120132          495             lcall LFSRShift
0110 120132          496             lcall LFSRShift
0113 6C              497             XRL A,R4
0114 FC              498             MOV R4,A
0115 120132          499             lcall LFSRShift
0118 120132          500             lcall LFSRShift
011B 120132          501             lcall LFSRShift
011E 120132          502             lcall LFSRShift
0121 6C              503             XRL A,R4
0122 FC              504             MOV R4,A                
0123 120132          505             lcall LFSRShift
0126 6C              506             XRL A,R4
0127 FC              507             MOV R4,A
0128 120132          508             lcall LFSRShift
012B EC              509             MOV A,R4
012C FB              510             MOV R3,A
                     511             
012D C2D4            512             CLR RS1 ;move to registerbank 08h to 0Fh
012F C2D3            513             CLR RS0
                     514             
0131 22              515             RET
A51 MACRO ASSEMBLER  MAIN                                                                 05/06/2016 13:12:34 PAGE     9

                     516             
                     517     ;shift the 32 bit registers of the LFSR
0132                 518     LFSRShift: 
0132 EB              519             MOV A,R3 ; rotate shift register
0133 33              520             RLC A
0134 FB              521             MOV R3,A
0135 EA              522             MOV A,R2 ; rotate shift register
0136 33              523             RLC A
0137 FA              524             MOV R2,A
0138 E9              525             MOV A,R1 ; rotate shift register
0139 33              526             RLC A
013A F9              527             MOV R1,A
013B E8              528             MOV A,R0 ; rotate shift register
013C 33              529             RLC A
013D F8              530             MOV R0,A
013E 22              531             ret     
                     532             
                     533     
013F                 534             block0:
013F 3E              535             db 0x3e
0140 3E              536             db 0x3e
0141 3E              537             db 0x3e
0142 3E              538             db 0x3e
                     539             
                     540             
0143                 541             block1:
                     542             
0143 3E              543             db 0x3e
0144 1C              544             db 0x1C
0145 1C              545             db 0x1C
0146 3E              546             db 0x3e
                     547             
0147                 548             block2:
                     549             
0147 3E              550             db 0x3e
0148 38              551             db 0x38
0149 38              552             db 0x38
014A 3E              553             db 0x3e
                     554                     
014B                 555             block3:
                     556             
014B 3E              557             db 0x3e
014C 18              558             db 0x18
014D 18              559             db 0x18
014E 3E              560             db 0x3e
                     561                     
014F                 562             block4:
                     563             
014F 3E              564             db 0x3e
0150 06              565             db 0x06
0151 06              566             db 0x06
0152 3E              567             db 0x3e
                     568             
0153                 569             block5:
0153 3E              570             db 0x3e
0154 08              571             db 0x08
0155 08              572             db 0x08
0156 3E              573             db 0x3e
                     574                     
0157                 575             block6:
                     576             
0157 3E              577             db 0x3e
0158 32              578             db 0x32
0159 32              579             db 0x32
015A 3E              580             db 0x3e
                     581                     
A51 MACRO ASSEMBLER  MAIN                                                                 05/06/2016 13:12:34 PAGE    10

015B                 582             block7:
015B 3E              583             db 0x3e
015C 26              584             db 0x26
015D 26              585             db 0x26
015E 3E              586             db 0x3e
                     587                     
                     588                     
                     589     
                     590     END
                             
                                     
                                             
A51 MACRO ASSEMBLER  MAIN                                                                 05/06/2016 13:12:34 PAGE    11

SYMBOL TABLE LISTING
------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES

AC . . . . . . . .  B ADDR   00D0H.6 A   
ACC. . . . . . . .  D ADDR   00E0H   A   
ADCF . . . . . . .  D ADDR   00F6H   A   
ADCLK. . . . . . .  D ADDR   00F2H   A   
ADCON. . . . . . .  D ADDR   00F3H   A   
ADDH . . . . . . .  D ADDR   00F5H   A   
ADDL . . . . . . .  D ADDR   00F4H   A   
AFTERRANDOM. . . .  C ADDR   00C6H   A   
AUXR . . . . . . .  D ADDR   008EH   A   
AUXR1. . . . . . .  D ADDR   00A2H   A   
B. . . . . . . . .  D ADDR   00F0H   A   
BLOCK0 . . . . . .  C ADDR   013FH   A   
BLOCK1 . . . . . .  C ADDR   0143H   A   
BLOCK2 . . . . . .  C ADDR   0147H   A   
BLOCK3 . . . . . .  C ADDR   014BH   A   
BLOCK4 . . . . . .  C ADDR   014FH   A   
BLOCK5 . . . . . .  C ADDR   0153H   A   
BLOCK6 . . . . . .  C ADDR   0157H   A   
BLOCK7 . . . . . .  C ADDR   015BH   A   
CANBT1 . . . . . .  D ADDR   00B4H   A   
CANBT2 . . . . . .  D ADDR   00B5H   A   
CANBT3 . . . . . .  D ADDR   00B6H   A   
CANCONCH . . . . .  D ADDR   00B3H   A   
CANEN1 . . . . . .  D ADDR   00CEH   A   
CANEN2 . . . . . .  D ADDR   00CFH   A   
CANGCON. . . . . .  D ADDR   00ABH   A   
CANGIE . . . . . .  D ADDR   00C1H   A   
CANGIT . . . . . .  D ADDR   009BH   A   
CANGSTA. . . . . .  D ADDR   00AAH   A   
CANIDM1. . . . . .  D ADDR   00C4H   A   
CANIDM2. . . . . .  D ADDR   00C5H   A   
CANIDM3. . . . . .  D ADDR   00C6H   A   
CANIDM4. . . . . .  D ADDR   00C7H   A   
CANIDT1. . . . . .  D ADDR   00BCH   A   
CANIDT2. . . . . .  D ADDR   00BDH   A   
CANIDT3. . . . . .  D ADDR   00BEH   A   
CANIDT4. . . . . .  D ADDR   00BFH   A   
CANIE1 . . . . . .  D ADDR   00C2H   A   
CANIE2 . . . . . .  D ADDR   00C3H   A   
CANMSG . . . . . .  D ADDR   00A3H   A   
CANPAGE. . . . . .  D ADDR   00B1H   A   
CANREC . . . . . .  D ADDR   009DH   A   
CANSIT1. . . . . .  D ADDR   00BAH   A   
CANSIT2. . . . . .  D ADDR   00BBH   A   
CANSTCH. . . . . .  D ADDR   00B2H   A   
CANSTMPH . . . . .  D ADDR   00AFH   A   
CANSTMPL . . . . .  D ADDR   00AEH   A   
CANTCON. . . . . .  D ADDR   00A1H   A   
CANTEC . . . . . .  D ADDR   009CH   A   
CANTIMH. . . . . .  D ADDR   00ADH   A   
CANTIML. . . . . .  D ADDR   00ACH   A   
CANTTCH. . . . . .  D ADDR   00A5H   A   
CANTTCL. . . . . .  D ADDR   00A4H   A   
CCAP0H . . . . . .  D ADDR   00FAH   A   
CCAP0L . . . . . .  D ADDR   00EAH   A   
CCAP1H . . . . . .  D ADDR   00FBH   A   
CCAP1L . . . . . .  D ADDR   00EBH   A   
CCAP2H . . . . . .  D ADDR   00FCH   A   
CCAP2L . . . . . .  D ADDR   00ECH   A   
CCAP3H . . . . . .  D ADDR   00FDH   A   
A51 MACRO ASSEMBLER  MAIN                                                                 05/06/2016 13:12:34 PAGE    12

CCAP3L . . . . . .  D ADDR   00EDH   A   
CCAP4H . . . . . .  D ADDR   00FEH   A   
CCAP4L . . . . . .  D ADDR   00EEH   A   
CCAPM0 . . . . . .  D ADDR   00DAH   A   
CCAPM1 . . . . . .  D ADDR   00DBH   A   
CCAPM2 . . . . . .  D ADDR   00DCH   A   
CCAPM3 . . . . . .  D ADDR   00DDH   A   
CCAPM4 . . . . . .  D ADDR   00DEH   A   
CCF0 . . . . . . .  B ADDR   00D0H.0 A   
CCF1 . . . . . . .  B ADDR   00D0H.1 A   
CCF2 . . . . . . .  B ADDR   00D0H.2 A   
CCF3 . . . . . . .  B ADDR   00D0H.3 A   
CCF4 . . . . . . .  B ADDR   00D0H.4 A   
CCON . . . . . . .  D ADDR   00D8H   A   
CF . . . . . . . .  B ADDR   00D8H.7 A   
CH . . . . . . . .  D ADDR   00F9H   A   
CKCON. . . . . . .  D ADDR   008FH   A   
CL . . . . . . . .  D ADDR   00E9H   A   
CMOD . . . . . . .  D ADDR   00D9H   A   
CP_RL2 . . . . . .  B ADDR   00C8H.0 A   
CR . . . . . . . .  B ADDR   00D8H.6 A   
CY . . . . . . . .  B ADDR   00D0H.7 A   
C_T2 . . . . . . .  B ADDR   00C8H.1 A   
DELAY. . . . . . .  C ADDR   00F6H   A   
DISPCOLSHIFT . . .  C ADDR   00E5H   A   
DISPCOLSHIFTLOOP .  C ADDR   00EAH   A   
DISPROWSHIFT . . .  C ADDR   00DEH   A   
DPH. . . . . . . .  D ADDR   0083H   A   
DPL. . . . . . . .  D ADDR   0082H   A   
EA . . . . . . . .  B ADDR   00A8H.7 A   
EADC . . . . . . .  B ADDR   00E8H.1 A   
EC . . . . . . . .  B ADDR   00A8H.6 A   
ECAN . . . . . . .  B ADDR   00E8H.0 A   
EECON. . . . . . .  D ADDR   00D2H   A   
ES . . . . . . . .  B ADDR   00A8H.4 A   
ET0. . . . . . . .  B ADDR   00A8H.1 A   
ET1. . . . . . . .  B ADDR   00A8H.3 A   
ET2. . . . . . . .  B ADDR   00A8H.5 A   
ETIM . . . . . . .  B ADDR   00E8H.2 A   
EX0. . . . . . . .  B ADDR   00A8H.0 A   
EX1. . . . . . . .  B ADDR   00A8H.2 A   
EXEN2. . . . . . .  B ADDR   00C8H.3 A   
EXF2 . . . . . . .  B ADDR   00C8H.6 A   
F0 . . . . . . . .  B ADDR   00D0H.5 A   
FCON . . . . . . .  D ADDR   00D1H   A   
FE . . . . . . . .  B ADDR   0098H.7 A   
FPGACON. . . . . .  D ADDR   00F1H   A   
IE0. . . . . . . .  B ADDR   0088H.1 A   
IE1. . . . . . . .  B ADDR   0088H.3 A   
IEN0 . . . . . . .  D ADDR   00A8H   A   
IEN1 . . . . . . .  D ADDR   00E8H   A   
INIT . . . . . . .  C ADDR   001EH   A   
INT0 . . . . . . .  B ADDR   00B0H.2 A   
INT1 . . . . . . .  B ADDR   00B0H.3 A   
IPH0 . . . . . . .  D ADDR   00B7H   A   
IPH1 . . . . . . .  D ADDR   00F7H   A   
IPL0 . . . . . . .  D ADDR   00B8H   A   
IPL1 . . . . . . .  D ADDR   00F8H   A   
ISR_TMR0 . . . . .  C ADDR   0055H   A   
ISR_TMR1 . . . . .  C ADDR   0098H   A   
IT0. . . . . . . .  B ADDR   0088H.0 A   
IT1. . . . . . . .  B ADDR   0088H.2 A   
LASTLINECOMP . . .  C ADDR   0083H   A   
LFSR . . . . . . .  C ADDR   0107H   A   
LFSRSHIFT. . . . .  C ADDR   0132H   A   
LINEBYTES. . . . .  C ADDR   006DH   A   
A51 MACRO ASSEMBLER  MAIN                                                                 05/06/2016 13:12:34 PAGE    13

LOOP . . . . . . .  C ADDR   00FCH   A   
LOOP2. . . . . . .  C ADDR   0104H   A   
MAIN . . . . . . .  C ADDR   0052H   A   
OV . . . . . . . .  B ADDR   00D0H.2 A   
P. . . . . . . . .  B ADDR   00D0H.0 A   
P0 . . . . . . . .  D ADDR   0080H   A   
P1 . . . . . . . .  D ADDR   0090H   A   
P2 . . . . . . . .  D ADDR   00A0H   A   
P3 . . . . . . . .  D ADDR   00B0H   A   
P4 . . . . . . . .  D ADDR   00C0H   A   
PCON . . . . . . .  D ADDR   0087H   A   
PSW. . . . . . . .  D ADDR   00D0H   A   
RAMINIT. . . . . .  C ADDR   003CH   A   
RB8. . . . . . . .  B ADDR   0098H.2 A   
RCAP2H . . . . . .  D ADDR   00CBH   A   
RCAP2L . . . . . .  D ADDR   00CAH   A   
RCLK . . . . . . .  B ADDR   00C8H.5 A   
RD . . . . . . . .  B ADDR   00B0H.7 A   
REG. . . . . . . .  C ADDR   00D2H   A   
REN. . . . . . . .  B ADDR   0098H.4 A   
RI . . . . . . . .  B ADDR   0098H.0 A   
ROWITERATION . . .  C ADDR   006BH   A   
RS0. . . . . . . .  B ADDR   00D0H.3 A   
RS1. . . . . . . .  B ADDR   00D0H.4 A   
RXD. . . . . . . .  B ADDR   00B0H.0 A   
SADDR. . . . . . .  D ADDR   00A9H   A   
SADEN. . . . . . .  D ADDR   00B9H   A   
SBUF . . . . . . .  D ADDR   0099H   A   
SCON . . . . . . .  D ADDR   0098H   A   
SHIFTR6. . . . . .  C ADDR   00CDH   A   
SM0. . . . . . . .  B ADDR   0098H.7 A   
SM1. . . . . . . .  B ADDR   0098H.6 A   
SM2. . . . . . . .  B ADDR   0098H.5 A   
SP . . . . . . . .  D ADDR   0081H   A   
T0 . . . . . . . .  B ADDR   00B0H.4 A   
T1 . . . . . . . .  B ADDR   00B0H.5 A   
T2CON. . . . . . .  D ADDR   00C8H   A   
T2MOD. . . . . . .  D ADDR   00C9H   A   
TB8. . . . . . . .  B ADDR   0098H.3 A   
TCLK . . . . . . .  B ADDR   00C8H.4 A   
TCON . . . . . . .  D ADDR   0088H   A   
TF0. . . . . . . .  B ADDR   0088H.5 A   
TF1. . . . . . . .  B ADDR   0088H.7 A   
TF2. . . . . . . .  B ADDR   00C8H.7 A   
TH0. . . . . . . .  D ADDR   008CH   A   
TH1. . . . . . . .  D ADDR   008DH   A   
TH2. . . . . . . .  D ADDR   00CDH   A   
TI . . . . . . . .  B ADDR   0098H.1 A   
TL0. . . . . . . .  D ADDR   008AH   A   
TL1. . . . . . . .  D ADDR   008BH   A   
TL2. . . . . . . .  D ADDR   00CCH   A   
TMOD . . . . . . .  D ADDR   0089H   A   
TR0. . . . . . . .  B ADDR   0088H.4 A   
TR1. . . . . . . .  B ADDR   0088H.6 A   
TR2. . . . . . . .  B ADDR   00C8H.2 A   
TXD. . . . . . . .  B ADDR   00B0H.1 A   
WDTPRG . . . . . .  D ADDR   00A7H   A   
WDTRST . . . . . .  D ADDR   00A6H   A   
WR . . . . . . . .  B ADDR   00B0H.6 A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
