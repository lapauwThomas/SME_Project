A51 MACRO ASSEMBLER  MAIN                                                                 05/06/2016 13:52:25 PAGE     1


MACRO ASSEMBLER A51 V8.02c
OBJECT MODULE PLACED IN .\Objects\main.obj
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE main.a51 NOMOD51 SET(SMALL) DEBUG PRINT(.\Listings\main.lst) OBJECT(.\O
                      bjects\main.obj) EP

LOC  OBJ            LINE     SOURCE

                       1     
                       2     ;*******************************************
                       3     ;* Sensors & Microsystem electronics       *
                       4     ;*                                         *
                       5     ;* Names: Steven Peters - Thomas Lapauw    *
                       6     ;*                                         *
                       7     ;*                Task 9                   *
                       8     ;*                                         *
                       9     ;*******************************************
                      10     
                      11     
                      12     ;Special register declarations
                      13     ;$include (t89c51cc01.inc)
                +1    14     ;*INC*************************************************************************
                +1    15     ; NAME: 89C51CC01.inc           
                +1    16     ;----------------------------------------------------------------------------
                +1    17     ; PURPOSE: for Keil
                +1    18     ;*****************************************************************************
                +1    19     
                +1    20     ;----------------------------------------
                +1    21     ; Include file for 8051 SFR Definitions  
                +1    22     ;----------------------------------------
                +1    23     
                +1    24     ;  BYTE Register 
  0080          +1    25     P0      DATA    80H
  0090          +1    26     P1      DATA    90H
  00A0          +1    27     P2      DATA    0A0H
                +1    28     
  00B0          +1    29     P3      DATA    0B0H
  00B7          +1    30     RD      BIT     0B7H
  00B6          +1    31     WR      BIT     0B6H
  00B5          +1    32     T1      BIT     0B5H
  00B4          +1    33     T0      BIT     0B4H
  00B3          +1    34     INT1    BIT     0B3H
  00B2          +1    35     INT0    BIT     0B2H
  00B1          +1    36     TXD     BIT     0B1H
  00B0          +1    37     RXD     BIT     0B0H
                +1    38     
  00C0          +1    39     P4      DATA    0C0H
                +1    40     
  00D0          +1    41     PSW     DATA    0D0H
  00D7          +1    42     CY      BIT     0D7H
  00D6          +1    43     AC      BIT     0D6H
  00D5          +1    44     F0      BIT     0D5H
  00D4          +1    45     RS1     BIT     0D4H
  00D3          +1    46     RS0     BIT     0D3H
  00D2          +1    47     OV      BIT     0D2H
  00D0          +1    48     P       BIT     0D0H
                +1    49     
  00E0          +1    50     ACC     DATA    0E0H
  00F0          +1    51     B       DATA    0F0H
  0081          +1    52     SP      DATA    81H
  0082          +1    53     DPL     DATA    82H
  0083          +1    54     DPH     DATA    83H
  0087          +1    55     PCON    DATA    87H
  008F          +1    56     CKCON   DATA    8FH
                +1    57     
A51 MACRO ASSEMBLER  MAIN                                                                 05/06/2016 13:52:25 PAGE     2

                +1    58     ;------------------ TIMERS registers ---------------------
  0088          +1    59     TCON    DATA    88H
  008F          +1    60     TF1     BIT     8FH
  008E          +1    61     TR1     BIT     8EH
  008D          +1    62     TF0     BIT     8DH
  008C          +1    63     TR0     BIT     8CH
  008B          +1    64     IE1     BIT     8BH
  008A          +1    65     IT1     BIT     8AH
  0089          +1    66     IE0     BIT     89H
  0088          +1    67     IT0     BIT     88H
                +1    68             
  0089          +1    69     TMOD    DATA    89H
                +1    70     
  00C8          +1    71     T2CON   DATA    0C8H
  00CF          +1    72     TF2     BIT     0CFH
  00CE          +1    73     EXF2    BIT     0CEH
  00CD          +1    74     RCLK    BIT     0CDH
  00CC          +1    75     TCLK    BIT     0CCH
  00CB          +1    76     EXEN2   BIT     0CBH
  00CA          +1    77     TR2     BIT     0CAH
  00C9          +1    78     C_T2    BIT     0C9H
  00C8          +1    79     CP_RL2  BIT     0C8H
                +1    80             
  00C9          +1    81     T2MOD   DATA    0C9H    
  008A          +1    82     TL0     DATA    8AH
  008B          +1    83     TL1     DATA    8BH
  00CC          +1    84     TL2     DATA    0CCH
  008C          +1    85     TH0     DATA    8CH
  008D          +1    86     TH1     DATA    8DH
  00CD          +1    87     TH2     DATA    0CDH    
  00CA          +1    88     RCAP2L  DATA    0CAH    
  00CB          +1    89     RCAP2H  DATA    0CBH    
  00A6          +1    90     WDTRST  DATA    0A6H    
  00A7          +1    91     WDTPRG  DATA    0A7H    
                +1    92     
                +1    93     
                +1    94     ;------------------- UART registers ------------------------
  0098          +1    95     SCON    DATA    98H
  009F          +1    96     SM0     BIT     9FH
  009F          +1    97     FE      BIT     9FH
  009E          +1    98     SM1     BIT     9EH
  009D          +1    99     SM2     BIT     9DH
  009C          +1   100     REN     BIT     9CH
  009B          +1   101     TB8     BIT     9BH
  009A          +1   102     RB8     BIT     9AH
  0099          +1   103     TI      BIT     99H
  0098          +1   104     RI      BIT     98H
                +1   105     
  0099          +1   106     SBUF    DATA    99H
  00B9          +1   107     SADEN   DATA    0B9H
  00A9          +1   108     SADDR   DATA    0A9H    
                +1   109     
                +1   110     ;-------------------- ADC registers ----------------------
  00F2          +1   111     ADCLK   DATA    0F2H    
  00F3          +1   112     ADCON   DATA    0F3H    
  00F4          +1   113     ADDL    DATA    0F4H    
  00F5          +1   114     ADDH    DATA    0F5H    
  00F6          +1   115     ADCF    DATA    0F6H    
                +1   116     
                +1   117     ;-------------------- FLASH EEPROM registers ------------
  00F1          +1   118     FPGACON  DATA   0F1H    
  00D1          +1   119     FCON    DATA    0D1H    
  00D2          +1   120     EECON   DATA    0D2H    
  008E          +1   121     AUXR    DATA    8EH
  00A2          +1   122     AUXR1   DATA    0A2H
                +1   123     
A51 MACRO ASSEMBLER  MAIN                                                                 05/06/2016 13:52:25 PAGE     3

                +1   124     ;-------------------- IT registers -----------------------
  00F8          +1   125     IPL1    DATA    0F8H    
  00F7          +1   126     IPH1    DATA    0F7H    
  00A8          +1   127     IEN0    DATA    0A8H    
  00B8          +1   128     IPL0    DATA    0B8H    
  00B7          +1   129     IPH0    DATA    0B7H    
  00E8          +1   130     IEN1    DATA    0E8H    
                +1   131     
                +1   132     ;  IEN0  
  00AF          +1   133     EA      BIT     0AFH
  00AE          +1   134     EC      BIT     0AEH
  00AD          +1   135     ET2     BIT     0ADH
  00AC          +1   136     ES      BIT     0ACH
  00AB          +1   137     ET1     BIT     0ABH
  00AA          +1   138     EX1     BIT     0AAH
  00A9          +1   139     ET0     BIT     0A9H
  00A8          +1   140     EX0     BIT     0A8H
                +1   141     
                +1   142     ;  IEN1 
  00EA          +1   143     ETIM    BIT     0EAH
  00E9          +1   144     EADC    BIT     0E9H
  00E8          +1   145     ECAN    BIT     0E8H
                +1   146     
                +1   147     ;--------------------- PCA registers --------------------
  00D8          +1   148     CCON    DATA    0D8H    
  00DF          +1   149     CF              BIT             0DFH
  00DE          +1   150     CR              BIT             0DEH
  00D4          +1   151     CCF4    BIT             0D4H
  00D3          +1   152     CCF3    BIT             0D3H
  00D2          +1   153     CCF2    BIT             0D2H
  00D1          +1   154     CCF1    BIT             0D1H
  00D0          +1   155     CCF0    BIT             0D0H
                +1   156     
  00D9          +1   157     CMOD    DATA    0D9H    
  00F9          +1   158     CH      DATA    0F9H    
  00E9          +1   159     CL      DATA    0E9H    
  00FA          +1   160     CCAP0H  DATA    0FAH    
  00EA          +1   161     CCAP0L  DATA    0EAH    
  00DA          +1   162     CCAPM0  DATA    0DAH    
  00FB          +1   163     CCAP1H  DATA    0FBH    
  00EB          +1   164     CCAP1L  DATA    0EBH    
  00DB          +1   165     CCAPM1  DATA    0DBH    
  00FC          +1   166     CCAP2H  DATA    0FCH    
  00EC          +1   167     CCAP2L  DATA    0ECH    
  00DC          +1   168     CCAPM2  DATA    0DCH    
  00FD          +1   169     CCAP3H  DATA    0FDH    
  00ED          +1   170     CCAP3L  DATA    0EDH    
  00DD          +1   171     CCAPM3  DATA    0DDH    
  00FE          +1   172     CCAP4H  DATA    0FEH    
  00EE          +1   173     CCAP4L  DATA    0EEH    
  00DE          +1   174     CCAPM4  DATA    0DEH    
                +1   175     
                +1   176     ;------------------- CAN registers --------------------------
  009B          +1   177     CANGIT          DATA    09BH
  009C          +1   178     CANTEC          DATA    09CH
  009D          +1   179     CANREC          DATA    09DH
  00A1          +1   180     CANTCON         DATA    0A1H    
  00A3          +1   181     CANMSG          DATA    0A3H    
  00A4          +1   182     CANTTCL         DATA    0A4H    
  00A5          +1   183     CANTTCH         DATA    0A5H    
  00AA          +1   184     CANGSTA         DATA    0AAH
  00AB          +1   185     CANGCON         DATA    0ABH
  00AC          +1   186     CANTIML         DATA    0ACH    
  00AD          +1   187     CANTIMH         DATA    0ADH    
  00AE          +1   188     CANSTMPL        DATA    0AEH    
  00AF          +1   189     CANSTMPH        DATA    0AFH
A51 MACRO ASSEMBLER  MAIN                                                                 05/06/2016 13:52:25 PAGE     4

  00B1          +1   190     CANPAGE         DATA    0B1H
  00B2          +1   191     CANSTCH         DATA    0B2H    
  00B3          +1   192     CANCONCH        DATA    0B3H    
  00B4          +1   193     CANBT1          DATA    0B4H
  00B5          +1   194     CANBT2          DATA    0B5H
  00B6          +1   195     CANBT3          DATA    0B6H
  00BA          +1   196     CANSIT1         DATA    0BAH
  00BB          +1   197     CANSIT2         DATA    0BBH    
  00BC          +1   198     CANIDT1         DATA    0BCH
  00BD          +1   199     CANIDT2         DATA    0BDH    
  00BE          +1   200     CANIDT3         DATA    0BEH    
  00BF          +1   201     CANIDT4         DATA    0BFH    
  00C1          +1   202     CANGIE          DATA    0C1H
  00C2          +1   203     CANIE1          DATA    0C2H    
  00C3          +1   204     CANIE2          DATA    0C3H
  00C4          +1   205     CANIDM1         DATA    0C4H
  00C5          +1   206     CANIDM2         DATA    0C5H
  00C6          +1   207     CANIDM3         DATA    0C6H
  00C7          +1   208     CANIDM4         DATA    0C7H
  00CE          +1   209     CANEN1          DATA    0CEH
  00CF          +1   210     CANEN2          DATA    0CFH
                +1   211     
                +1   212     
                     213     
                     214             
                     215     ;Boot code
0000                 216     ORG 0000h
0000 02001E          217     LJMP init 
                     218     
                     219     ;Interrupt address vectors
                     220     ;Specify tmr0 interrupt address vector 
000B                 221     ORG 000Bh
000B 02005D          222     LJMP ISR_tmr0
                     223     
001B                 224     ORG 001Bh
001B 0200A8          225     LJMP ISR_tmr1
                     226     ;Address declarations
                     227     
                     228     ;Constants
                     229     
                     230     ;Initialization code
001E                 231     init:   
                     232     
                     233                             ;Initialization code here
                     234                             ;CLR P2.3 ;led to see if code is running
                     235                             
                     236                             ;init tmr0
001E 758911          237                             MOV TMOD,#00010001b ;config tmr0 & tmr1 in 16bit mode
0021 758CFF          238                             MOV TH0,#0FFh ;tmr0 MSB
0024 758AFF          239                             MOV TL0,#0FFh ;tmr0 LSB
                     240                             
0027 758DFF          241                             MOV TH1,#0FFh ;tmr0 MSB
002A 758BFF          242                             MOV TL1,#0FFh ;tmr0 LSB
                     243                             
002D D2AB            244                             SETB ET1
002F D2A9            245                             SETB ET0 ;enable interrupt of tmr0
                     246     
                     247     
0031 758170          248                             MOV SP, #70h ; move stackpointer above registers
                     249                              
                     250                              
                     251     ;Initialize ram                  
0034 7830            252                             MOV R0,#030h 
0036 7928            253                             MOV R1,#040
0038                 254     ramInit:
0038 76FF            255                             MOV @R0,#0FFh
A51 MACRO ASSEMBLER  MAIN                                                                 05/06/2016 13:52:25 PAGE     5

003A 08              256                             INC R0
003B D9FB            257                             DJNZ R1,ramInit
                     258                             
                     259     ; seed of LFSR          
003D 75186A          260     MOV 18h, #1101010b 
                     261     
0040 7828            262     MOV R0,#040
0042                 263     gameInit:
0042 7F3E            264                     MOV R7,#03eh ; stockate data in R7 for collumnshift
0044 1200F1          265                     LCALL dispColShift
0047 D8F9            266                     DJNZ R0, gameInit
                     267     
                     268     
0049 E518            269                     MOV A,18h ; get data from MSB LFSR
004B 541C            270                     ANL A,#0011100b ;mask for the number of blocks          
004D F553            271                     MOV 53h, A ; save current adress for next block
                     272     
004F C2A3            273     CLR P2.3 ;led to see if code is running
                     274     
0051 D28C            275     SETB TR0 ;run tmr0
0053 D28E            276     SETB TR1
0055 D2AF            277     SETB EA ;global interrupt enable
                     278     
0057 02005A          279     LJMP main
                     280                             
                     281     ;Main program
005A                 282     main:           
                     283     
                     284     ;;DISPLAY PART
                     285                     ;CLR TR0 ;stop timer during buffer update
                     286                     ;;CLR EA ;global interrupt disable
                     287                     ;CPL P2.4 ; toggle led to see if working
                     288                     ;MOV A,18h ; get data from MSB LFSR
                     289                     ;;RL A ; multiply twice by 2 because 4 bytes per block
                     290                     ;;RL A
                     291                     
                     292                     ;ANL A,#0011100b ;mask for the number of blocks
                     293                     ;;MOV B,#4
                     294                     ;;MUL AB
                     295                     
                     296                     ;MOV R2, A ; save current adress
                     297                     ;;;MOV A,#0
                     298                     ;MOV R3,#4 ; repeat 4 times
                     299                     ;;MOV A, #0h
                     300                     ;;MOV R2, #0h ; save current adress
                     301     ;byteIt:
                     302                     ;MOV A,R2
                     303                     ;MOV DPTR, #block0              ; begin bij block0
                     304                     ;MOVC A,@A+DPTR
                     305     
                     306                     ;MOV R7,A ; stockate data in R7 for collumnshift
                     307                     ;LCALL dispColShift
                     308                     
                     309                     ;MOV A,R2 ; retrieve current data offset
                     310                     ;INC A; advance one adress
                     311                     ;MOV R2, A ; save current adress
                     312                     
                     313                     ;SETB TR0 ;stop timer during buffer update
                     314                     ;;SETB EA ;global interrupt disable
                     315                     ;;LCALL delay ; delay before repeat
                     316                     ;CLR TR0 ;stop timer during buffer update
                     317                     ;;CLR EA ;global interrupt disable
                     318                     
                     319                     ;DJNZ R3, byteIt ; jupmp back to te iteration
                     320                     
                     321     
A51 MACRO ASSEMBLER  MAIN                                                                 05/06/2016 13:52:25 PAGE     6

                     322                     ;LCALL LFSR  ; generate new random data
                     323                     
                     324                     ;;LCALL delay ; delay before repeat
                     325                     ;;LCALL dispColShift ; shift new column in display buffer
                     326                     ;SETB TR0 ;stop timer during buffer update
                     327                     ;;SETB EA ;global interrupt disable
                     328     
                     329                     ;;MOV A,R7
                     330                     ;;RR A
                     331                     ;;MOV R7,A
                     332                     
                     333                     ;;MOV R7,#00h
                     334                     ;;CLR TR0
                     335                     ;;CLR P2.4
                     336                     ;;LCALL dispColShift
                     337                     ;;SETB TR0 ;run tmr0
                     338                     ;;LCALL delay
                     339     
                     340                                     
005A 02005A          341                             LJMP main
                     342                     
                     343     ;Interrupt handlers
                     344     
                     345     
005D                 346     ISR_tmr0: 
005D C2AF            347                             CLR EA ;global interrupt disable
005F C28C            348                             CLR TR0 ;stop tmr0
0061 C28E            349                             CLR TR1
                     350                             ;reload timer
0063 758CD0          351                             MOV TH0,#0D0h ;tmr0 MSB
0066 758A00          352                             MOV TL0,#000h ;tmr0 LSB
                     353                             
                     354     ;DISPLAY PART
0069 C2D4            355                     CLR RS1 ;move to registerbank 08h to 0Fh
006B D2D3            356                     SETB RS0
006D 7907            357                     MOV R1, #07 ;counting register to 8 for rows
006F 7A7F            358                     MOV R2, #01111111b ;data rows (msb = 0, others are 1) single bit zero, to e
                             nable current row
0071 7830            359                     MOV R0, #030h ; starting adress disp mem
0073                 360     rowIteration:
                     361     
0073 7F05            362                             MOV R7, #05 ; counter for 5 bytes of row data
0075                 363     lineBytes:
0075 E6              364                             MOV A,@R0 ; get data from ram
0076 FE              365                             MOV R6,A
0077 11D9            366                             acall shiftR6 ; shift byte into ram
0079 08              367                             INC R0 ; get next byte
007A DFF9            368                             DJNZ R7,lineBytes ; rinse and repeat
                     369                             
                     370                             ;shift R2 with the current row enable in the register
007C EA              371                             MOV A,R2
007D FE              372                             MOV R6, A
007E 11D9            373                             Acall shiftR6 ; shift column data byte into SR
0080 D2B2            374                             SETB P3.2 ; cycle store clock
0082 C2B2            375                             CLR P3.2
                     376     
                     377                             ;rotate row bit to enable next row
0084 EA              378                             MOV A, R2 
0085 03              379                             RR A
0086 FA              380                             MOV R2,A
                     381                              ; repeat until 7 rows done
0087 D9EA            382                             DJNZ R1, rowIteration
                     383                             
                     384                             
0089 7EDF            385                             MOV R6, #11011111b
008B 11D9            386                             Acall shiftR6 ; shift collumn data byte into SR
A51 MACRO ASSEMBLER  MAIN                                                                 05/06/2016 13:52:25 PAGE     7

                     387                             
008D 7904            388                             MOV R1, #04
008F                 389     lastLineComp:                    ;loop to approximate the timing of the other rows to have 
                             similar brightness
008F 7EFF            390                             MOV R6, #0FFh
0091 11D9            391                             Acall shiftR6 ; shift collumn data byte into SR
0093 D9FA            392                             DJNZ R1,lastLineComp
                     393                             
                     394     
0095 7EEF            395                             MOV R6, #11101111b
0097 11D9            396                             Acall shiftR6 ; shift collumn data byte into SR
                     397                             
0099 D2B2            398                             SETB P3.2 ; cycle store clock
009B C2B2            399                             CLR P3.2
                     400     
009D C2D4            401                             CLR RS1 ;move to registerbank 00h to 08h
009F C2D3            402                             CLR RS0 
                     403                             ;reenable timers
00A1 D28C            404                             SETB TR0 ;run tmr0
00A3 D28E            405                             SETB TR1
00A5 D2AF            406                             SETB EA ;global interrupt disable
                     407                             
00A7 32              408                             RETI
                     409     
                     410     
00A8                 411     ISR_tmr1:
                     412     ;DISPLAY PART
00A8 C28C            413                     CLR TR0 ;stop timer during buffer update
00AA C28E            414                     CLR TR1 ;stop timer during buffer update
00AC C2AF            415                     CLR EA ;global interrupt disable
                     416                     
00AE 758D00          417                     MOV TH1,#00h ;tmr0 MSB
00B1 758B00          418                     MOV TL1,#00h ;tmr0 LSB
                     419                     
                     420                     ;DJNZ R5, afterRandom
                     421                     
                     422                     
00B4 E553            423                     MOV A, 53h
00B6 90014B          424                     MOV DPTR, #block0               ; begin bij block0
00B9 93              425                     MOVC A,@A+DPTR
                     426     
00BA FF              427                     MOV R7,A ; stockate data in R7 for collumnshift
00BB 1200F1          428                     LCALL dispColShift
                     429                     
00BE E553            430                     MOV A, 53h ; retrieve current data offset
00C0 04              431                     INC A; advance one adress
00C1 F553            432                     MOV 53h, A ; save current adress
                     433     
00C3 DB0D            434                     DJNZ R3, afterRandom ; jupmp back to te iteration
00C5 7B04            435                     MOV R3,#4 ; repeat 4 times
00C7 E518            436                     MOV A,18h ; get data from MSB LFSR
00C9 541C            437                     ANL A,#0011100b ;mask for the number of blocks          
00CB F553            438                     MOV 53h, A ; save current adress for next block
00CD 120113          439                     LCALL LFSR  ; generate new random data
00D0 B2A4            440                     CPL P2.4 ; toggle led to see if working
                     441                     ;MOV R5,#2
00D2                 442             afterRandom:
00D2 D28E            443                     SETB TR1 ;stop timer during buffer update
00D4 D28C            444                     SETB TR0
00D6 D2AF            445                     SETB EA
                     446     
00D8 32              447     reti
                     448     
                     449     
                     450     ;Shift byte from R6 into shift registers
00D9                 451     shiftR6:
A51 MACRO ASSEMBLER  MAIN                                                                 05/06/2016 13:52:25 PAGE     8

00D9 C0E0            452                                     push Acc
00DB EE              453                                     MOV A, R6 
00DC 7E08            454                                     MOV R6, #08 ;counting register to 8
00DE                 455                                     Reg:
00DE 13              456                                     RRC A ;rotate accumulator
00DF 92C1            457                                     MOV P4.1,C ;carry to Data
00E1 D2C0            458                                     SETB P4.0 ; cycle serial clock
00E3 C2C0            459                                     CLR P4.0
00E5 DEF7            460                                     DJNZ R6,Reg ;if 8 bits are shifted go further otherwise rep
                             eat
00E7 D0E0            461                                     pop Acc
00E9 22              462                                     ret
                     463     ;Last line of code
                     464     
                     465     
00EA                 466     dispRowShift:
00EA E7              467             MOV A,@R1
00EB 13              468             RRC A
00EC F7              469             MOV @R1,A
00ED 19              470             DEC R1
00EE DEFA            471             DJNZ R6, dispRowShift
00F0 22              472             RET
                     473     ;shift 7 MSB in framebuffer
00F1                 474     dispColShift:
00F1 EF              475             MOV A, R7
00F2 7D07            476             MOV     R5, #07 ;counter to count rows
                     477             ;RRC A ;rotate to drop LSB
00F4 7952            478             MOV R1, #52h ; start at highest address to decrease each time
00F6                 479     dispColShiftLoop:
00F6 13              480             RRC A ;Rotate LSB in carry to shift in row
00F7 7E05            481             MOV     R6, #05 ; counter to rotate 5 horizontal bytes
00F9 C0E0            482             PUSH ACC ; push acc to save current data
00FB 11EA            483             ACALL dispRowShift ; rotate all row bytes
00FD D0E0            484             POP ACC
00FF DDF5            485             DJNZ R5, dispColShiftLoop
0101 22              486             RET
                     487             
                     488     ;rudimentary delay for test purposes
0102                 489     delay:   
0102 7E9F            490                     MOV R6, #09Fh
0104 120108          491                     LCALL loop
0107 22              492                     RET
                     493     
0108                 494     loop:   
0108 7F00            495                     MOV R7, #00h
010A 120110          496                     LCALL loop2
010D D9F9            497                     DJNZ R1, loop
010F 22              498                     RET
                     499                     
0110 DAFE            500     loop2:  DJNZ R2,loop2
0112 22              501                     RET
                     502                     
                     503                     
                     504     ;random number generator code trough LFSR               
0113                 505     LFSR: 
0113 D2D4            506             SETB RS1 ;move to registerbank 08h to 0Fh
0115 D2D3            507             SETB RS0
0117 E8              508             MOV A,R0 ;Save highest byte to address
0118 FC              509             MOV R4,A
0119 12013E          510             lcall LFSRShift
011C 12013E          511             lcall LFSRShift
011F 6C              512             XRL A,R4
0120 FC              513             MOV R4,A
0121 12013E          514             lcall LFSRShift
0124 12013E          515             lcall LFSRShift
0127 12013E          516             lcall LFSRShift
A51 MACRO ASSEMBLER  MAIN                                                                 05/06/2016 13:52:25 PAGE     9

012A 12013E          517             lcall LFSRShift
012D 6C              518             XRL A,R4
012E FC              519             MOV R4,A                
012F 12013E          520             lcall LFSRShift
0132 6C              521             XRL A,R4
0133 FC              522             MOV R4,A
0134 12013E          523             lcall LFSRShift
0137 EC              524             MOV A,R4
0138 FB              525             MOV R3,A
                     526             
0139 C2D4            527             CLR RS1 ;move to registerbank 08h to 0Fh
013B C2D3            528             CLR RS0
                     529             
013D 22              530             RET
                     531             
                     532     ;shift the 32 bit registers of the LFSR
013E                 533     LFSRShift: 
013E EB              534             MOV A,R3 ; rotate shift register
013F 33              535             RLC A
0140 FB              536             MOV R3,A
0141 EA              537             MOV A,R2 ; rotate shift register
0142 33              538             RLC A
0143 FA              539             MOV R2,A
0144 E9              540             MOV A,R1 ; rotate shift register
0145 33              541             RLC A
0146 F9              542             MOV R1,A
0147 E8              543             MOV A,R0 ; rotate shift register
0148 33              544             RLC A
0149 F8              545             MOV R0,A
014A 22              546             ret     
                     547             
                     548     
014B                 549             block0:
014B 3E              550             db 0x3e
014C 3E              551             db 0x3e
014D 3E              552             db 0x3e
014E 3E              553             db 0x3e
                     554             
                     555             
014F                 556             block1:
                     557             
014F 3E              558             db 0x3e
0150 1C              559             db 0x1C
0151 1C              560             db 0x1C
0152 3E              561             db 0x3e
                     562             
0153                 563             block2:
                     564             
0153 3E              565             db 0x3e
0154 38              566             db 0x38
0155 38              567             db 0x38
0156 3E              568             db 0x3e
                     569                     
0157                 570             block3:
                     571             
0157 3E              572             db 0x3e
0158 18              573             db 0x18
0159 18              574             db 0x18
015A 3E              575             db 0x3e
                     576                     
015B                 577             block4:
                     578             
015B 3E              579             db 0x3e
015C 06              580             db 0x06
015D 06              581             db 0x06
015E 3E              582             db 0x3e
A51 MACRO ASSEMBLER  MAIN                                                                 05/06/2016 13:52:25 PAGE    10

                     583             
015F                 584             block5:
015F 3E              585             db 0x3e
0160 08              586             db 0x08
0161 08              587             db 0x08
0162 3E              588             db 0x3e
                     589                     
0163                 590             block6:
                     591             
0163 3E              592             db 0x3e
0164 32              593             db 0x32
0165 32              594             db 0x32
0166 3E              595             db 0x3e
                     596                     
0167                 597             block7:
0167 3E              598             db 0x3e
0168 26              599             db 0x26
0169 26              600             db 0x26
016A 3E              601             db 0x3e
                     602                     
                     603                     
                     604     
                     605     END
                             
                                     
                                             
A51 MACRO ASSEMBLER  MAIN                                                                 05/06/2016 13:52:25 PAGE    11

SYMBOL TABLE LISTING
------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES

AC . . . . . . . .  B ADDR   00D0H.6 A   
ACC. . . . . . . .  D ADDR   00E0H   A   
ADCF . . . . . . .  D ADDR   00F6H   A   
ADCLK. . . . . . .  D ADDR   00F2H   A   
ADCON. . . . . . .  D ADDR   00F3H   A   
ADDH . . . . . . .  D ADDR   00F5H   A   
ADDL . . . . . . .  D ADDR   00F4H   A   
AFTERRANDOM. . . .  C ADDR   00D2H   A   
AUXR . . . . . . .  D ADDR   008EH   A   
AUXR1. . . . . . .  D ADDR   00A2H   A   
B. . . . . . . . .  D ADDR   00F0H   A   
BLOCK0 . . . . . .  C ADDR   014BH   A   
BLOCK1 . . . . . .  C ADDR   014FH   A   
BLOCK2 . . . . . .  C ADDR   0153H   A   
BLOCK3 . . . . . .  C ADDR   0157H   A   
BLOCK4 . . . . . .  C ADDR   015BH   A   
BLOCK5 . . . . . .  C ADDR   015FH   A   
BLOCK6 . . . . . .  C ADDR   0163H   A   
BLOCK7 . . . . . .  C ADDR   0167H   A   
CANBT1 . . . . . .  D ADDR   00B4H   A   
CANBT2 . . . . . .  D ADDR   00B5H   A   
CANBT3 . . . . . .  D ADDR   00B6H   A   
CANCONCH . . . . .  D ADDR   00B3H   A   
CANEN1 . . . . . .  D ADDR   00CEH   A   
CANEN2 . . . . . .  D ADDR   00CFH   A   
CANGCON. . . . . .  D ADDR   00ABH   A   
CANGIE . . . . . .  D ADDR   00C1H   A   
CANGIT . . . . . .  D ADDR   009BH   A   
CANGSTA. . . . . .  D ADDR   00AAH   A   
CANIDM1. . . . . .  D ADDR   00C4H   A   
CANIDM2. . . . . .  D ADDR   00C5H   A   
CANIDM3. . . . . .  D ADDR   00C6H   A   
CANIDM4. . . . . .  D ADDR   00C7H   A   
CANIDT1. . . . . .  D ADDR   00BCH   A   
CANIDT2. . . . . .  D ADDR   00BDH   A   
CANIDT3. . . . . .  D ADDR   00BEH   A   
CANIDT4. . . . . .  D ADDR   00BFH   A   
CANIE1 . . . . . .  D ADDR   00C2H   A   
CANIE2 . . . . . .  D ADDR   00C3H   A   
CANMSG . . . . . .  D ADDR   00A3H   A   
CANPAGE. . . . . .  D ADDR   00B1H   A   
CANREC . . . . . .  D ADDR   009DH   A   
CANSIT1. . . . . .  D ADDR   00BAH   A   
CANSIT2. . . . . .  D ADDR   00BBH   A   
CANSTCH. . . . . .  D ADDR   00B2H   A   
CANSTMPH . . . . .  D ADDR   00AFH   A   
CANSTMPL . . . . .  D ADDR   00AEH   A   
CANTCON. . . . . .  D ADDR   00A1H   A   
CANTEC . . . . . .  D ADDR   009CH   A   
CANTIMH. . . . . .  D ADDR   00ADH   A   
CANTIML. . . . . .  D ADDR   00ACH   A   
CANTTCH. . . . . .  D ADDR   00A5H   A   
CANTTCL. . . . . .  D ADDR   00A4H   A   
CCAP0H . . . . . .  D ADDR   00FAH   A   
CCAP0L . . . . . .  D ADDR   00EAH   A   
CCAP1H . . . . . .  D ADDR   00FBH   A   
CCAP1L . . . . . .  D ADDR   00EBH   A   
CCAP2H . . . . . .  D ADDR   00FCH   A   
CCAP2L . . . . . .  D ADDR   00ECH   A   
CCAP3H . . . . . .  D ADDR   00FDH   A   
A51 MACRO ASSEMBLER  MAIN                                                                 05/06/2016 13:52:25 PAGE    12

CCAP3L . . . . . .  D ADDR   00EDH   A   
CCAP4H . . . . . .  D ADDR   00FEH   A   
CCAP4L . . . . . .  D ADDR   00EEH   A   
CCAPM0 . . . . . .  D ADDR   00DAH   A   
CCAPM1 . . . . . .  D ADDR   00DBH   A   
CCAPM2 . . . . . .  D ADDR   00DCH   A   
CCAPM3 . . . . . .  D ADDR   00DDH   A   
CCAPM4 . . . . . .  D ADDR   00DEH   A   
CCF0 . . . . . . .  B ADDR   00D0H.0 A   
CCF1 . . . . . . .  B ADDR   00D0H.1 A   
CCF2 . . . . . . .  B ADDR   00D0H.2 A   
CCF3 . . . . . . .  B ADDR   00D0H.3 A   
CCF4 . . . . . . .  B ADDR   00D0H.4 A   
CCON . . . . . . .  D ADDR   00D8H   A   
CF . . . . . . . .  B ADDR   00D8H.7 A   
CH . . . . . . . .  D ADDR   00F9H   A   
CKCON. . . . . . .  D ADDR   008FH   A   
CL . . . . . . . .  D ADDR   00E9H   A   
CMOD . . . . . . .  D ADDR   00D9H   A   
CP_RL2 . . . . . .  B ADDR   00C8H.0 A   
CR . . . . . . . .  B ADDR   00D8H.6 A   
CY . . . . . . . .  B ADDR   00D0H.7 A   
C_T2 . . . . . . .  B ADDR   00C8H.1 A   
DELAY. . . . . . .  C ADDR   0102H   A   
DISPCOLSHIFT . . .  C ADDR   00F1H   A   
DISPCOLSHIFTLOOP .  C ADDR   00F6H   A   
DISPROWSHIFT . . .  C ADDR   00EAH   A   
DPH. . . . . . . .  D ADDR   0083H   A   
DPL. . . . . . . .  D ADDR   0082H   A   
EA . . . . . . . .  B ADDR   00A8H.7 A   
EADC . . . . . . .  B ADDR   00E8H.1 A   
EC . . . . . . . .  B ADDR   00A8H.6 A   
ECAN . . . . . . .  B ADDR   00E8H.0 A   
EECON. . . . . . .  D ADDR   00D2H   A   
ES . . . . . . . .  B ADDR   00A8H.4 A   
ET0. . . . . . . .  B ADDR   00A8H.1 A   
ET1. . . . . . . .  B ADDR   00A8H.3 A   
ET2. . . . . . . .  B ADDR   00A8H.5 A   
ETIM . . . . . . .  B ADDR   00E8H.2 A   
EX0. . . . . . . .  B ADDR   00A8H.0 A   
EX1. . . . . . . .  B ADDR   00A8H.2 A   
EXEN2. . . . . . .  B ADDR   00C8H.3 A   
EXF2 . . . . . . .  B ADDR   00C8H.6 A   
F0 . . . . . . . .  B ADDR   00D0H.5 A   
FCON . . . . . . .  D ADDR   00D1H   A   
FE . . . . . . . .  B ADDR   0098H.7 A   
FPGACON. . . . . .  D ADDR   00F1H   A   
GAMEINIT . . . . .  C ADDR   0042H   A   
IE0. . . . . . . .  B ADDR   0088H.1 A   
IE1. . . . . . . .  B ADDR   0088H.3 A   
IEN0 . . . . . . .  D ADDR   00A8H   A   
IEN1 . . . . . . .  D ADDR   00E8H   A   
INIT . . . . . . .  C ADDR   001EH   A   
INT0 . . . . . . .  B ADDR   00B0H.2 A   
INT1 . . . . . . .  B ADDR   00B0H.3 A   
IPH0 . . . . . . .  D ADDR   00B7H   A   
IPH1 . . . . . . .  D ADDR   00F7H   A   
IPL0 . . . . . . .  D ADDR   00B8H   A   
IPL1 . . . . . . .  D ADDR   00F8H   A   
ISR_TMR0 . . . . .  C ADDR   005DH   A   
ISR_TMR1 . . . . .  C ADDR   00A8H   A   
IT0. . . . . . . .  B ADDR   0088H.0 A   
IT1. . . . . . . .  B ADDR   0088H.2 A   
LASTLINECOMP . . .  C ADDR   008FH   A   
LFSR . . . . . . .  C ADDR   0113H   A   
LFSRSHIFT. . . . .  C ADDR   013EH   A   
A51 MACRO ASSEMBLER  MAIN                                                                 05/06/2016 13:52:25 PAGE    13

LINEBYTES. . . . .  C ADDR   0075H   A   
LOOP . . . . . . .  C ADDR   0108H   A   
LOOP2. . . . . . .  C ADDR   0110H   A   
MAIN . . . . . . .  C ADDR   005AH   A   
OV . . . . . . . .  B ADDR   00D0H.2 A   
P. . . . . . . . .  B ADDR   00D0H.0 A   
P0 . . . . . . . .  D ADDR   0080H   A   
P1 . . . . . . . .  D ADDR   0090H   A   
P2 . . . . . . . .  D ADDR   00A0H   A   
P3 . . . . . . . .  D ADDR   00B0H   A   
P4 . . . . . . . .  D ADDR   00C0H   A   
PCON . . . . . . .  D ADDR   0087H   A   
PSW. . . . . . . .  D ADDR   00D0H   A   
RAMINIT. . . . . .  C ADDR   0038H   A   
RB8. . . . . . . .  B ADDR   0098H.2 A   
RCAP2H . . . . . .  D ADDR   00CBH   A   
RCAP2L . . . . . .  D ADDR   00CAH   A   
RCLK . . . . . . .  B ADDR   00C8H.5 A   
RD . . . . . . . .  B ADDR   00B0H.7 A   
REG. . . . . . . .  C ADDR   00DEH   A   
REN. . . . . . . .  B ADDR   0098H.4 A   
RI . . . . . . . .  B ADDR   0098H.0 A   
ROWITERATION . . .  C ADDR   0073H   A   
RS0. . . . . . . .  B ADDR   00D0H.3 A   
RS1. . . . . . . .  B ADDR   00D0H.4 A   
RXD. . . . . . . .  B ADDR   00B0H.0 A   
SADDR. . . . . . .  D ADDR   00A9H   A   
SADEN. . . . . . .  D ADDR   00B9H   A   
SBUF . . . . . . .  D ADDR   0099H   A   
SCON . . . . . . .  D ADDR   0098H   A   
SHIFTR6. . . . . .  C ADDR   00D9H   A   
SM0. . . . . . . .  B ADDR   0098H.7 A   
SM1. . . . . . . .  B ADDR   0098H.6 A   
SM2. . . . . . . .  B ADDR   0098H.5 A   
SP . . . . . . . .  D ADDR   0081H   A   
T0 . . . . . . . .  B ADDR   00B0H.4 A   
T1 . . . . . . . .  B ADDR   00B0H.5 A   
T2CON. . . . . . .  D ADDR   00C8H   A   
T2MOD. . . . . . .  D ADDR   00C9H   A   
TB8. . . . . . . .  B ADDR   0098H.3 A   
TCLK . . . . . . .  B ADDR   00C8H.4 A   
TCON . . . . . . .  D ADDR   0088H   A   
TF0. . . . . . . .  B ADDR   0088H.5 A   
TF1. . . . . . . .  B ADDR   0088H.7 A   
TF2. . . . . . . .  B ADDR   00C8H.7 A   
TH0. . . . . . . .  D ADDR   008CH   A   
TH1. . . . . . . .  D ADDR   008DH   A   
TH2. . . . . . . .  D ADDR   00CDH   A   
TI . . . . . . . .  B ADDR   0098H.1 A   
TL0. . . . . . . .  D ADDR   008AH   A   
TL1. . . . . . . .  D ADDR   008BH   A   
TL2. . . . . . . .  D ADDR   00CCH   A   
TMOD . . . . . . .  D ADDR   0089H   A   
TR0. . . . . . . .  B ADDR   0088H.4 A   
TR1. . . . . . . .  B ADDR   0088H.6 A   
TR2. . . . . . . .  B ADDR   00C8H.2 A   
TXD. . . . . . . .  B ADDR   00B0H.1 A   
WDTPRG . . . . . .  D ADDR   00A7H   A   
WDTRST . . . . . .  D ADDR   00A6H   A   
WR . . . . . . . .  B ADDR   00B0H.6 A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
