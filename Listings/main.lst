A51 MACRO ASSEMBLER  MAIN                                                                 05/06/2016 14:58:14 PAGE     1


MACRO ASSEMBLER A51 V8.02c
OBJECT MODULE PLACED IN .\Objects\main.obj
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE main.a51 NOMOD51 SET(SMALL) DEBUG PRINT(.\Listings\main.lst) OBJECT(.\O
                      bjects\main.obj) EP

LOC  OBJ            LINE     SOURCE

                       1     
                       2     ;*******************************************
                       3     ;* Sensors & Microsystem electronics       *
                       4     ;*                                         *
                       5     ;* Names: Steven Peters - Thomas Lapauw    *
                       6     ;*                                         *
                       7     ;*                Task 9                   *
                       8     ;*                                         *
                       9     ;*******************************************
                      10     
                      11     
                      12     ;Special register declarations
                      13     ;$include (t89c51cc01.inc)
                +1    14     ;*INC*************************************************************************
                +1    15     ; NAME: 89C51CC01.inc           
                +1    16     ;----------------------------------------------------------------------------
                +1    17     ; PURPOSE: for Keil
                +1    18     ;*****************************************************************************
                +1    19     
                +1    20     ;----------------------------------------
                +1    21     ; Include file for 8051 SFR Definitions  
                +1    22     ;----------------------------------------
                +1    23     
                +1    24     ;  BYTE Register 
  0080          +1    25     P0      DATA    80H
  0090          +1    26     P1      DATA    90H
  00A0          +1    27     P2      DATA    0A0H
                +1    28     
  00B0          +1    29     P3      DATA    0B0H
  00B7          +1    30     RD      BIT     0B7H
  00B6          +1    31     WR      BIT     0B6H
  00B5          +1    32     T1      BIT     0B5H
  00B4          +1    33     T0      BIT     0B4H
  00B3          +1    34     INT1    BIT     0B3H
  00B2          +1    35     INT0    BIT     0B2H
  00B1          +1    36     TXD     BIT     0B1H
  00B0          +1    37     RXD     BIT     0B0H
                +1    38     
  00C0          +1    39     P4      DATA    0C0H
                +1    40     
  00D0          +1    41     PSW     DATA    0D0H
  00D7          +1    42     CY      BIT     0D7H
  00D6          +1    43     AC      BIT     0D6H
  00D5          +1    44     F0      BIT     0D5H
  00D4          +1    45     RS1     BIT     0D4H
  00D3          +1    46     RS0     BIT     0D3H
  00D2          +1    47     OV      BIT     0D2H
  00D0          +1    48     P       BIT     0D0H
                +1    49     
  00E0          +1    50     ACC     DATA    0E0H
  00F0          +1    51     B       DATA    0F0H
  0081          +1    52     SP      DATA    81H
  0082          +1    53     DPL     DATA    82H
  0083          +1    54     DPH     DATA    83H
  0087          +1    55     PCON    DATA    87H
  008F          +1    56     CKCON   DATA    8FH
                +1    57     
A51 MACRO ASSEMBLER  MAIN                                                                 05/06/2016 14:58:14 PAGE     2

                +1    58     ;------------------ TIMERS registers ---------------------
  0088          +1    59     TCON    DATA    88H
  008F          +1    60     TF1     BIT     8FH
  008E          +1    61     TR1     BIT     8EH
  008D          +1    62     TF0     BIT     8DH
  008C          +1    63     TR0     BIT     8CH
  008B          +1    64     IE1     BIT     8BH
  008A          +1    65     IT1     BIT     8AH
  0089          +1    66     IE0     BIT     89H
  0088          +1    67     IT0     BIT     88H
                +1    68             
  0089          +1    69     TMOD    DATA    89H
                +1    70     
  00C8          +1    71     T2CON   DATA    0C8H
  00CF          +1    72     TF2     BIT     0CFH
  00CE          +1    73     EXF2    BIT     0CEH
  00CD          +1    74     RCLK    BIT     0CDH
  00CC          +1    75     TCLK    BIT     0CCH
  00CB          +1    76     EXEN2   BIT     0CBH
  00CA          +1    77     TR2     BIT     0CAH
  00C9          +1    78     C_T2    BIT     0C9H
  00C8          +1    79     CP_RL2  BIT     0C8H
                +1    80             
  00C9          +1    81     T2MOD   DATA    0C9H    
  008A          +1    82     TL0     DATA    8AH
  008B          +1    83     TL1     DATA    8BH
  00CC          +1    84     TL2     DATA    0CCH
  008C          +1    85     TH0     DATA    8CH
  008D          +1    86     TH1     DATA    8DH
  00CD          +1    87     TH2     DATA    0CDH    
  00CA          +1    88     RCAP2L  DATA    0CAH    
  00CB          +1    89     RCAP2H  DATA    0CBH    
  00A6          +1    90     WDTRST  DATA    0A6H    
  00A7          +1    91     WDTPRG  DATA    0A7H    
                +1    92     
                +1    93     
                +1    94     ;------------------- UART registers ------------------------
  0098          +1    95     SCON    DATA    98H
  009F          +1    96     SM0     BIT     9FH
  009F          +1    97     FE      BIT     9FH
  009E          +1    98     SM1     BIT     9EH
  009D          +1    99     SM2     BIT     9DH
  009C          +1   100     REN     BIT     9CH
  009B          +1   101     TB8     BIT     9BH
  009A          +1   102     RB8     BIT     9AH
  0099          +1   103     TI      BIT     99H
  0098          +1   104     RI      BIT     98H
                +1   105     
  0099          +1   106     SBUF    DATA    99H
  00B9          +1   107     SADEN   DATA    0B9H
  00A9          +1   108     SADDR   DATA    0A9H    
                +1   109     
                +1   110     ;-------------------- ADC registers ----------------------
  00F2          +1   111     ADCLK   DATA    0F2H    
  00F3          +1   112     ADCON   DATA    0F3H    
  00F4          +1   113     ADDL    DATA    0F4H    
  00F5          +1   114     ADDH    DATA    0F5H    
  00F6          +1   115     ADCF    DATA    0F6H    
                +1   116     
                +1   117     ;-------------------- FLASH EEPROM registers ------------
  00F1          +1   118     FPGACON  DATA   0F1H    
  00D1          +1   119     FCON    DATA    0D1H    
  00D2          +1   120     EECON   DATA    0D2H    
  008E          +1   121     AUXR    DATA    8EH
  00A2          +1   122     AUXR1   DATA    0A2H
                +1   123     
A51 MACRO ASSEMBLER  MAIN                                                                 05/06/2016 14:58:14 PAGE     3

                +1   124     ;-------------------- IT registers -----------------------
  00F8          +1   125     IPL1    DATA    0F8H    
  00F7          +1   126     IPH1    DATA    0F7H    
  00A8          +1   127     IEN0    DATA    0A8H    
  00B8          +1   128     IPL0    DATA    0B8H    
  00B7          +1   129     IPH0    DATA    0B7H    
  00E8          +1   130     IEN1    DATA    0E8H    
                +1   131     
                +1   132     ;  IEN0  
  00AF          +1   133     EA      BIT     0AFH
  00AE          +1   134     EC      BIT     0AEH
  00AD          +1   135     ET2     BIT     0ADH
  00AC          +1   136     ES      BIT     0ACH
  00AB          +1   137     ET1     BIT     0ABH
  00AA          +1   138     EX1     BIT     0AAH
  00A9          +1   139     ET0     BIT     0A9H
  00A8          +1   140     EX0     BIT     0A8H
                +1   141     
                +1   142     ;  IEN1 
  00EA          +1   143     ETIM    BIT     0EAH
  00E9          +1   144     EADC    BIT     0E9H
  00E8          +1   145     ECAN    BIT     0E8H
                +1   146     
                +1   147     ;--------------------- PCA registers --------------------
  00D8          +1   148     CCON    DATA    0D8H    
  00DF          +1   149     CF              BIT             0DFH
  00DE          +1   150     CR              BIT             0DEH
  00D4          +1   151     CCF4    BIT             0D4H
  00D3          +1   152     CCF3    BIT             0D3H
  00D2          +1   153     CCF2    BIT             0D2H
  00D1          +1   154     CCF1    BIT             0D1H
  00D0          +1   155     CCF0    BIT             0D0H
                +1   156     
  00D9          +1   157     CMOD    DATA    0D9H    
  00F9          +1   158     CH      DATA    0F9H    
  00E9          +1   159     CL      DATA    0E9H    
  00FA          +1   160     CCAP0H  DATA    0FAH    
  00EA          +1   161     CCAP0L  DATA    0EAH    
  00DA          +1   162     CCAPM0  DATA    0DAH    
  00FB          +1   163     CCAP1H  DATA    0FBH    
  00EB          +1   164     CCAP1L  DATA    0EBH    
  00DB          +1   165     CCAPM1  DATA    0DBH    
  00FC          +1   166     CCAP2H  DATA    0FCH    
  00EC          +1   167     CCAP2L  DATA    0ECH    
  00DC          +1   168     CCAPM2  DATA    0DCH    
  00FD          +1   169     CCAP3H  DATA    0FDH    
  00ED          +1   170     CCAP3L  DATA    0EDH    
  00DD          +1   171     CCAPM3  DATA    0DDH    
  00FE          +1   172     CCAP4H  DATA    0FEH    
  00EE          +1   173     CCAP4L  DATA    0EEH    
  00DE          +1   174     CCAPM4  DATA    0DEH    
                +1   175     
                +1   176     ;------------------- CAN registers --------------------------
  009B          +1   177     CANGIT          DATA    09BH
  009C          +1   178     CANTEC          DATA    09CH
  009D          +1   179     CANREC          DATA    09DH
  00A1          +1   180     CANTCON         DATA    0A1H    
  00A3          +1   181     CANMSG          DATA    0A3H    
  00A4          +1   182     CANTTCL         DATA    0A4H    
  00A5          +1   183     CANTTCH         DATA    0A5H    
  00AA          +1   184     CANGSTA         DATA    0AAH
  00AB          +1   185     CANGCON         DATA    0ABH
  00AC          +1   186     CANTIML         DATA    0ACH    
  00AD          +1   187     CANTIMH         DATA    0ADH    
  00AE          +1   188     CANSTMPL        DATA    0AEH    
  00AF          +1   189     CANSTMPH        DATA    0AFH
A51 MACRO ASSEMBLER  MAIN                                                                 05/06/2016 14:58:14 PAGE     4

  00B1          +1   190     CANPAGE         DATA    0B1H
  00B2          +1   191     CANSTCH         DATA    0B2H    
  00B3          +1   192     CANCONCH        DATA    0B3H    
  00B4          +1   193     CANBT1          DATA    0B4H
  00B5          +1   194     CANBT2          DATA    0B5H
  00B6          +1   195     CANBT3          DATA    0B6H
  00BA          +1   196     CANSIT1         DATA    0BAH
  00BB          +1   197     CANSIT2         DATA    0BBH    
  00BC          +1   198     CANIDT1         DATA    0BCH
  00BD          +1   199     CANIDT2         DATA    0BDH    
  00BE          +1   200     CANIDT3         DATA    0BEH    
  00BF          +1   201     CANIDT4         DATA    0BFH    
  00C1          +1   202     CANGIE          DATA    0C1H
  00C2          +1   203     CANIE1          DATA    0C2H    
  00C3          +1   204     CANIE2          DATA    0C3H
  00C4          +1   205     CANIDM1         DATA    0C4H
  00C5          +1   206     CANIDM2         DATA    0C5H
  00C6          +1   207     CANIDM3         DATA    0C6H
  00C7          +1   208     CANIDM4         DATA    0C7H
  00CE          +1   209     CANEN1          DATA    0CEH
  00CF          +1   210     CANEN2          DATA    0CFH
                +1   211     
                +1   212     
                     213     
                     214             
                     215     ;Boot code
0000                 216     ORG 0000h
0000 020046          217     LJMP init 
                     218     
                     219     ;Interrupt address vectors
                     220     ;Specify tmr0 interrupt address vector 
000B                 221     ORG 000Bh
000B 02008D          222     LJMP ISR_tmr0
                     223     
001B                 224     ORG 001Bh
001B 0200E6          225     LJMP ISR_tmr1
                     226     
0043                 227     ORG 0043h
0043 020117          228     LJMP ISR_ADC
                     229     ;Address declarations
                     230     
                     231     ;Constants
                     232     
                     233     ;Initialization code
0046                 234     init:   
                     235     
                     236                             ;Initialization code here
                     237                             ;CLR P2.3 ;led to see if code is running
                     238                             
                     239                             ;init tmr0
0046 758911          240                             MOV TMOD,#00010001b ;config tmr0 & tmr1 in 16bit mode
0049 758CFF          241                             MOV TH0,#0FFh ;tmr0 MSB
004C 758AFF          242                             MOV TL0,#0FFh ;tmr0 LSB
                     243                             
004F 758DFF          244                             MOV TH1,#0FFh ;tmr0 MSB
0052 758BFF          245                             MOV TL1,#0FFh ;tmr0 LSB
                     246                             
0055 D2AB            247                             SETB ET1
0057 D2A9            248                             SETB ET0 ;enable interrupt of tmr0
                     249     
                     250     
0059 758170          251                             MOV SP, #70h ; move stackpointer above registers
                     252                              
                     253                              
                     254     ;Initialize ram                  
005C 7830            255                             MOV R0,#030h 
A51 MACRO ASSEMBLER  MAIN                                                                 05/06/2016 14:58:14 PAGE     5

005E 7928            256                             MOV R1,#040
0060                 257     ramInit:
0060 76FF            258                             MOV @R0,#0FFh
0062 08              259                             INC R0
0063 D9FB            260                             DJNZ R1,ramInit
                     261                             
                     262     ; seed of LFSR          
0065 75186A          263     MOV 18h, #1101010b 
                     264     
0068 7828            265     MOV R0,#040
006A                 266     gameInit:
006A 7F3E            267                     MOV R7,#03eh ; stockate data in R7 for collumnshift
006C 120147          268                     LCALL dispColShift
006F D8F9            269                     DJNZ R0, gameInit
                     270     
                     271     
0071 E518            272                     MOV A,18h ; get data from MSB LFSR
0073 541C            273                     ANL A,#0011100b ;mask for the number of blocks          
0075 F553            274                     MOV 53h, A ; save current adress for next block
                     275     
                     276     
                     277     ;**********************************************************************************
                     278             ; Setup for the ADC
0077 75F6FF          279             MOV ADCF,#0FFh ;enable the adc...
007A D2E9            280             SETB EADC
007C 75F32F          281             MOV ADCON, #00101111b ; set P1.0 as ADC input
                     282     
                     283     
007F C2A3            284     CLR P2.3 ;led to see if code is running
                     285     
0081 D28C            286     SETB TR0 ;run tmr0
0083 D28E            287     SETB TR1
0085 D2AF            288     SETB EA ;global interrupt enable
                     289     
0087 02008A          290     LJMP main
                     291                             
                     292     ;Main program
008A                 293     main:           
                     294     
                     295     
                     296                                     
008A 02008A          297                             LJMP main
                     298                     
                     299     ;Interrupt handlers
                     300     
                     301     
008D                 302     ISR_tmr0: 
008D C2AF            303                             CLR EA ;global interrupt disable
008F C28C            304                             CLR TR0 ;stop tmr0
0091 C28E            305                             CLR TR1
                     306                             ;reload timer
0093 758CD0          307                             MOV TH0,#0D0h ;tmr0 MSB
0096 758A00          308                             MOV TL0,#000h ;tmr0 LSB
                     309                             
                     310     ;DISPLAY PART
0099 C2D4            311                     CLR RS1 ;move to registerbank 08h to 0Fh
009B D2D3            312                     SETB RS0
009D 7907            313                     MOV R1, #07 ;counting register to 8 for rows
009F 7A7F            314                     MOV R2, #01111111b ;data rows (msb = 0, others are 1) single bit zero, to e
                             nable current row
00A1 7830            315                     MOV R0, #030h ; starting adress disp mem
00A3                 316     rowIteration:
                     317     
00A3 7F05            318                             MOV R7, #05 ; counter for 5 bytes of row data
00A5                 319     lineBytes:
00A5 E6              320                             MOV A,@R0 ; get data from ram
A51 MACRO ASSEMBLER  MAIN                                                                 05/06/2016 14:58:14 PAGE     6

00A6 FE              321                             MOV R6,A
00A7 312F            322                             acall shiftR6 ; shift byte into ram
00A9 08              323                             INC R0 ; get next byte
00AA DFF9            324                             DJNZ R7,lineBytes ; rinse and repeat
                     325                             
                     326                             ;shift R2 with the current row enable in the register
00AC EA              327                             MOV A,R2
00AD FE              328                             MOV R6, A
00AE 312F            329                             Acall shiftR6 ; shift column data byte into SR
00B0 D2B2            330                             SETB P3.2 ; cycle store clock
00B2 C2B2            331                             CLR P3.2
                     332     
                     333                             ;rotate row bit to enable next row
00B4 EA              334                             MOV A, R2 
00B5 03              335                             RR A
00B6 FA              336                             MOV R2,A
                     337                              ; repeat until 7 rows done
00B7 D9EA            338                             DJNZ R1, rowIteration
                     339                             
                     340                             
00B9 7EDF            341                             MOV R6, #11011111b
00BB 312F            342                             Acall shiftR6 ; shift collumn data byte into SR
                     343                             
00BD 7904            344                             MOV R1, #04
00BF                 345     lastLineComp:                    ;loop to approximate the timing of the other rows to have 
                             similar brightness
00BF 7EFF            346                             MOV R6, #0FFh
00C1 312F            347                             Acall shiftR6 ; shift collumn data byte into SR
00C3 D9FA            348                             DJNZ R1,lastLineComp
                     349                             
                     350     
                     351                             ;MOV R6, #11101111b
00C5 E55A            352                             MOV A,5Ah
00C7 54E0            353                             ANL A, #11100000b
00C9 23              354                             RL A
00CA 23              355                             RL A
00CB 23              356                             RL A
00CC FE              357                             MOV R6, A
00CD 74FE            358                             MOV A,#11111110b
00CF                 359             locationLbl:
00CF 03              360                             RR A
00D0 DEFD            361                             DJNZ R6,locationLbl
00D2 4483            362                             ORL A,#10000011b
00D4 FE              363                             MOV R6,A
00D5 312F            364                             Acall shiftR6 ; shift collumn data byte into SR
                     365                             
00D7 D2B2            366                             SETB P3.2 ; cycle store clock
00D9 C2B2            367                             CLR P3.2
                     368     
00DB C2D4            369                             CLR RS1 ;move to registerbank 00h to 08h
00DD C2D3            370                             CLR RS0 
                     371                             ;reenable timers
00DF D28C            372                             SETB TR0 ;run tmr0
00E1 D28E            373                             SETB TR1
00E3 D2AF            374                             SETB EA ;global interrupt disable
                     375                             
00E5 32              376                             RETI
                     377     
                     378     
00E6                 379     ISR_tmr1:
                     380     ;DISPLAY PART
00E6 C28C            381                     CLR TR0 ;stop timer during buffer update
00E8 C28E            382                     CLR TR1 ;stop timer during buffer update
00EA C2AF            383                     CLR EA ;global interrupt disable
                     384                     
00EC 758D00          385                     MOV TH1,#00h ;tmr0 MSB
A51 MACRO ASSEMBLER  MAIN                                                                 05/06/2016 14:58:14 PAGE     7

00EF 758B00          386                     MOV TL1,#00h ;tmr0 LSB
                     387                     
                     388                     ;DJNZ R5, afterRandom
                     389                     
                     390                     
00F2 E553            391                     MOV A, 53h
00F4 9001A1          392                     MOV DPTR, #block0               ; begin bij block0
00F7 93              393                     MOVC A,@A+DPTR
                     394     
00F8 FF              395                     MOV R7,A ; stockate data in R7 for collumnshift
00F9 120147          396                     LCALL dispColShift
                     397                     
00FC E553            398                     MOV A, 53h ; retrieve current data offset
00FE 04              399                     INC A; advance one adress
00FF F553            400                     MOV 53h, A ; save current adress
                     401     
0101 DB0D            402                     DJNZ R3, afterRandom ; jupmp back to te iteration
0103 7B04            403                     MOV R3,#4 ; repeat 4 times
0105 E518            404                     MOV A,18h ; get data from MSB LFSR
0107 5438            405                     ANL A,#0111000b ;mask for the number of blocks          
0109 F553            406                     MOV 53h, A ; save current adress for next block
010B 120169          407                     LCALL LFSR  ; generate new random data
010E B2A4            408                     CPL P2.4 ; toggle led to see if working
                     409                     ;MOV R5,#2
0110                 410             afterRandom:
0110 D28E            411                     SETB TR1 ;stop timer during buffer update
0112 D28C            412                     SETB TR0
0114 D2AF            413                     SETB EA
                     414     
0116 32              415     reti
                     416     
0117                 417     ISR_ADC:
                     418     
0117 C28C            419                     CLR TR0 ;stop timer during buffer update
0119 C28E            420                     CLR TR1 ;stop timer during buffer update
011B C2AF            421                     CLR EA ;global interrupt disable
                     422                     
011D C0E0            423     push Acc
011F E5F5            424             MOV A, ADDH
0121 F55A            425             MOV 5Ah,A
0123 75F32F          426             MOV ADCON, #00101111b ; set P1.0 as ADC input, restart conversion
0126 D0E0            427     pop Acc
                     428     
0128 D28E            429                     SETB TR1 ;stop timer during buffer update
012A D28C            430                     SETB TR0
012C D2AF            431                     SETB EA
012E 32              432     reti
                     433     
                     434     
                     435     ;Shift byte from R6 into shift registers
012F                 436     shiftR6:
012F C0E0            437                                     push Acc
0131 EE              438                                     MOV A, R6 
0132 7E08            439                                     MOV R6, #08 ;counting register to 8
0134                 440                                     Reg:
0134 13              441                                     RRC A ;rotate accumulator
0135 92C1            442                                     MOV P4.1,C ;carry to Data
0137 D2C0            443                                     SETB P4.0 ; cycle serial clock
0139 C2C0            444                                     CLR P4.0
013B DEF7            445                                     DJNZ R6,Reg ;if 8 bits are shifted go further otherwise rep
                             eat
013D D0E0            446                                     pop Acc
013F 22              447                                     ret
                     448     ;Last line of code
                     449     
                     450     
A51 MACRO ASSEMBLER  MAIN                                                                 05/06/2016 14:58:14 PAGE     8

0140                 451     dispRowShift:
0140 E7              452             MOV A,@R1
0141 13              453             RRC A
0142 F7              454             MOV @R1,A
0143 19              455             DEC R1
0144 DEFA            456             DJNZ R6, dispRowShift
0146 22              457             RET
                     458     ;shift 7 MSB in framebuffer
0147                 459     dispColShift:
0147 EF              460             MOV A, R7
0148 7D07            461             MOV     R5, #07 ;counter to count rows
                     462             ;RRC A ;rotate to drop LSB
014A 7952            463             MOV R1, #52h ; start at highest address to decrease each time
014C                 464     dispColShiftLoop:
014C 13              465             RRC A ;Rotate LSB in carry to shift in row
014D 7E05            466             MOV     R6, #05 ; counter to rotate 5 horizontal bytes
014F C0E0            467             PUSH ACC ; push acc to save current data
0151 3140            468             ACALL dispRowShift ; rotate all row bytes
0153 D0E0            469             POP ACC
0155 DDF5            470             DJNZ R5, dispColShiftLoop
0157 22              471             RET
                     472             
                     473             
                     474             
                     475             
                     476             
                     477     ;rudimentary delay for test purposes
0158                 478     delay:   
0158 7E9F            479                     MOV R6, #09Fh
015A 12015E          480                     LCALL loop
015D 22              481                     RET
                     482     
015E                 483     loop:   
015E 7F00            484                     MOV R7, #00h
0160 120166          485                     LCALL loop2
0163 D9F9            486                     DJNZ R1, loop
0165 22              487                     RET
                     488                     
0166 DAFE            489     loop2:  DJNZ R2,loop2
0168 22              490                     RET
                     491                     
                     492                     
                     493     ;random number generator code trough LFSR               
0169                 494     LFSR: 
0169 D2D4            495             SETB RS1 ;move to registerbank 08h to 0Fh
016B D2D3            496             SETB RS0
016D E8              497             MOV A,R0 ;Save highest byte to address
016E FC              498             MOV R4,A
016F 120194          499             lcall LFSRShift
0172 120194          500             lcall LFSRShift
0175 6C              501             XRL A,R4
0176 FC              502             MOV R4,A
0177 120194          503             lcall LFSRShift
017A 120194          504             lcall LFSRShift
017D 120194          505             lcall LFSRShift
0180 120194          506             lcall LFSRShift
0183 6C              507             XRL A,R4
0184 FC              508             MOV R4,A                
0185 120194          509             lcall LFSRShift
0188 6C              510             XRL A,R4
0189 FC              511             MOV R4,A
018A 120194          512             lcall LFSRShift
018D EC              513             MOV A,R4
018E FB              514             MOV R3,A
                     515             
018F C2D4            516             CLR RS1 ;move to registerbank 08h to 0Fh
A51 MACRO ASSEMBLER  MAIN                                                                 05/06/2016 14:58:14 PAGE     9

0191 C2D3            517             CLR RS0
                     518             
0193 22              519             RET
                     520             
                     521     ;shift the 32 bit registers of the LFSR
0194                 522     LFSRShift: 
0194 EB              523             MOV A,R3 ; rotate shift register
0195 33              524             RLC A
0196 FB              525             MOV R3,A
0197 EA              526             MOV A,R2 ; rotate shift register
0198 33              527             RLC A
0199 FA              528             MOV R2,A
019A E9              529             MOV A,R1 ; rotate shift register
019B 33              530             RLC A
019C F9              531             MOV R1,A
019D E8              532             MOV A,R0 ; rotate shift register
019E 33              533             RLC A
019F F8              534             MOV R0,A
01A0 22              535             ret     
                     536             
                     537     
01A1                 538             block0:
01A1 3E              539             db 0x3e
01A2 3E              540             db 0x3e
01A3 3E              541             db 0x3e
01A4 3E              542             db 0x3e
01A5 3E              543             db 0x3e
01A6 3E              544             db 0x3e
01A7 3E              545             db 0x3e
01A8 3E              546             db 0x3e
                     547             
                     548             
01A9                 549             block1:
                     550             
01A9 3E              551             db 0x3e
01AA 3E              552             db 0x3e
01AB 3E              553             db 0x3e
01AC 1C              554             db 0x1C
01AD 1C              555             db 0x1C
01AE 1C              556             db 0x1C
01AF 3E              557             db 0x3e
01B0 3E              558             db 0x3e
                     559             
01B1                 560             block2:
                     561             
01B1 3E              562             db 0x3e
01B2 3E              563             db 0x3e
01B3 3E              564             db 0x3e
01B4 38              565             db 0x38
01B5 38              566             db 0x38
01B6 38              567             db 0x38
01B7 3E              568             db 0x3e
01B8 3E              569             db 0x3e
                     570                     
01B9                 571             block3:
                     572             
01B9 3E              573             db 0x3e
01BA 3E              574             db 0x3e
01BB 3E              575             db 0x3e
01BC 18              576             db 0x18
01BD 18              577             db 0x18
01BE 18              578             db 0x18
01BF 3E              579             db 0x3e
01C0 3E              580             db 0x3e
                     581                     
01C1                 582             block4:
A51 MACRO ASSEMBLER  MAIN                                                                 05/06/2016 14:58:14 PAGE    10

                     583             
01C1 3E              584             db 0x3e
01C2 3E              585             db 0x3e
01C3 3E              586             db 0x3e
01C4 06              587             db 0x06
01C5 06              588             db 0x06
01C6 3E              589             db 0x3e
01C7 3E              590             db 0x3e
01C8 3E              591             db 0x3e
                     592             
01C9                 593             block5:
01C9 3E              594             db 0x3e
01CA 3E              595             db 0x3e
01CB 3E              596             db 0x3e
01CC 08              597             db 0x08
01CD 08              598             db 0x08
01CE 3E              599             db 0x3e
01CF 3E              600             db 0x3e
01D0 3E              601             db 0x3e
                     602                     
01D1                 603             block6:
                     604             
01D1 3E              605             db 0x3e
01D2 3E              606             db 0x3e
01D3 3E              607             db 0x3e
01D4 32              608             db 0x32
01D5 32              609             db 0x32
01D6 3E              610             db 0x3e
01D7 3E              611             db 0x3e
01D8 3E              612             db 0x3e
                     613                     
01D9                 614             block7:
01D9 3E              615             db 0x3e
01DA 3E              616             db 0x3e
01DB 3E              617             db 0x3e
01DC 26              618             db 0x26
01DD 26              619             db 0x26
01DE 3E              620             db 0x3e
01DF 3E              621             db 0x3e
01E0 3E              622             db 0x3e
                     623                     
01E1                 624             block8:
01E1 3E              625             db 0x3e
01E2 3E              626             db 0x3e
01E3 3E              627             db 0x3e
01E4 26              628             db 0x26
01E5 26              629             db 0x26
01E6 3E              630             db 0x3e
01E7 3E              631             db 0x3e
01E8 3E              632             db 0x3e
                     633                     
                     634                     
                     635     
                     636     END
                             
                                     
                                             
A51 MACRO ASSEMBLER  MAIN                                                                 05/06/2016 14:58:14 PAGE    11

SYMBOL TABLE LISTING
------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES

AC . . . . . . . .  B ADDR   00D0H.6 A   
ACC. . . . . . . .  D ADDR   00E0H   A   
ADCF . . . . . . .  D ADDR   00F6H   A   
ADCLK. . . . . . .  D ADDR   00F2H   A   
ADCON. . . . . . .  D ADDR   00F3H   A   
ADDH . . . . . . .  D ADDR   00F5H   A   
ADDL . . . . . . .  D ADDR   00F4H   A   
AFTERRANDOM. . . .  C ADDR   0110H   A   
AUXR . . . . . . .  D ADDR   008EH   A   
AUXR1. . . . . . .  D ADDR   00A2H   A   
B. . . . . . . . .  D ADDR   00F0H   A   
BLOCK0 . . . . . .  C ADDR   01A1H   A   
BLOCK1 . . . . . .  C ADDR   01A9H   A   
BLOCK2 . . . . . .  C ADDR   01B1H   A   
BLOCK3 . . . . . .  C ADDR   01B9H   A   
BLOCK4 . . . . . .  C ADDR   01C1H   A   
BLOCK5 . . . . . .  C ADDR   01C9H   A   
BLOCK6 . . . . . .  C ADDR   01D1H   A   
BLOCK7 . . . . . .  C ADDR   01D9H   A   
BLOCK8 . . . . . .  C ADDR   01E1H   A   
CANBT1 . . . . . .  D ADDR   00B4H   A   
CANBT2 . . . . . .  D ADDR   00B5H   A   
CANBT3 . . . . . .  D ADDR   00B6H   A   
CANCONCH . . . . .  D ADDR   00B3H   A   
CANEN1 . . . . . .  D ADDR   00CEH   A   
CANEN2 . . . . . .  D ADDR   00CFH   A   
CANGCON. . . . . .  D ADDR   00ABH   A   
CANGIE . . . . . .  D ADDR   00C1H   A   
CANGIT . . . . . .  D ADDR   009BH   A   
CANGSTA. . . . . .  D ADDR   00AAH   A   
CANIDM1. . . . . .  D ADDR   00C4H   A   
CANIDM2. . . . . .  D ADDR   00C5H   A   
CANIDM3. . . . . .  D ADDR   00C6H   A   
CANIDM4. . . . . .  D ADDR   00C7H   A   
CANIDT1. . . . . .  D ADDR   00BCH   A   
CANIDT2. . . . . .  D ADDR   00BDH   A   
CANIDT3. . . . . .  D ADDR   00BEH   A   
CANIDT4. . . . . .  D ADDR   00BFH   A   
CANIE1 . . . . . .  D ADDR   00C2H   A   
CANIE2 . . . . . .  D ADDR   00C3H   A   
CANMSG . . . . . .  D ADDR   00A3H   A   
CANPAGE. . . . . .  D ADDR   00B1H   A   
CANREC . . . . . .  D ADDR   009DH   A   
CANSIT1. . . . . .  D ADDR   00BAH   A   
CANSIT2. . . . . .  D ADDR   00BBH   A   
CANSTCH. . . . . .  D ADDR   00B2H   A   
CANSTMPH . . . . .  D ADDR   00AFH   A   
CANSTMPL . . . . .  D ADDR   00AEH   A   
CANTCON. . . . . .  D ADDR   00A1H   A   
CANTEC . . . . . .  D ADDR   009CH   A   
CANTIMH. . . . . .  D ADDR   00ADH   A   
CANTIML. . . . . .  D ADDR   00ACH   A   
CANTTCH. . . . . .  D ADDR   00A5H   A   
CANTTCL. . . . . .  D ADDR   00A4H   A   
CCAP0H . . . . . .  D ADDR   00FAH   A   
CCAP0L . . . . . .  D ADDR   00EAH   A   
CCAP1H . . . . . .  D ADDR   00FBH   A   
CCAP1L . . . . . .  D ADDR   00EBH   A   
CCAP2H . . . . . .  D ADDR   00FCH   A   
CCAP2L . . . . . .  D ADDR   00ECH   A   
A51 MACRO ASSEMBLER  MAIN                                                                 05/06/2016 14:58:14 PAGE    12

CCAP3H . . . . . .  D ADDR   00FDH   A   
CCAP3L . . . . . .  D ADDR   00EDH   A   
CCAP4H . . . . . .  D ADDR   00FEH   A   
CCAP4L . . . . . .  D ADDR   00EEH   A   
CCAPM0 . . . . . .  D ADDR   00DAH   A   
CCAPM1 . . . . . .  D ADDR   00DBH   A   
CCAPM2 . . . . . .  D ADDR   00DCH   A   
CCAPM3 . . . . . .  D ADDR   00DDH   A   
CCAPM4 . . . . . .  D ADDR   00DEH   A   
CCF0 . . . . . . .  B ADDR   00D0H.0 A   
CCF1 . . . . . . .  B ADDR   00D0H.1 A   
CCF2 . . . . . . .  B ADDR   00D0H.2 A   
CCF3 . . . . . . .  B ADDR   00D0H.3 A   
CCF4 . . . . . . .  B ADDR   00D0H.4 A   
CCON . . . . . . .  D ADDR   00D8H   A   
CF . . . . . . . .  B ADDR   00D8H.7 A   
CH . . . . . . . .  D ADDR   00F9H   A   
CKCON. . . . . . .  D ADDR   008FH   A   
CL . . . . . . . .  D ADDR   00E9H   A   
CMOD . . . . . . .  D ADDR   00D9H   A   
CP_RL2 . . . . . .  B ADDR   00C8H.0 A   
CR . . . . . . . .  B ADDR   00D8H.6 A   
CY . . . . . . . .  B ADDR   00D0H.7 A   
C_T2 . . . . . . .  B ADDR   00C8H.1 A   
DELAY. . . . . . .  C ADDR   0158H   A   
DISPCOLSHIFT . . .  C ADDR   0147H   A   
DISPCOLSHIFTLOOP .  C ADDR   014CH   A   
DISPROWSHIFT . . .  C ADDR   0140H   A   
DPH. . . . . . . .  D ADDR   0083H   A   
DPL. . . . . . . .  D ADDR   0082H   A   
EA . . . . . . . .  B ADDR   00A8H.7 A   
EADC . . . . . . .  B ADDR   00E8H.1 A   
EC . . . . . . . .  B ADDR   00A8H.6 A   
ECAN . . . . . . .  B ADDR   00E8H.0 A   
EECON. . . . . . .  D ADDR   00D2H   A   
ES . . . . . . . .  B ADDR   00A8H.4 A   
ET0. . . . . . . .  B ADDR   00A8H.1 A   
ET1. . . . . . . .  B ADDR   00A8H.3 A   
ET2. . . . . . . .  B ADDR   00A8H.5 A   
ETIM . . . . . . .  B ADDR   00E8H.2 A   
EX0. . . . . . . .  B ADDR   00A8H.0 A   
EX1. . . . . . . .  B ADDR   00A8H.2 A   
EXEN2. . . . . . .  B ADDR   00C8H.3 A   
EXF2 . . . . . . .  B ADDR   00C8H.6 A   
F0 . . . . . . . .  B ADDR   00D0H.5 A   
FCON . . . . . . .  D ADDR   00D1H   A   
FE . . . . . . . .  B ADDR   0098H.7 A   
FPGACON. . . . . .  D ADDR   00F1H   A   
GAMEINIT . . . . .  C ADDR   006AH   A   
IE0. . . . . . . .  B ADDR   0088H.1 A   
IE1. . . . . . . .  B ADDR   0088H.3 A   
IEN0 . . . . . . .  D ADDR   00A8H   A   
IEN1 . . . . . . .  D ADDR   00E8H   A   
INIT . . . . . . .  C ADDR   0046H   A   
INT0 . . . . . . .  B ADDR   00B0H.2 A   
INT1 . . . . . . .  B ADDR   00B0H.3 A   
IPH0 . . . . . . .  D ADDR   00B7H   A   
IPH1 . . . . . . .  D ADDR   00F7H   A   
IPL0 . . . . . . .  D ADDR   00B8H   A   
IPL1 . . . . . . .  D ADDR   00F8H   A   
ISR_ADC. . . . . .  C ADDR   0117H   A   
ISR_TMR0 . . . . .  C ADDR   008DH   A   
ISR_TMR1 . . . . .  C ADDR   00E6H   A   
IT0. . . . . . . .  B ADDR   0088H.0 A   
IT1. . . . . . . .  B ADDR   0088H.2 A   
LASTLINECOMP . . .  C ADDR   00BFH   A   
A51 MACRO ASSEMBLER  MAIN                                                                 05/06/2016 14:58:14 PAGE    13

LFSR . . . . . . .  C ADDR   0169H   A   
LFSRSHIFT. . . . .  C ADDR   0194H   A   
LINEBYTES. . . . .  C ADDR   00A5H   A   
LOCATIONLBL. . . .  C ADDR   00CFH   A   
LOOP . . . . . . .  C ADDR   015EH   A   
LOOP2. . . . . . .  C ADDR   0166H   A   
MAIN . . . . . . .  C ADDR   008AH   A   
OV . . . . . . . .  B ADDR   00D0H.2 A   
P. . . . . . . . .  B ADDR   00D0H.0 A   
P0 . . . . . . . .  D ADDR   0080H   A   
P1 . . . . . . . .  D ADDR   0090H   A   
P2 . . . . . . . .  D ADDR   00A0H   A   
P3 . . . . . . . .  D ADDR   00B0H   A   
P4 . . . . . . . .  D ADDR   00C0H   A   
PCON . . . . . . .  D ADDR   0087H   A   
PSW. . . . . . . .  D ADDR   00D0H   A   
RAMINIT. . . . . .  C ADDR   0060H   A   
RB8. . . . . . . .  B ADDR   0098H.2 A   
RCAP2H . . . . . .  D ADDR   00CBH   A   
RCAP2L . . . . . .  D ADDR   00CAH   A   
RCLK . . . . . . .  B ADDR   00C8H.5 A   
RD . . . . . . . .  B ADDR   00B0H.7 A   
REG. . . . . . . .  C ADDR   0134H   A   
REN. . . . . . . .  B ADDR   0098H.4 A   
RI . . . . . . . .  B ADDR   0098H.0 A   
ROWITERATION . . .  C ADDR   00A3H   A   
RS0. . . . . . . .  B ADDR   00D0H.3 A   
RS1. . . . . . . .  B ADDR   00D0H.4 A   
RXD. . . . . . . .  B ADDR   00B0H.0 A   
SADDR. . . . . . .  D ADDR   00A9H   A   
SADEN. . . . . . .  D ADDR   00B9H   A   
SBUF . . . . . . .  D ADDR   0099H   A   
SCON . . . . . . .  D ADDR   0098H   A   
SHIFTR6. . . . . .  C ADDR   012FH   A   
SM0. . . . . . . .  B ADDR   0098H.7 A   
SM1. . . . . . . .  B ADDR   0098H.6 A   
SM2. . . . . . . .  B ADDR   0098H.5 A   
SP . . . . . . . .  D ADDR   0081H   A   
T0 . . . . . . . .  B ADDR   00B0H.4 A   
T1 . . . . . . . .  B ADDR   00B0H.5 A   
T2CON. . . . . . .  D ADDR   00C8H   A   
T2MOD. . . . . . .  D ADDR   00C9H   A   
TB8. . . . . . . .  B ADDR   0098H.3 A   
TCLK . . . . . . .  B ADDR   00C8H.4 A   
TCON . . . . . . .  D ADDR   0088H   A   
TF0. . . . . . . .  B ADDR   0088H.5 A   
TF1. . . . . . . .  B ADDR   0088H.7 A   
TF2. . . . . . . .  B ADDR   00C8H.7 A   
TH0. . . . . . . .  D ADDR   008CH   A   
TH1. . . . . . . .  D ADDR   008DH   A   
TH2. . . . . . . .  D ADDR   00CDH   A   
TI . . . . . . . .  B ADDR   0098H.1 A   
TL0. . . . . . . .  D ADDR   008AH   A   
TL1. . . . . . . .  D ADDR   008BH   A   
TL2. . . . . . . .  D ADDR   00CCH   A   
TMOD . . . . . . .  D ADDR   0089H   A   
TR0. . . . . . . .  B ADDR   0088H.4 A   
TR1. . . . . . . .  B ADDR   0088H.6 A   
TR2. . . . . . . .  B ADDR   00C8H.2 A   
TXD. . . . . . . .  B ADDR   00B0H.1 A   
WDTPRG . . . . . .  D ADDR   00A7H   A   
WDTRST . . . . . .  D ADDR   00A6H   A   
WR . . . . . . . .  B ADDR   00B0H.6 A   


REGISTER BANK(S) USED: 0 
A51 MACRO ASSEMBLER  MAIN                                                                 05/06/2016 14:58:14 PAGE    14



ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
