A51 MACRO ASSEMBLER  MAIN                                                                 04/25/2016 14:17:00 PAGE     1


MACRO ASSEMBLER A51 V8.02c
OBJECT MODULE PLACED IN .\Objects\main.obj
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE main.a51 NOMOD51 SET(SMALL) DEBUG PRINT(.\Listings\main.lst) OBJECT(.\O
                      bjects\main.obj) EP

LOC  OBJ            LINE     SOURCE

                       1     
                       2     ;*******************************************
                       3     ;* Sensors & Microsystem electronics       *
                       4     ;*                                         *
                       5     ;* Names: Steven Peters - Thomas Lapauw    *
                       6     ;*                                         *
                       7     ;*                Task 9                   *
                       8     ;*                                         *
                       9     ;*******************************************
                      10     
                      11     
                      12     ;Special register declarations
                      13     ;$include (t89c51cc01.inc)
                +1    14     ;*INC*************************************************************************
                +1    15     ; NAME: 89C51CC01.inc           
                +1    16     ;----------------------------------------------------------------------------
                +1    17     ; PURPOSE: for Keil
                +1    18     ;*****************************************************************************
                +1    19     
                +1    20     ;----------------------------------------
                +1    21     ; Include file for 8051 SFR Definitions  
                +1    22     ;----------------------------------------
                +1    23     
                +1    24     ;  BYTE Register 
  0080          +1    25     P0      DATA    80H
  0090          +1    26     P1      DATA    90H
  00A0          +1    27     P2      DATA    0A0H
                +1    28     
  00B0          +1    29     P3      DATA    0B0H
  00B7          +1    30     RD      BIT     0B7H
  00B6          +1    31     WR      BIT     0B6H
  00B5          +1    32     T1      BIT     0B5H
  00B4          +1    33     T0      BIT     0B4H
  00B3          +1    34     INT1    BIT     0B3H
  00B2          +1    35     INT0    BIT     0B2H
  00B1          +1    36     TXD     BIT     0B1H
  00B0          +1    37     RXD     BIT     0B0H
                +1    38     
  00C0          +1    39     P4      DATA    0C0H
                +1    40     
  00D0          +1    41     PSW     DATA    0D0H
  00D7          +1    42     CY      BIT     0D7H
  00D6          +1    43     AC      BIT     0D6H
  00D5          +1    44     F0      BIT     0D5H
  00D4          +1    45     RS1     BIT     0D4H
  00D3          +1    46     RS0     BIT     0D3H
  00D2          +1    47     OV      BIT     0D2H
  00D0          +1    48     P       BIT     0D0H
                +1    49     
  00E0          +1    50     ACC     DATA    0E0H
  00F0          +1    51     B       DATA    0F0H
  0081          +1    52     SP      DATA    81H
  0082          +1    53     DPL     DATA    82H
  0083          +1    54     DPH     DATA    83H
  0087          +1    55     PCON    DATA    87H
  008F          +1    56     CKCON   DATA    8FH
                +1    57     
A51 MACRO ASSEMBLER  MAIN                                                                 04/25/2016 14:17:00 PAGE     2

                +1    58     ;------------------ TIMERS registers ---------------------
  0088          +1    59     TCON    DATA    88H
  008F          +1    60     TF1     BIT     8FH
  008E          +1    61     TR1     BIT     8EH
  008D          +1    62     TF0     BIT     8DH
  008C          +1    63     TR0     BIT     8CH
  008B          +1    64     IE1     BIT     8BH
  008A          +1    65     IT1     BIT     8AH
  0089          +1    66     IE0     BIT     89H
  0088          +1    67     IT0     BIT     88H
                +1    68             
  0089          +1    69     TMOD    DATA    89H
                +1    70     
  00C8          +1    71     T2CON   DATA    0C8H
  00CF          +1    72     TF2     BIT     0CFH
  00CE          +1    73     EXF2    BIT     0CEH
  00CD          +1    74     RCLK    BIT     0CDH
  00CC          +1    75     TCLK    BIT     0CCH
  00CB          +1    76     EXEN2   BIT     0CBH
  00CA          +1    77     TR2     BIT     0CAH
  00C9          +1    78     C_T2    BIT     0C9H
  00C8          +1    79     CP_RL2  BIT     0C8H
                +1    80             
  00C9          +1    81     T2MOD   DATA    0C9H    
  008A          +1    82     TL0     DATA    8AH
  008B          +1    83     TL1     DATA    8BH
  00CC          +1    84     TL2     DATA    0CCH
  008C          +1    85     TH0     DATA    8CH
  008D          +1    86     TH1     DATA    8DH
  00CD          +1    87     TH2     DATA    0CDH    
  00CA          +1    88     RCAP2L  DATA    0CAH    
  00CB          +1    89     RCAP2H  DATA    0CBH    
  00A6          +1    90     WDTRST  DATA    0A6H    
  00A7          +1    91     WDTPRG  DATA    0A7H    
                +1    92     
                +1    93     
                +1    94     ;------------------- UART registers ------------------------
  0098          +1    95     SCON    DATA    98H
  009F          +1    96     SM0     BIT     9FH
  009F          +1    97     FE      BIT     9FH
  009E          +1    98     SM1     BIT     9EH
  009D          +1    99     SM2     BIT     9DH
  009C          +1   100     REN     BIT     9CH
  009B          +1   101     TB8     BIT     9BH
  009A          +1   102     RB8     BIT     9AH
  0099          +1   103     TI      BIT     99H
  0098          +1   104     RI      BIT     98H
                +1   105     
  0099          +1   106     SBUF    DATA    99H
  00B9          +1   107     SADEN   DATA    0B9H
  00A9          +1   108     SADDR   DATA    0A9H    
                +1   109     
                +1   110     ;-------------------- ADC registers ----------------------
  00F2          +1   111     ADCLK   DATA    0F2H    
  00F3          +1   112     ADCON   DATA    0F3H    
  00F4          +1   113     ADDL    DATA    0F4H    
  00F5          +1   114     ADDH    DATA    0F5H    
  00F6          +1   115     ADCF    DATA    0F6H    
                +1   116     
                +1   117     ;-------------------- FLASH EEPROM registers ------------
  00F1          +1   118     FPGACON  DATA   0F1H    
  00D1          +1   119     FCON    DATA    0D1H    
  00D2          +1   120     EECON   DATA    0D2H    
  008E          +1   121     AUXR    DATA    8EH
  00A2          +1   122     AUXR1   DATA    0A2H
                +1   123     
A51 MACRO ASSEMBLER  MAIN                                                                 04/25/2016 14:17:00 PAGE     3

                +1   124     ;-------------------- IT registers -----------------------
  00F8          +1   125     IPL1    DATA    0F8H    
  00F7          +1   126     IPH1    DATA    0F7H    
  00A8          +1   127     IEN0    DATA    0A8H    
  00B8          +1   128     IPL0    DATA    0B8H    
  00B7          +1   129     IPH0    DATA    0B7H    
  00E8          +1   130     IEN1    DATA    0E8H    
                +1   131     
                +1   132     ;  IEN0  
  00AF          +1   133     EA      BIT     0AFH
  00AE          +1   134     EC      BIT     0AEH
  00AD          +1   135     ET2     BIT     0ADH
  00AC          +1   136     ES      BIT     0ACH
  00AB          +1   137     ET1     BIT     0ABH
  00AA          +1   138     EX1     BIT     0AAH
  00A9          +1   139     ET0     BIT     0A9H
  00A8          +1   140     EX0     BIT     0A8H
                +1   141     
                +1   142     ;  IEN1 
  00EA          +1   143     ETIM    BIT     0EAH
  00E9          +1   144     EADC    BIT     0E9H
  00E8          +1   145     ECAN    BIT     0E8H
                +1   146     
                +1   147     ;--------------------- PCA registers --------------------
  00D8          +1   148     CCON    DATA    0D8H    
  00DF          +1   149     CF              BIT             0DFH
  00DE          +1   150     CR              BIT             0DEH
  00D4          +1   151     CCF4    BIT             0D4H
  00D3          +1   152     CCF3    BIT             0D3H
  00D2          +1   153     CCF2    BIT             0D2H
  00D1          +1   154     CCF1    BIT             0D1H
  00D0          +1   155     CCF0    BIT             0D0H
                +1   156     
  00D9          +1   157     CMOD    DATA    0D9H    
  00F9          +1   158     CH      DATA    0F9H    
  00E9          +1   159     CL      DATA    0E9H    
  00FA          +1   160     CCAP0H  DATA    0FAH    
  00EA          +1   161     CCAP0L  DATA    0EAH    
  00DA          +1   162     CCAPM0  DATA    0DAH    
  00FB          +1   163     CCAP1H  DATA    0FBH    
  00EB          +1   164     CCAP1L  DATA    0EBH    
  00DB          +1   165     CCAPM1  DATA    0DBH    
  00FC          +1   166     CCAP2H  DATA    0FCH    
  00EC          +1   167     CCAP2L  DATA    0ECH    
  00DC          +1   168     CCAPM2  DATA    0DCH    
  00FD          +1   169     CCAP3H  DATA    0FDH    
  00ED          +1   170     CCAP3L  DATA    0EDH    
  00DD          +1   171     CCAPM3  DATA    0DDH    
  00FE          +1   172     CCAP4H  DATA    0FEH    
  00EE          +1   173     CCAP4L  DATA    0EEH    
  00DE          +1   174     CCAPM4  DATA    0DEH    
                +1   175     
                +1   176     ;------------------- CAN registers --------------------------
  009B          +1   177     CANGIT          DATA    09BH
  009C          +1   178     CANTEC          DATA    09CH
  009D          +1   179     CANREC          DATA    09DH
  00A1          +1   180     CANTCON         DATA    0A1H    
  00A3          +1   181     CANMSG          DATA    0A3H    
  00A4          +1   182     CANTTCL         DATA    0A4H    
  00A5          +1   183     CANTTCH         DATA    0A5H    
  00AA          +1   184     CANGSTA         DATA    0AAH
  00AB          +1   185     CANGCON         DATA    0ABH
  00AC          +1   186     CANTIML         DATA    0ACH    
  00AD          +1   187     CANTIMH         DATA    0ADH    
  00AE          +1   188     CANSTMPL        DATA    0AEH    
  00AF          +1   189     CANSTMPH        DATA    0AFH
A51 MACRO ASSEMBLER  MAIN                                                                 04/25/2016 14:17:00 PAGE     4

  00B1          +1   190     CANPAGE         DATA    0B1H
  00B2          +1   191     CANSTCH         DATA    0B2H    
  00B3          +1   192     CANCONCH        DATA    0B3H    
  00B4          +1   193     CANBT1          DATA    0B4H
  00B5          +1   194     CANBT2          DATA    0B5H
  00B6          +1   195     CANBT3          DATA    0B6H
  00BA          +1   196     CANSIT1         DATA    0BAH
  00BB          +1   197     CANSIT2         DATA    0BBH    
  00BC          +1   198     CANIDT1         DATA    0BCH
  00BD          +1   199     CANIDT2         DATA    0BDH    
  00BE          +1   200     CANIDT3         DATA    0BEH    
  00BF          +1   201     CANIDT4         DATA    0BFH    
  00C1          +1   202     CANGIE          DATA    0C1H
  00C2          +1   203     CANIE1          DATA    0C2H    
  00C3          +1   204     CANIE2          DATA    0C3H
  00C4          +1   205     CANIDM1         DATA    0C4H
  00C5          +1   206     CANIDM2         DATA    0C5H
  00C6          +1   207     CANIDM3         DATA    0C6H
  00C7          +1   208     CANIDM4         DATA    0C7H
  00CE          +1   209     CANEN1          DATA    0CEH
  00CF          +1   210     CANEN2          DATA    0CFH
                +1   211     
                +1   212     
                     213     
                     214             
                     215     ;Boot code
0000                 216     ORG 0000h
0000 02000E          217     LJMP init 
                     218     
                     219     ;Interrupt address vectors
                     220     ;Specify tmr0 interrupt address vector 
000B                 221     ORG 000Bh
000B 020045          222     LJMP ISR_tmr0
                     223     ;Address declarations
                     224     
                     225     ;Constants
                     226     
                     227     ;Initialization code
000E                 228     init:   
                     229     
                     230                             ;Initialization code here
000E C2A3            231                             CLR P2.3 ;led to see if code is running
                     232                             
                     233                             ;init tmr0
0010 758901          234                             MOV TMOD,#00000001b ;config tmr0 in 16bit mode
0013 758CFB          235                             MOV TH0,#0FBh ;tmr0 MSB
0016 758A99          236                             MOV TL0,#099h ;tmr0 LSB
0019 D2A9            237                             SETB ET0 ;enable interrupt of tmr0
001B D2AF            238                             SETB EA ;global interrupt enable
                     239     
001D 758170          240                             MOV SP, #70h ; move stackpointer above registers
                     241                              
                     242                              
                     243     ;Initialize ram                  
0020 7830            244                             MOV R0,#030h 
0022 7928            245                             MOV R1,#040
0024                 246     ramInit:
0024 76FF            247                             MOV @R0,#0FFh
0026 08              248                             INC R0
0027 D9FB            249                             DJNZ R1,ramInit
                     250                             
                     251     ; seed of LFSR          
0029 75186A          252     MOV 18h, #1101010b 
002C 7F7F            253     MOV R7, #01111111b ;data rows (msb = 0, others are 1) single bit zero, to enable current ro
                             w
                     254                             
A51 MACRO ASSEMBLER  MAIN                                                                 04/25/2016 14:17:00 PAGE     5

002E D28C            255     SETB TR0 ;run tmr0
0030 020033          256     LJMP main
                     257                             
                     258     ;Main program
0033                 259     main:           
                     260     
                     261     ;DISPLAY PART
                     262                     ;MOV R7,18h ; get data from MSB LFSR
0033 C28C            263                     CLR TR0 ;stop timer during buffer update
0035 B2A4            264                     CPL P2.4 ; toggle led to see if working
                     265                     ;LCALL LFSR  ; generate new random data
0037 12009C          266                     LCALL dispColShift ; shift new column in display buffer
003A D28C            267                     SETB TR0 ;run tmr0 
003C 1200AD          268                     LCALL delay ; delay before repeat
003F EF              269                     MOV A,R7
0040 03              270                     RR A
0041 FF              271                     MOV R7,A
                     272                     
                     273                     ;MOV R7,#00h
                     274                     ;CLR TR0
                     275                     ;CLR P2.4
                     276                     ;LCALL dispColShift
                     277                     ;SETB TR0 ;run tmr0
                     278                     ;LCALL delay
                     279     
                     280                                     
0042 020033          281                             LJMP main
                     282                     
                     283     ;Interrupt handlers
                     284     
                     285     
0045                 286     ISR_tmr0: 
0045 C2AF            287                             CLR EA ;global interrupt disable
0047 C28C            288                             CLR TR0 ;stop tmr0
                     289                             ;reload timer
0049 758CFB          290                             MOV TH0,#0FBh ;tmr0 MSB
004C 758A99          291                             MOV TL0,#099h ;tmr0 LSB
                     292                             
                     293     ;DISPLAY PART
004F C2D4            294                     CLR RS1 ;move to registerbank 08h to 0Fh
0051 D2D3            295                     SETB RS0
0053 7907            296                     MOV R1, #07 ;counting register to 8 for rows
0055 7A7F            297                     MOV R2, #01111111b ;data rows (msb = 0, others are 1) single bit zero, to e
                             nable current row
0057 7830            298                     MOV R0, #030h ; starting adress disp mem
0059                 299     rowIteration:
                     300     
0059 7F05            301                             MOV R7, #05 ; counter for 5 bytes of row data
005B                 302     lineBytes:
005B E6              303                             MOV A,@R0 ; get data from ram
005C FE              304                             MOV R6,A
005D 1184            305                             acall shiftR6 ; shift byte into ram
005F 08              306                             INC R0 ; get next byte
0060 DFF9            307                             DJNZ R7,lineBytes ; rinse and repeat
                     308                             
                     309                             ;shift R2 with the current row enable in the register
0062 EA              310                             MOV A,R2
0063 FE              311                             MOV R6, A
0064 1184            312                             Acall shiftR6 ; shift column data byte into SR
0066 D2B2            313                             SETB P3.2 ; cycle store clock
0068 C2B2            314                             CLR P3.2
                     315     
                     316                             ;rotate row bit to enable next row
006A EA              317                             MOV A, R2 
006B 03              318                             RR A
006C FA              319                             MOV R2,A
A51 MACRO ASSEMBLER  MAIN                                                                 04/25/2016 14:17:00 PAGE     6

                     320                              ; repeat until 7 rows done
006D D9EA            321                             DJNZ R1, rowIteration
                     322                             
                     323                             
                     324                             
006F 7906            325                             MOV R1, #06
0071                 326     lastLineComp:                    ;loop to approximate the timing of the other rows to have 
                             similar brightness
0071 7EFF            327                             MOV R6, #0FFh
0073 1184            328                             Acall shiftR6 ; shift collumn data byte into SR
0075 D9FA            329                             DJNZ R1,lastLineComp
                     330                             
0077 D2B2            331                             SETB P3.2 ; cycle store clock
0079 C2B2            332                             CLR P3.2
                     333     
007B C2D4            334                             CLR RS1 ;move to registerbank 00h to 08h
007D C2D3            335                             CLR RS0 
                     336                             ;reenable timers
007F D28C            337                             SETB TR0 ;run tmr0
0081 D2AF            338                             SETB EA ;global interrupt disable
                     339                             
0083 32              340                             RETI
                     341     
                     342     ;Shift byte from R6 into shift registers
0084                 343     shiftR6:
0084 C0E0            344                                     push Acc
0086 EE              345                                     MOV A, R6 
0087 7E08            346                                     MOV R6, #08 ;counting register to 8
0089                 347                                     Reg:
0089 13              348                                     RRC A ;rotate accumulator
008A 92C1            349                                     MOV P4.1,C ;carry to Data
008C D2C0            350                                     SETB P4.0 ; cycle serial clock
008E C2C0            351                                     CLR P4.0
0090 DEF7            352                                     DJNZ R6,Reg ;if 8 bits are shifted go further otherwise rep
                             eat
0092 D0E0            353                                     pop Acc
0094 22              354                                     ret
                     355     ;Last line of code
                     356     
                     357     
0095                 358     dispRowShift:
0095 E7              359             MOV A,@R1
0096 13              360             RRC A
0097 F7              361             MOV @R1,A
0098 19              362             DEC R1
0099 DEFA            363             DJNZ R6, dispRowShift
009B 22              364             RET
                     365     ;shift 7 MSB in framebuffer
009C                 366     dispColShift:
009C EF              367             MOV A, R7
009D 7D07            368             MOV     R5, #07 ;counter to count rows
                     369             ;RRC A ;rotate to drop LSB
009F 7952            370             MOV R1, #52h ; start at highest address to decrease each time
00A1                 371     dispColShiftLoop:
00A1 13              372             RRC A ;Rotate LSB in carry to shift in row
00A2 7E05            373             MOV     R6, #05 ; counter to rotate 5 horizontal bytes
00A4 C0E0            374             PUSH ACC ; push acc to save current data
00A6 1195            375             ACALL dispRowShift ; rotate all row bytes
00A8 D0E0            376             POP ACC
00AA DDF5            377             DJNZ R5, dispColShiftLoop
00AC 22              378             RET
                     379             
                     380     ;rudimentary delay for test purposes
00AD                 381     delay:   
00AD 79EF            382                     MOV R1, #0EFh
00AF 1200B3          383                     LCALL loop
A51 MACRO ASSEMBLER  MAIN                                                                 04/25/2016 14:17:00 PAGE     7

00B2 22              384                     RET
                     385     
00B3                 386     loop:   
00B3 7A00            387                     MOV R2, #00h
00B5 1200BB          388                     LCALL loop2
00B8 D9F9            389                     DJNZ R1, loop
00BA 22              390                     RET
                     391                     
00BB DAFE            392     loop2:  DJNZ R2,loop2
00BD 22              393                     RET
                     394                     
                     395                     
                     396     ;random number generator code trough LFSR               
00BE                 397     LFSR: 
00BE D2D4            398             SETB RS1 ;move to registerbank 08h to 0Fh
00C0 D2D3            399             SETB RS0
00C2 E8              400             MOV A,R0 ;Save highest byte to address
00C3 FC              401             MOV R4,A
00C4 1200E9          402             lcall LFSRShift
00C7 1200E9          403             lcall LFSRShift
00CA 6C              404             XRL A,R4
00CB FC              405             MOV R4,A
00CC 1200E9          406             lcall LFSRShift
00CF 1200E9          407             lcall LFSRShift
00D2 1200E9          408             lcall LFSRShift
00D5 1200E9          409             lcall LFSRShift
00D8 6C              410             XRL A,R4
00D9 FC              411             MOV R4,A                
00DA 1200E9          412             lcall LFSRShift
00DD 6C              413             XRL A,R4
00DE FC              414             MOV R4,A
00DF 1200E9          415             lcall LFSRShift
00E2 EC              416             MOV A,R4
00E3 FB              417             MOV R3,A
                     418             
00E4 C2D4            419             CLR RS1 ;move to registerbank 08h to 0Fh
00E6 C2D3            420             CLR RS0
                     421             
00E8 22              422             RET
                     423             
                     424     ;shift the 32 bit registers of the LFSR
00E9                 425     LFSRShift: 
00E9 EB              426             MOV A,R3 ; rotate shift register
00EA 33              427             RLC A
00EB FB              428             MOV R3,A
00EC EA              429             MOV A,R2 ; rotate shift register
00ED 33              430             RLC A
00EE FA              431             MOV R2,A
00EF E9              432             MOV A,R1 ; rotate shift register
00F0 33              433             RLC A
00F1 F9              434             MOV R1,A
00F2 E8              435             MOV A,R0 ; rotate shift register
00F3 33              436             RLC A
00F4 F8              437             MOV R0,A
00F5 22              438             ret     
                     439             
                     440     
                     441     END
A51 MACRO ASSEMBLER  MAIN                                                                 04/25/2016 14:17:00 PAGE     8

SYMBOL TABLE LISTING
------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES

AC . . . . . . . .  B ADDR   00D0H.6 A   
ACC. . . . . . . .  D ADDR   00E0H   A   
ADCF . . . . . . .  D ADDR   00F6H   A   
ADCLK. . . . . . .  D ADDR   00F2H   A   
ADCON. . . . . . .  D ADDR   00F3H   A   
ADDH . . . . . . .  D ADDR   00F5H   A   
ADDL . . . . . . .  D ADDR   00F4H   A   
AUXR . . . . . . .  D ADDR   008EH   A   
AUXR1. . . . . . .  D ADDR   00A2H   A   
B. . . . . . . . .  D ADDR   00F0H   A   
CANBT1 . . . . . .  D ADDR   00B4H   A   
CANBT2 . . . . . .  D ADDR   00B5H   A   
CANBT3 . . . . . .  D ADDR   00B6H   A   
CANCONCH . . . . .  D ADDR   00B3H   A   
CANEN1 . . . . . .  D ADDR   00CEH   A   
CANEN2 . . . . . .  D ADDR   00CFH   A   
CANGCON. . . . . .  D ADDR   00ABH   A   
CANGIE . . . . . .  D ADDR   00C1H   A   
CANGIT . . . . . .  D ADDR   009BH   A   
CANGSTA. . . . . .  D ADDR   00AAH   A   
CANIDM1. . . . . .  D ADDR   00C4H   A   
CANIDM2. . . . . .  D ADDR   00C5H   A   
CANIDM3. . . . . .  D ADDR   00C6H   A   
CANIDM4. . . . . .  D ADDR   00C7H   A   
CANIDT1. . . . . .  D ADDR   00BCH   A   
CANIDT2. . . . . .  D ADDR   00BDH   A   
CANIDT3. . . . . .  D ADDR   00BEH   A   
CANIDT4. . . . . .  D ADDR   00BFH   A   
CANIE1 . . . . . .  D ADDR   00C2H   A   
CANIE2 . . . . . .  D ADDR   00C3H   A   
CANMSG . . . . . .  D ADDR   00A3H   A   
CANPAGE. . . . . .  D ADDR   00B1H   A   
CANREC . . . . . .  D ADDR   009DH   A   
CANSIT1. . . . . .  D ADDR   00BAH   A   
CANSIT2. . . . . .  D ADDR   00BBH   A   
CANSTCH. . . . . .  D ADDR   00B2H   A   
CANSTMPH . . . . .  D ADDR   00AFH   A   
CANSTMPL . . . . .  D ADDR   00AEH   A   
CANTCON. . . . . .  D ADDR   00A1H   A   
CANTEC . . . . . .  D ADDR   009CH   A   
CANTIMH. . . . . .  D ADDR   00ADH   A   
CANTIML. . . . . .  D ADDR   00ACH   A   
CANTTCH. . . . . .  D ADDR   00A5H   A   
CANTTCL. . . . . .  D ADDR   00A4H   A   
CCAP0H . . . . . .  D ADDR   00FAH   A   
CCAP0L . . . . . .  D ADDR   00EAH   A   
CCAP1H . . . . . .  D ADDR   00FBH   A   
CCAP1L . . . . . .  D ADDR   00EBH   A   
CCAP2H . . . . . .  D ADDR   00FCH   A   
CCAP2L . . . . . .  D ADDR   00ECH   A   
CCAP3H . . . . . .  D ADDR   00FDH   A   
CCAP3L . . . . . .  D ADDR   00EDH   A   
CCAP4H . . . . . .  D ADDR   00FEH   A   
CCAP4L . . . . . .  D ADDR   00EEH   A   
CCAPM0 . . . . . .  D ADDR   00DAH   A   
CCAPM1 . . . . . .  D ADDR   00DBH   A   
CCAPM2 . . . . . .  D ADDR   00DCH   A   
CCAPM3 . . . . . .  D ADDR   00DDH   A   
CCAPM4 . . . . . .  D ADDR   00DEH   A   
CCF0 . . . . . . .  B ADDR   00D0H.0 A   
A51 MACRO ASSEMBLER  MAIN                                                                 04/25/2016 14:17:00 PAGE     9

CCF1 . . . . . . .  B ADDR   00D0H.1 A   
CCF2 . . . . . . .  B ADDR   00D0H.2 A   
CCF3 . . . . . . .  B ADDR   00D0H.3 A   
CCF4 . . . . . . .  B ADDR   00D0H.4 A   
CCON . . . . . . .  D ADDR   00D8H   A   
CF . . . . . . . .  B ADDR   00D8H.7 A   
CH . . . . . . . .  D ADDR   00F9H   A   
CKCON. . . . . . .  D ADDR   008FH   A   
CL . . . . . . . .  D ADDR   00E9H   A   
CMOD . . . . . . .  D ADDR   00D9H   A   
CP_RL2 . . . . . .  B ADDR   00C8H.0 A   
CR . . . . . . . .  B ADDR   00D8H.6 A   
CY . . . . . . . .  B ADDR   00D0H.7 A   
C_T2 . . . . . . .  B ADDR   00C8H.1 A   
DELAY. . . . . . .  C ADDR   00ADH   A   
DISPCOLSHIFT . . .  C ADDR   009CH   A   
DISPCOLSHIFTLOOP .  C ADDR   00A1H   A   
DISPROWSHIFT . . .  C ADDR   0095H   A   
DPH. . . . . . . .  D ADDR   0083H   A   
DPL. . . . . . . .  D ADDR   0082H   A   
EA . . . . . . . .  B ADDR   00A8H.7 A   
EADC . . . . . . .  B ADDR   00E8H.1 A   
EC . . . . . . . .  B ADDR   00A8H.6 A   
ECAN . . . . . . .  B ADDR   00E8H.0 A   
EECON. . . . . . .  D ADDR   00D2H   A   
ES . . . . . . . .  B ADDR   00A8H.4 A   
ET0. . . . . . . .  B ADDR   00A8H.1 A   
ET1. . . . . . . .  B ADDR   00A8H.3 A   
ET2. . . . . . . .  B ADDR   00A8H.5 A   
ETIM . . . . . . .  B ADDR   00E8H.2 A   
EX0. . . . . . . .  B ADDR   00A8H.0 A   
EX1. . . . . . . .  B ADDR   00A8H.2 A   
EXEN2. . . . . . .  B ADDR   00C8H.3 A   
EXF2 . . . . . . .  B ADDR   00C8H.6 A   
F0 . . . . . . . .  B ADDR   00D0H.5 A   
FCON . . . . . . .  D ADDR   00D1H   A   
FE . . . . . . . .  B ADDR   0098H.7 A   
FPGACON. . . . . .  D ADDR   00F1H   A   
IE0. . . . . . . .  B ADDR   0088H.1 A   
IE1. . . . . . . .  B ADDR   0088H.3 A   
IEN0 . . . . . . .  D ADDR   00A8H   A   
IEN1 . . . . . . .  D ADDR   00E8H   A   
INIT . . . . . . .  C ADDR   000EH   A   
INT0 . . . . . . .  B ADDR   00B0H.2 A   
INT1 . . . . . . .  B ADDR   00B0H.3 A   
IPH0 . . . . . . .  D ADDR   00B7H   A   
IPH1 . . . . . . .  D ADDR   00F7H   A   
IPL0 . . . . . . .  D ADDR   00B8H   A   
IPL1 . . . . . . .  D ADDR   00F8H   A   
ISR_TMR0 . . . . .  C ADDR   0045H   A   
IT0. . . . . . . .  B ADDR   0088H.0 A   
IT1. . . . . . . .  B ADDR   0088H.2 A   
LASTLINECOMP . . .  C ADDR   0071H   A   
LFSR . . . . . . .  C ADDR   00BEH   A   
LFSRSHIFT. . . . .  C ADDR   00E9H   A   
LINEBYTES. . . . .  C ADDR   005BH   A   
LOOP . . . . . . .  C ADDR   00B3H   A   
LOOP2. . . . . . .  C ADDR   00BBH   A   
MAIN . . . . . . .  C ADDR   0033H   A   
OV . . . . . . . .  B ADDR   00D0H.2 A   
P. . . . . . . . .  B ADDR   00D0H.0 A   
P0 . . . . . . . .  D ADDR   0080H   A   
P1 . . . . . . . .  D ADDR   0090H   A   
P2 . . . . . . . .  D ADDR   00A0H   A   
P3 . . . . . . . .  D ADDR   00B0H   A   
P4 . . . . . . . .  D ADDR   00C0H   A   
A51 MACRO ASSEMBLER  MAIN                                                                 04/25/2016 14:17:00 PAGE    10

PCON . . . . . . .  D ADDR   0087H   A   
PSW. . . . . . . .  D ADDR   00D0H   A   
RAMINIT. . . . . .  C ADDR   0024H   A   
RB8. . . . . . . .  B ADDR   0098H.2 A   
RCAP2H . . . . . .  D ADDR   00CBH   A   
RCAP2L . . . . . .  D ADDR   00CAH   A   
RCLK . . . . . . .  B ADDR   00C8H.5 A   
RD . . . . . . . .  B ADDR   00B0H.7 A   
REG. . . . . . . .  C ADDR   0089H   A   
REN. . . . . . . .  B ADDR   0098H.4 A   
RI . . . . . . . .  B ADDR   0098H.0 A   
ROWITERATION . . .  C ADDR   0059H   A   
RS0. . . . . . . .  B ADDR   00D0H.3 A   
RS1. . . . . . . .  B ADDR   00D0H.4 A   
RXD. . . . . . . .  B ADDR   00B0H.0 A   
SADDR. . . . . . .  D ADDR   00A9H   A   
SADEN. . . . . . .  D ADDR   00B9H   A   
SBUF . . . . . . .  D ADDR   0099H   A   
SCON . . . . . . .  D ADDR   0098H   A   
SHIFTR6. . . . . .  C ADDR   0084H   A   
SM0. . . . . . . .  B ADDR   0098H.7 A   
SM1. . . . . . . .  B ADDR   0098H.6 A   
SM2. . . . . . . .  B ADDR   0098H.5 A   
SP . . . . . . . .  D ADDR   0081H   A   
T0 . . . . . . . .  B ADDR   00B0H.4 A   
T1 . . . . . . . .  B ADDR   00B0H.5 A   
T2CON. . . . . . .  D ADDR   00C8H   A   
T2MOD. . . . . . .  D ADDR   00C9H   A   
TB8. . . . . . . .  B ADDR   0098H.3 A   
TCLK . . . . . . .  B ADDR   00C8H.4 A   
TCON . . . . . . .  D ADDR   0088H   A   
TF0. . . . . . . .  B ADDR   0088H.5 A   
TF1. . . . . . . .  B ADDR   0088H.7 A   
TF2. . . . . . . .  B ADDR   00C8H.7 A   
TH0. . . . . . . .  D ADDR   008CH   A   
TH1. . . . . . . .  D ADDR   008DH   A   
TH2. . . . . . . .  D ADDR   00CDH   A   
TI . . . . . . . .  B ADDR   0098H.1 A   
TL0. . . . . . . .  D ADDR   008AH   A   
TL1. . . . . . . .  D ADDR   008BH   A   
TL2. . . . . . . .  D ADDR   00CCH   A   
TMOD . . . . . . .  D ADDR   0089H   A   
TR0. . . . . . . .  B ADDR   0088H.4 A   
TR1. . . . . . . .  B ADDR   0088H.6 A   
TR2. . . . . . . .  B ADDR   00C8H.2 A   
TXD. . . . . . . .  B ADDR   00B0H.1 A   
WDTPRG . . . . . .  D ADDR   00A7H   A   
WDTRST . . . . . .  D ADDR   00A6H   A   
WR . . . . . . . .  B ADDR   00B0H.6 A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
