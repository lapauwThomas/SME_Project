A51 MACRO ASSEMBLER  MAIN                                                                 05/13/2016 16:04:26 PAGE     1


MACRO ASSEMBLER A51 V8.02c
OBJECT MODULE PLACED IN .\Objects\main.obj
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE main.a51 NOMOD51 SET(SMALL) DEBUG PRINT(.\Listings\main.lst) OBJECT(.\O
                      bjects\main.obj) EP

LOC  OBJ            LINE     SOURCE

                       1     
                       2     ;*******************************************
                       3     ;* Sensors & Microsystem electronics       *
                       4     ;*                                         *
                       5     ;* Names: Steven Peters - Thomas Lapauw    *
                       6     ;*                                         *
                       7     ;*                Task 9                   *
                       8     ;*                                         *
                       9     ;*******************************************
                      10     
                      11     
                      12     ;Special register declarations
                      13     ;$include (t89c51cc01.inc)
                +1    14     ;*INC*************************************************************************
                +1    15     ; NAME: 89C51CC01.inc           
                +1    16     ;----------------------------------------------------------------------------
                +1    17     ; PURPOSE: for Keil
                +1    18     ;*****************************************************************************
                +1    19     
                +1    20     ;----------------------------------------
                +1    21     ; Include file for 8051 SFR Definitions  
                +1    22     ;----------------------------------------
                +1    23     
                +1    24     ;  BYTE Register 
  0080          +1    25     P0      DATA    80H
  0090          +1    26     P1      DATA    90H
  00A0          +1    27     P2      DATA    0A0H
                +1    28     
  00B0          +1    29     P3      DATA    0B0H
  00B7          +1    30     RD      BIT     0B7H
  00B6          +1    31     WR      BIT     0B6H
  00B5          +1    32     T1      BIT     0B5H
  00B4          +1    33     T0      BIT     0B4H
  00B3          +1    34     INT1    BIT     0B3H
  00B2          +1    35     INT0    BIT     0B2H
  00B1          +1    36     TXD     BIT     0B1H
  00B0          +1    37     RXD     BIT     0B0H
                +1    38     
  00C0          +1    39     P4      DATA    0C0H
                +1    40     
  00D0          +1    41     PSW     DATA    0D0H
  00D7          +1    42     CY      BIT     0D7H
  00D6          +1    43     AC      BIT     0D6H
  00D5          +1    44     F0      BIT     0D5H
  00D4          +1    45     RS1     BIT     0D4H
  00D3          +1    46     RS0     BIT     0D3H
  00D2          +1    47     OV      BIT     0D2H
  00D0          +1    48     P       BIT     0D0H
                +1    49     
  00E0          +1    50     ACC     DATA    0E0H
  00F0          +1    51     B       DATA    0F0H
  0081          +1    52     SP      DATA    81H
  0082          +1    53     DPL     DATA    82H
  0083          +1    54     DPH     DATA    83H
  0087          +1    55     PCON    DATA    87H
  008F          +1    56     CKCON   DATA    8FH
                +1    57     
A51 MACRO ASSEMBLER  MAIN                                                                 05/13/2016 16:04:26 PAGE     2

                +1    58     ;------------------ TIMERS registers ---------------------
  0088          +1    59     TCON    DATA    88H
  008F          +1    60     TF1     BIT     8FH
  008E          +1    61     TR1     BIT     8EH
  008D          +1    62     TF0     BIT     8DH
  008C          +1    63     TR0     BIT     8CH
  008B          +1    64     IE1     BIT     8BH
  008A          +1    65     IT1     BIT     8AH
  0089          +1    66     IE0     BIT     89H
  0088          +1    67     IT0     BIT     88H
                +1    68             
  0089          +1    69     TMOD    DATA    89H
                +1    70     
  00C8          +1    71     T2CON   DATA    0C8H
  00CF          +1    72     TF2     BIT     0CFH
  00CE          +1    73     EXF2    BIT     0CEH
  00CD          +1    74     RCLK    BIT     0CDH
  00CC          +1    75     TCLK    BIT     0CCH
  00CB          +1    76     EXEN2   BIT     0CBH
  00CA          +1    77     TR2     BIT     0CAH
  00C9          +1    78     C_T2    BIT     0C9H
  00C8          +1    79     CP_RL2  BIT     0C8H
                +1    80             
  00C9          +1    81     T2MOD   DATA    0C9H    
  008A          +1    82     TL0     DATA    8AH
  008B          +1    83     TL1     DATA    8BH
  00CC          +1    84     TL2     DATA    0CCH
  008C          +1    85     TH0     DATA    8CH
  008D          +1    86     TH1     DATA    8DH
  00CD          +1    87     TH2     DATA    0CDH    
  00CA          +1    88     RCAP2L  DATA    0CAH    
  00CB          +1    89     RCAP2H  DATA    0CBH    
  00A6          +1    90     WDTRST  DATA    0A6H    
  00A7          +1    91     WDTPRG  DATA    0A7H    
                +1    92     
                +1    93     
                +1    94     ;------------------- UART registers ------------------------
  0098          +1    95     SCON    DATA    98H
  009F          +1    96     SM0     BIT     9FH
  009F          +1    97     FE      BIT     9FH
  009E          +1    98     SM1     BIT     9EH
  009D          +1    99     SM2     BIT     9DH
  009C          +1   100     REN     BIT     9CH
  009B          +1   101     TB8     BIT     9BH
  009A          +1   102     RB8     BIT     9AH
  0099          +1   103     TI      BIT     99H
  0098          +1   104     RI      BIT     98H
                +1   105     
  0099          +1   106     SBUF    DATA    99H
  00B9          +1   107     SADEN   DATA    0B9H
  00A9          +1   108     SADDR   DATA    0A9H    
                +1   109     
                +1   110     ;-------------------- ADC registers ----------------------
  00F2          +1   111     ADCLK   DATA    0F2H    
  00F3          +1   112     ADCON   DATA    0F3H    
  00F4          +1   113     ADDL    DATA    0F4H    
  00F5          +1   114     ADDH    DATA    0F5H    
  00F6          +1   115     ADCF    DATA    0F6H    
                +1   116     
                +1   117     ;-------------------- FLASH EEPROM registers ------------
  00F1          +1   118     FPGACON  DATA   0F1H    
  00D1          +1   119     FCON    DATA    0D1H    
  00D2          +1   120     EECON   DATA    0D2H    
  008E          +1   121     AUXR    DATA    8EH
  00A2          +1   122     AUXR1   DATA    0A2H
                +1   123     
A51 MACRO ASSEMBLER  MAIN                                                                 05/13/2016 16:04:26 PAGE     3

                +1   124     ;-------------------- IT registers -----------------------
  00F8          +1   125     IPL1    DATA    0F8H    
  00F7          +1   126     IPH1    DATA    0F7H    
  00A8          +1   127     IEN0    DATA    0A8H    
  00B8          +1   128     IPL0    DATA    0B8H    
  00B7          +1   129     IPH0    DATA    0B7H    
  00E8          +1   130     IEN1    DATA    0E8H    
                +1   131     
                +1   132     ;  IEN0  
  00AF          +1   133     EA      BIT     0AFH
  00AE          +1   134     EC      BIT     0AEH
  00AD          +1   135     ET2     BIT     0ADH
  00AC          +1   136     ES      BIT     0ACH
  00AB          +1   137     ET1     BIT     0ABH
  00AA          +1   138     EX1     BIT     0AAH
  00A9          +1   139     ET0     BIT     0A9H
  00A8          +1   140     EX0     BIT     0A8H
                +1   141     
                +1   142     ;  IEN1 
  00EA          +1   143     ETIM    BIT     0EAH
  00E9          +1   144     EADC    BIT     0E9H
  00E8          +1   145     ECAN    BIT     0E8H
                +1   146     
                +1   147     ;--------------------- PCA registers --------------------
  00D8          +1   148     CCON    DATA    0D8H    
  00DF          +1   149     CF              BIT             0DFH
  00DE          +1   150     CR              BIT             0DEH
  00D4          +1   151     CCF4    BIT             0D4H
  00D3          +1   152     CCF3    BIT             0D3H
  00D2          +1   153     CCF2    BIT             0D2H
  00D1          +1   154     CCF1    BIT             0D1H
  00D0          +1   155     CCF0    BIT             0D0H
                +1   156     
  00D9          +1   157     CMOD    DATA    0D9H    
  00F9          +1   158     CH      DATA    0F9H    
  00E9          +1   159     CL      DATA    0E9H    
  00FA          +1   160     CCAP0H  DATA    0FAH    
  00EA          +1   161     CCAP0L  DATA    0EAH    
  00DA          +1   162     CCAPM0  DATA    0DAH    
  00FB          +1   163     CCAP1H  DATA    0FBH    
  00EB          +1   164     CCAP1L  DATA    0EBH    
  00DB          +1   165     CCAPM1  DATA    0DBH    
  00FC          +1   166     CCAP2H  DATA    0FCH    
  00EC          +1   167     CCAP2L  DATA    0ECH    
  00DC          +1   168     CCAPM2  DATA    0DCH    
  00FD          +1   169     CCAP3H  DATA    0FDH    
  00ED          +1   170     CCAP3L  DATA    0EDH    
  00DD          +1   171     CCAPM3  DATA    0DDH    
  00FE          +1   172     CCAP4H  DATA    0FEH    
  00EE          +1   173     CCAP4L  DATA    0EEH    
  00DE          +1   174     CCAPM4  DATA    0DEH    
                +1   175     
                +1   176     ;------------------- CAN registers --------------------------
  009B          +1   177     CANGIT          DATA    09BH
  009C          +1   178     CANTEC          DATA    09CH
  009D          +1   179     CANREC          DATA    09DH
  00A1          +1   180     CANTCON         DATA    0A1H    
  00A3          +1   181     CANMSG          DATA    0A3H    
  00A4          +1   182     CANTTCL         DATA    0A4H    
  00A5          +1   183     CANTTCH         DATA    0A5H    
  00AA          +1   184     CANGSTA         DATA    0AAH
  00AB          +1   185     CANGCON         DATA    0ABH
  00AC          +1   186     CANTIML         DATA    0ACH    
  00AD          +1   187     CANTIMH         DATA    0ADH    
  00AE          +1   188     CANSTMPL        DATA    0AEH    
  00AF          +1   189     CANSTMPH        DATA    0AFH
A51 MACRO ASSEMBLER  MAIN                                                                 05/13/2016 16:04:26 PAGE     4

  00B1          +1   190     CANPAGE         DATA    0B1H
  00B2          +1   191     CANSTCH         DATA    0B2H    
  00B3          +1   192     CANCONCH        DATA    0B3H    
  00B4          +1   193     CANBT1          DATA    0B4H
  00B5          +1   194     CANBT2          DATA    0B5H
  00B6          +1   195     CANBT3          DATA    0B6H
  00BA          +1   196     CANSIT1         DATA    0BAH
  00BB          +1   197     CANSIT2         DATA    0BBH    
  00BC          +1   198     CANIDT1         DATA    0BCH
  00BD          +1   199     CANIDT2         DATA    0BDH    
  00BE          +1   200     CANIDT3         DATA    0BEH    
  00BF          +1   201     CANIDT4         DATA    0BFH    
  00C1          +1   202     CANGIE          DATA    0C1H
  00C2          +1   203     CANIE1          DATA    0C2H    
  00C3          +1   204     CANIE2          DATA    0C3H
  00C4          +1   205     CANIDM1         DATA    0C4H
  00C5          +1   206     CANIDM2         DATA    0C5H
  00C6          +1   207     CANIDM3         DATA    0C6H
  00C7          +1   208     CANIDM4         DATA    0C7H
  00CE          +1   209     CANEN1          DATA    0CEH
  00CF          +1   210     CANEN2          DATA    0CFH
                +1   211     
                +1   212     
                     213     
                     214     
----                 215     DSEG AT 30h
                     216     
  0054               217             cursor DATA 54h
  0053               218             blockIndex DATA 53h
  0057               219             blockIteration DATA 57h
  005A               220             ADCVal DATA 5Ah
----                 221     CSEG    
                     222     ;Boot code
0000                 223     ORG 0000h
0000 020046          224     LJMP init 
                     225     
                     226     ;Interrupt address vectors
000B                 227     ORG 000Bh
000B 02009B          228     LJMP ISR_tmr0
                     229     
001B                 230     ORG 001Bh
001B 0200F8          231     LJMP ISR_tmr1
                     232     
0043                 233     ORG 0043h
0043 02012C          234     LJMP ISR_ADC
                     235     
                     236     
                     237     
                     238     
                     239     ;Address declarations
  0030               240     vidMemStart EQU 030h
  0052               241     vidMemEnd EQU 052h
  0023               242     vidMemLength EQU 35
                     243     
  0028               244     numberOfCollumns EQU 40
  0007               245     numberOfRows EQU 7
  0005               246     bytesPerRow EQU 5
                     247             
  0008               248     bytesPerBlock EQU 8
                     249             
  00FE               250     cursorByte EQU 11111110b
  0001               251     cursorByteMask EQU 00000001b
                     252     
                     253     
                     254     
                     255     
A51 MACRO ASSEMBLER  MAIN                                                                 05/13/2016 16:04:26 PAGE     5

                     256     ;Initialization code
0046                 257     init:   
                     258     
                     259                             ;init tmr0
0046 758911          260                             MOV TMOD,#00010001b ;config tmr0 & tmr1 in 16bit mode
0049 758CFF          261                             MOV TH0,#0FFh ;tmr0 MSB
004C 758AFF          262                             MOV TL0,#0FFh ;tmr0 LSB
                     263                             
004F 758DFF          264                             MOV TH1,#0FFh ;tmr0 MSB
0052 758BFF          265                             MOV TL1,#0FFh ;tmr0 LSB
                     266                             
0055 D2AB            267                             SETB ET1
0057 D2A9            268                             SETB ET0 ;enable interrupt of tmr0
                     269     
                     270     
0059 758170          271                             MOV SP, #70h ; move stackpointer above registers
                     272                              
                     273                              
                     274     ;Initialize ram                  
005C 7830            275                             MOV R0,#vidMemStart 
005E 7928            276                             MOV R1,#numberOfCollumns
0060                 277     ramInit:
0060 76FF            278                             MOV @R0,#0FFh
0062 08              279                             INC R0
0063 D9FB            280                             DJNZ R1,ramInit
                     281                             
                     282     ; seed of LFSR          
0065 75186A          283     MOV 18h, #1101010b 
                     284     
                     285     
                     286     ;MOV R0,#numberOfCollumns
                     287     ;gameInit:
                     288     ;               MOV R7,#03eh ; stockate data in R7 for collumnshift
                     289     ;               LCALL dispColShift
                     290     ;               DJNZ R0, gameInit
                     291     
                     292     
0068 E518            293                     MOV A,18h ; get data from MSB LFSR
006A 541C            294                     ANL A,#0011100b ;mask for the number of blocks          
006C F553            295                     MOV blockIndex, A ; save current adress for next block
                     296     
                     297     
                     298     ;**********************************************************************************
                     299             ; Setup for the ADC
006E 75F6FF          300             MOV ADCF,#0FFh ;enable the adc...
0071 D2E9            301             SETB EADC
0073 75F32F          302             MOV ADCON, #00101111b ; set P1.0 as ADC input
                     303     
                     304     
0076 7B08            305                     MOV R3,#bytesPerBlock ; repeat 4 times
0078 E518            306                     MOV A,18h ; get data from MSB LFSR
007A 5438            307                     ANL A,#0111000b ;mask for the number of blocks          
007C F553            308                     MOV blockIndex, A ; save current adress for next block
007E 1201BE          309                     LCALL LFSR  ; generate new random data
0081 B2A4            310                     CPL P2.4 ; toggle led to see if working
                     311     
0083 8B57            312                     MOV blockIteration,R3
                     313             
0085 755A60          314                     MOV ADCVal,#01100000b
0088 F52C            315                     MOV 2Ch,A
                     316     
                     317     
008A D28C            318     SETB TR0 ;run tmr0
008C D28E            319     SETB TR1
008E D2AF            320     SETB EA ;global interrupt enable
                     321     
A51 MACRO ASSEMBLER  MAIN                                                                 05/13/2016 16:04:26 PAGE     6

0090 C2A3            322     CLR P2.3 ;led to see if code is running
0092 020095          323     LJMP main
                     324                             
                     325     ;Main program
0095                 326     main:           
0095 1201BE          327                                     LCALL LFSR  ; generate new random data
                     328     ;                               LCALL detectCollision
                     329     
                     330                                     
0098 020095          331                             LJMP main
                     332                     
                     333     ;Interrupt handlers
                     334     
                     335     
009B                 336     ISR_tmr0: 
009B C2AF            337                             CLR EA ;global interrupt disable
009D C28C            338                             CLR TR0 ;stop tmr0
009F C28E            339                             CLR TR1
                     340                             ;reload timer
00A1 758CD0          341                             MOV TH0,#0D0h ;tmr0 MSB
00A4 758A00          342                             MOV TL0,#000h ;tmr0 LSB
                     343                             
                     344     ;DISPLAY PART
00A7 C2D4            345                     CLR RS1 ;move to registerbank 08h to 0Fh
00A9 D2D3            346                     SETB RS0
00AB 7907            347                     MOV R1, #numberOfRows ;counting register to 8 for rows
00AD 7A7F            348                     MOV R2, #01111111b ;data rows (msb = 0, others are 1) single bit zero, to e
                             nable current row
00AF 7830            349                     MOV R0, #vidMemStart ; starting adress disp mem
00B1                 350     rowIteration:
                     351     
00B1 7F05            352                             MOV R7, #bytesPerRow ; counter for 5 bytes of row data
00B3                 353     lineBytes:
00B3 E6              354                             MOV A,@R0 ; get data from ram
00B4 FE              355                             MOV R6,A
00B5 3144            356                             acall shiftR6 ; shift byte into ram
00B7 08              357                             INC R0 ; get next byte
00B8 DFF9            358                             DJNZ R7,lineBytes ; rinse and repeat
                     359                             
                     360                             ;shift R2 with the current row enable in the register
00BA EA              361                             MOV A,R2
00BB FE              362                             MOV R6, A
00BC 3144            363                             Acall shiftR6 ; shift column data byte into SR
00BE D2B2            364                             SETB P3.2 ; cycle store clock
00C0 C2B2            365                             CLR P3.2
                     366     
                     367                             ;rotate row bit to enable next row
00C2 EA              368                             MOV A, R2 
00C3 03              369                             RR A
00C4 FA              370                             MOV R2,A
                     371                              ; repeat until 7 rows done
00C5 D9EA            372                             DJNZ R1, rowIteration
                     373                             
                     374                             
                     375     
00C7 7904            376                             MOV R1, #04
00C9                 377     lastLineComp:                    ;loop to approximate the timing of the other rows to have 
                             similar brightness
00C9 7EFF            378                             MOV R6, #0FFh
00CB 3144            379                             Acall shiftR6 ; shift collumn data byte into SR
00CD D9FA            380                             DJNZ R1,lastLineComp
00CF 7EFE            381                                                     MOV R6, #cursorByte
00D1 3144            382                             Acall shiftR6 ; shift collumn data byte into SR
                     383                             
                     384     
                     385                             ;MOV R6, #11101111b
A51 MACRO ASSEMBLER  MAIN                                                                 05/13/2016 16:04:26 PAGE     7

00D3 E55A            386                             MOV A,ADCVal
00D5 75F025          387                             MOV B,#37
00D8 84              388                             DIV AB
00D9 FE              389                             MOV R6, A ;stockate in R6
00DA 74FD            390                             MOV A,#11111101b ;cursor data in A
                     391     
00DC                 392             locationLbl:
00DC 23              393                             RL A
00DD DEFD            394                             DJNZ R6,locationLbl  ;rotate cursor data equal to location
00DF 4401            395                             ORL A,#00000001b ;mask data for center 
00E1 F554            396                             MOV cursor,A
00E3 FE              397                             MOV R6,A ; move cursor data to R6 for shift
                     398                             
00E4 3144            399                             Acall shiftR6 ; shift collumn data byte into SR for row enable
00E6 120155          400                             LCALL detectCollision
00E9 D2B2            401                             SETB P3.2 ; cycle store clock
00EB C2B2            402                             CLR P3.2
                     403                             
                     404     
00ED C2D4            405                             CLR RS1 ;move to registerbank 00h to 08h
00EF C2D3            406                             CLR RS0 
                     407                             ;reenable timers
00F1 D28C            408                             SETB TR0 ;run tmr0
00F3 D28E            409                             SETB TR1
00F5 D2AF            410                             SETB EA ;global interrupt disable
                     411                             
00F7 32              412                             RETI
                     413     
                     414     
00F8                 415     ISR_tmr1:
                     416     ;DISPLAY PART
00F8 C28C            417                     CLR TR0 ;stop timer during buffer update
00FA C28E            418                     CLR TR1 ;stop timer during buffer update
00FC C2AF            419                     CLR EA ;global interrupt disable
                     420                     
00FE 758D00          421                     MOV TH1,#00h ;tmr0 MSB
0101 758B00          422                     MOV TL1,#00h ;tmr0 LSB
                     423                     
                     424                     ;DJNZ R5, afterRandom
0104 C0E0            425                     push Acc
                     426                     
0106 E553            427                     MOV A, blockIndex
0108 9001F6          428                     MOV DPTR, #block0               ; begin bij block0
010B 93              429                     MOVC A,@A+DPTR
                     430     
010C FF              431                     MOV R7,A ; stockate data in R7 for collumnshift
010D 12019C          432                     LCALL dispColShift
                     433                     
0110 E553            434                     MOV A, blockIndex ; retrieve current data offset
0112 04              435                     INC A; advance one adress
0113 F553            436                     MOV blockIndex, A ; save current adress
0115 AB57            437                     MOV R3, blockIteration ;get current iteration from address
0117 DB08            438                     DJNZ R3, afterRandom ; jupmp back to te iteration
0119 7B08            439                     MOV R3,#bytesPerBlock ; repeat 4 times
011B E518            440                     MOV A,18h ; get data from MSB LFSR
011D 5438            441                     ANL A,#0111000b ;mask for the number of blocks          
011F F553            442                     MOV blockIndex, A ; save current adress for next block
                     443     
                     444                     
                     445                     ;MOV R5,#2
0121                 446             afterRandom:
0121 8B57            447                     MOV blockIteration,R3
0123 D0E0            448                     pop Acc
0125 D28E            449                     SETB TR1 ;stop timer during buffer update
0127 D28C            450                     SETB TR0
0129 D2AF            451                     SETB EA
A51 MACRO ASSEMBLER  MAIN                                                                 05/13/2016 16:04:26 PAGE     8

                     452     
012B 32              453     reti
                     454     
012C                 455     ISR_ADC:
                     456     
012C C28C            457                     CLR TR0 ;stop timer during buffer update
012E C28E            458                     CLR TR1 ;stop timer during buffer update
0130 C2AF            459                     CLR EA ;global interrupt disable
                     460                     
0132 C0E0            461     push Acc
0134 E5F5            462             MOV A, ADDH
0136 F55A            463             MOV ADCVal,A
0138 75F32F          464             MOV ADCON, #00101111b ; set P1.0 as ADC input, restart conversion
013B D0E0            465     pop Acc
                     466     
013D D28E            467                     SETB TR1 ;stop timer during buffer update
013F D28C            468                     SETB TR0
0141 D2AF            469                     SETB EA
0143 32              470     reti
                     471     
                     472     
                     473     ;Shift byte from R6 into shift registers
0144                 474     shiftR6:
0144 C0E0            475                                     push Acc
0146 EE              476                                     MOV A, R6 
0147 7E08            477                                     MOV R6, #08 ;counting register to 8
0149                 478                                     Reg:
0149 13              479                                     RRC A ;rotate accumulator
014A 92C1            480                                     MOV P4.1,C ;carry to Data
014C D2C0            481                                     SETB P4.0 ; cycle serial clock
014E C2C0            482                                     CLR P4.0
0150 DEF7            483                                     DJNZ R6,Reg ;if 8 bits are shifted go further otherwise rep
                             eat
0152 D0E0            484                                     pop Acc
0154 22              485                                     ret
                     486     
                     487     
0155                 488     detectCollision:
                     489     ;       CLR TR0 ;stop timer during buffer update
                     490     ;       CLR TR1 ;stop timer during buffer update
                     491     ;       CLR EA ;global interrupt disable
0155 E534            492             MOV A,34h
0157 13              493             RRC A
0158 9267            494             MOV 67h,C
                     495             
015A E539            496             MOV A,39h
015C 13              497             RRC A
015D 9266            498             MOV 66h,C
                     499             
015F E53E            500             MOV A,3Eh
0161 13              501             RRC A
0162 9265            502             MOV 65h,C
                     503             
0164 E543            504             MOV A,43h
0166 13              505             RRC A
0167 9264            506             MOV 64h,C
                     507             
0169 E548            508             MOV A,48h
016B 13              509             RRC A
016C 9263            510             MOV 63h,C
                     511             
016E E54D            512             MOV A,4Dh
0170 13              513             RRC A
0171 9262            514             MOV 62h,C
                     515             
0173 E552            516             MOV A,52h
A51 MACRO ASSEMBLER  MAIN                                                                 05/13/2016 16:04:26 PAGE     9

0175 13              517             RRC A
0176 9261            518             MOV 61h,C
                     519     
0178 C260            520             CLR 60h
017A E52C            521             MOV A,2Ch
017C F4              522             CPL A
017D F52C            523             MOV 2Ch,A
                     524     
017F E554            525             MOV A,cursor
0181 F4              526             CPL A
0182 54FE            527             ANL A,#11111110b
0184 552C            528             ANL A,2Ch
                     529             
0186 7001            530             JNZ reset
                     531     ;       SETB TR0 ;stop timer during buffer update
                     532     ;       SETB TR1 ;stop timer during buffer update
                     533     ;       SETB EA ;global interrupt disable
                     534                     
0188 22              535             ret
                     536             
0189                 537     reset:
0189 7828            538     MOV R0,#numberOfCollumns
018B                 539     gameReset:
018B 7FFF            540                     MOV R7,#0FFh ; stockate data in R7 for collumnshift
018D 12019C          541                     LCALL dispColShift
0190 D8F9            542                     DJNZ R0, gameReset
0192 02009B          543     LJMP ISR_tmr0
                     544     
                     545     
                     546             
                     547     
                     548     
                     549     
                     550     
                     551     
                     552     
0195                 553     dispRowShift:
0195 E7              554             MOV A,@R1
0196 33              555             RLC A
0197 F7              556             MOV @R1,A
0198 09              557             INC R1
0199 DEFA            558             DJNZ R6, dispRowShift
019B 22              559             RET
                     560     ;shift 7 MSB in framebuffer
019C                 561     dispColShift:
019C EF              562             MOV A, R7
019D 7D07            563             MOV     R5, #numberOfRows ;counter to count rows
                     564             ;RRC A ;rotate to drop LSB
019F 7930            565             MOV R1, #vidMemStart ; start at highest address to decrease each time
01A1                 566     dispColShiftLoop:
01A1 13              567             RRC A ;Rotate LSB in carry to shift in row
01A2 7E05            568             MOV     R6, #bytesPerRow ; counter to rotate 5 horizontal bytes
01A4 C0E0            569             PUSH ACC ; push acc to save current data
01A6 3195            570             ACALL dispRowShift ; rotate all row bytes
01A8 D0E0            571             POP ACC
01AA DDF5            572             DJNZ R5, dispColShiftLoop
01AC 22              573             RET
                     574             
                     575             
                     576             
                     577             
                     578             
                     579     ;rudimentary delay for test purposes
01AD                 580     delay:   
01AD 7E9F            581                     MOV R6, #09Fh
01AF 1201B3          582                     LCALL loop
A51 MACRO ASSEMBLER  MAIN                                                                 05/13/2016 16:04:26 PAGE    10

01B2 22              583                     RET
                     584     
01B3                 585     loop:   
01B3 7F00            586                     MOV R7, #00h
01B5 1201BB          587                     LCALL loop2
01B8 D9F9            588                     DJNZ R1, loop
01BA 22              589                     RET
                     590                     
01BB DAFE            591     loop2:  DJNZ R2,loop2
01BD 22              592                     RET
                     593                     
                     594                     
                     595     ;random number generator code trough LFSR               
01BE                 596     LFSR: 
01BE D2D4            597             SETB RS1 ;move to registerbank 08h to 0Fh
01C0 D2D3            598             SETB RS0
01C2 E8              599             MOV A,R0 ;Save highest byte to address
01C3 FC              600             MOV R4,A
01C4 1201E9          601             lcall LFSRShift
01C7 1201E9          602             lcall LFSRShift
01CA 6C              603             XRL A,R4
01CB FC              604             MOV R4,A
01CC 1201E9          605             lcall LFSRShift
01CF 1201E9          606             lcall LFSRShift
01D2 1201E9          607             lcall LFSRShift
01D5 1201E9          608             lcall LFSRShift
01D8 6C              609             XRL A,R4
01D9 FC              610             MOV R4,A                
01DA 1201E9          611             lcall LFSRShift
01DD 6C              612             XRL A,R4
01DE FC              613             MOV R4,A
01DF 1201E9          614             lcall LFSRShift
01E2 EC              615             MOV A,R4
01E3 FB              616             MOV R3,A
                     617             
01E4 C2D4            618             CLR RS1 ;move to registerbank 08h to 0Fh
01E6 C2D3            619             CLR RS0
                     620             
01E8 22              621             RET
                     622             
                     623     ;shift the 32 bit registers of the LFSR
01E9                 624     LFSRShift: 
01E9 EB              625             MOV A,R3 ; rotate shift register
01EA 33              626             RLC A
01EB FB              627             MOV R3,A
01EC EA              628             MOV A,R2 ; rotate shift register
01ED 33              629             RLC A
01EE FA              630             MOV R2,A
01EF E9              631             MOV A,R1 ; rotate shift register
01F0 33              632             RLC A
01F1 F9              633             MOV R1,A
01F2 E8              634             MOV A,R0 ; rotate shift register
01F3 33              635             RLC A
01F4 F8              636             MOV R0,A
01F5 22              637             ret     
                     638             
                     639     
01F6                 640             block0:
01F6 3E              641             db 0x3e
01F7 3E              642             db 0x3e
01F8 3E              643             db 0x3e
01F9 3E              644             db 0x3e
01FA 3E              645             db 0x3e
01FB 3E              646             db 0x3e
01FC 3E              647             db 0x3e
01FD 3E              648             db 0x3e
A51 MACRO ASSEMBLER  MAIN                                                                 05/13/2016 16:04:26 PAGE    11

                     649             
                     650             
01FE                 651             block1:
                     652             
01FE 3E              653             db 0x3e
01FF 3E              654             db 0x3e
0200 3E              655             db 0x3e
0201 1C              656             db 0x1C
0202 1C              657             db 0x1C
0203 1C              658             db 0x1C
0204 3E              659             db 0x3e
0205 3E              660             db 0x3e
                     661             
0206                 662             block2:
                     663             
0206 3E              664             db 0x3e
0207 3E              665             db 0x3e
0208 3E              666             db 0x3e
0209 38              667             db 0x38
020A 38              668             db 0x38
020B 38              669             db 0x38
020C 3E              670             db 0x3e
020D 3E              671             db 0x3e
                     672                     
020E                 673             block3:
                     674             
020E 3E              675             db 0x3e
020F 3E              676             db 0x3e
0210 3E              677             db 0x3e
0211 18              678             db 0x18
0212 18              679             db 0x18
0213 18              680             db 0x18
0214 3E              681             db 0x3e
0215 3E              682             db 0x3e
                     683                     
0216                 684             block4:
                     685             
0216 3E              686             db 0x3e
0217 3E              687             db 0x3e
0218 3E              688             db 0x3e
0219 06              689             db 0x06
021A 06              690             db 0x06
021B 3E              691             db 0x3e
021C 3E              692             db 0x3e
021D 3E              693             db 0x3e
                     694             
021E                 695             block5:
021E 3E              696             db 0x3e
021F 3E              697             db 0x3e
0220 3E              698             db 0x3e
0221 08              699             db 0x08
0222 08              700             db 0x08
0223 3E              701             db 0x3e
0224 3E              702             db 0x3e
0225 3E              703             db 0x3e
                     704                     
0226                 705             block6:
                     706             
0226 3E              707             db 0x3e
0227 3E              708             db 0x3e
0228 3E              709             db 0x3e
0229 32              710             db 0x32
022A 32              711             db 0x32
022B 3E              712             db 0x3e
022C 3E              713             db 0x3e
022D 3E              714             db 0x3e
A51 MACRO ASSEMBLER  MAIN                                                                 05/13/2016 16:04:26 PAGE    12

                     715                     
022E                 716             block7:
022E 3E              717             db 0x3e
022F 3E              718             db 0x3e
0230 3E              719             db 0x3e
0231 26              720             db 0x26
0232 26              721             db 0x26
0233 3E              722             db 0x3e
0234 3E              723             db 0x3e
0235 3E              724             db 0x3e
                     725                     
0236                 726             block8:
0236 3E              727             db 0x3e
0237 3E              728             db 0x3e
0238 3E              729             db 0x3e
0239 26              730             db 0x26
023A 26              731             db 0x26
023B 3E              732             db 0x3e
023C 3E              733             db 0x3e
023D 3E              734             db 0x3e
                     735                     
                     736                     
                     737     
                     738     END
                             
                                     
                                             
A51 MACRO ASSEMBLER  MAIN                                                                 05/13/2016 16:04:26 PAGE    13

SYMBOL TABLE LISTING
------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES

AC . . . . . . . .  B ADDR   00D0H.6 A   
ACC. . . . . . . .  D ADDR   00E0H   A   
ADCF . . . . . . .  D ADDR   00F6H   A   
ADCLK. . . . . . .  D ADDR   00F2H   A   
ADCON. . . . . . .  D ADDR   00F3H   A   
ADCVAL . . . . . .  D ADDR   005AH   A   
ADDH . . . . . . .  D ADDR   00F5H   A   
ADDL . . . . . . .  D ADDR   00F4H   A   
AFTERRANDOM. . . .  C ADDR   0121H   A   
AUXR . . . . . . .  D ADDR   008EH   A   
AUXR1. . . . . . .  D ADDR   00A2H   A   
B. . . . . . . . .  D ADDR   00F0H   A   
BLOCK0 . . . . . .  C ADDR   01F6H   A   
BLOCK1 . . . . . .  C ADDR   01FEH   A   
BLOCK2 . . . . . .  C ADDR   0206H   A   
BLOCK3 . . . . . .  C ADDR   020EH   A   
BLOCK4 . . . . . .  C ADDR   0216H   A   
BLOCK5 . . . . . .  C ADDR   021EH   A   
BLOCK6 . . . . . .  C ADDR   0226H   A   
BLOCK7 . . . . . .  C ADDR   022EH   A   
BLOCK8 . . . . . .  C ADDR   0236H   A   
BLOCKINDEX . . . .  D ADDR   0053H   A   
BLOCKITERATION . .  D ADDR   0057H   A   
BYTESPERBLOCK. . .  N NUMB   0008H   A   
BYTESPERROW. . . .  N NUMB   0005H   A   
CANBT1 . . . . . .  D ADDR   00B4H   A   
CANBT2 . . . . . .  D ADDR   00B5H   A   
CANBT3 . . . . . .  D ADDR   00B6H   A   
CANCONCH . . . . .  D ADDR   00B3H   A   
CANEN1 . . . . . .  D ADDR   00CEH   A   
CANEN2 . . . . . .  D ADDR   00CFH   A   
CANGCON. . . . . .  D ADDR   00ABH   A   
CANGIE . . . . . .  D ADDR   00C1H   A   
CANGIT . . . . . .  D ADDR   009BH   A   
CANGSTA. . . . . .  D ADDR   00AAH   A   
CANIDM1. . . . . .  D ADDR   00C4H   A   
CANIDM2. . . . . .  D ADDR   00C5H   A   
CANIDM3. . . . . .  D ADDR   00C6H   A   
CANIDM4. . . . . .  D ADDR   00C7H   A   
CANIDT1. . . . . .  D ADDR   00BCH   A   
CANIDT2. . . . . .  D ADDR   00BDH   A   
CANIDT3. . . . . .  D ADDR   00BEH   A   
CANIDT4. . . . . .  D ADDR   00BFH   A   
CANIE1 . . . . . .  D ADDR   00C2H   A   
CANIE2 . . . . . .  D ADDR   00C3H   A   
CANMSG . . . . . .  D ADDR   00A3H   A   
CANPAGE. . . . . .  D ADDR   00B1H   A   
CANREC . . . . . .  D ADDR   009DH   A   
CANSIT1. . . . . .  D ADDR   00BAH   A   
CANSIT2. . . . . .  D ADDR   00BBH   A   
CANSTCH. . . . . .  D ADDR   00B2H   A   
CANSTMPH . . . . .  D ADDR   00AFH   A   
CANSTMPL . . . . .  D ADDR   00AEH   A   
CANTCON. . . . . .  D ADDR   00A1H   A   
CANTEC . . . . . .  D ADDR   009CH   A   
CANTIMH. . . . . .  D ADDR   00ADH   A   
CANTIML. . . . . .  D ADDR   00ACH   A   
CANTTCH. . . . . .  D ADDR   00A5H   A   
CANTTCL. . . . . .  D ADDR   00A4H   A   
CCAP0H . . . . . .  D ADDR   00FAH   A   
A51 MACRO ASSEMBLER  MAIN                                                                 05/13/2016 16:04:26 PAGE    14

CCAP0L . . . . . .  D ADDR   00EAH   A   
CCAP1H . . . . . .  D ADDR   00FBH   A   
CCAP1L . . . . . .  D ADDR   00EBH   A   
CCAP2H . . . . . .  D ADDR   00FCH   A   
CCAP2L . . . . . .  D ADDR   00ECH   A   
CCAP3H . . . . . .  D ADDR   00FDH   A   
CCAP3L . . . . . .  D ADDR   00EDH   A   
CCAP4H . . . . . .  D ADDR   00FEH   A   
CCAP4L . . . . . .  D ADDR   00EEH   A   
CCAPM0 . . . . . .  D ADDR   00DAH   A   
CCAPM1 . . . . . .  D ADDR   00DBH   A   
CCAPM2 . . . . . .  D ADDR   00DCH   A   
CCAPM3 . . . . . .  D ADDR   00DDH   A   
CCAPM4 . . . . . .  D ADDR   00DEH   A   
CCF0 . . . . . . .  B ADDR   00D0H.0 A   
CCF1 . . . . . . .  B ADDR   00D0H.1 A   
CCF2 . . . . . . .  B ADDR   00D0H.2 A   
CCF3 . . . . . . .  B ADDR   00D0H.3 A   
CCF4 . . . . . . .  B ADDR   00D0H.4 A   
CCON . . . . . . .  D ADDR   00D8H   A   
CF . . . . . . . .  B ADDR   00D8H.7 A   
CH . . . . . . . .  D ADDR   00F9H   A   
CKCON. . . . . . .  D ADDR   008FH   A   
CL . . . . . . . .  D ADDR   00E9H   A   
CMOD . . . . . . .  D ADDR   00D9H   A   
CP_RL2 . . . . . .  B ADDR   00C8H.0 A   
CR . . . . . . . .  B ADDR   00D8H.6 A   
CURSOR . . . . . .  D ADDR   0054H   A   
CURSORBYTE . . . .  N NUMB   00FEH   A   
CURSORBYTEMASK . .  N NUMB   0001H   A   
CY . . . . . . . .  B ADDR   00D0H.7 A   
C_T2 . . . . . . .  B ADDR   00C8H.1 A   
DELAY. . . . . . .  C ADDR   01ADH   A   
DETECTCOLLISION. .  C ADDR   0155H   A   
DISPCOLSHIFT . . .  C ADDR   019CH   A   
DISPCOLSHIFTLOOP .  C ADDR   01A1H   A   
DISPROWSHIFT . . .  C ADDR   0195H   A   
DPH. . . . . . . .  D ADDR   0083H   A   
DPL. . . . . . . .  D ADDR   0082H   A   
EA . . . . . . . .  B ADDR   00A8H.7 A   
EADC . . . . . . .  B ADDR   00E8H.1 A   
EC . . . . . . . .  B ADDR   00A8H.6 A   
ECAN . . . . . . .  B ADDR   00E8H.0 A   
EECON. . . . . . .  D ADDR   00D2H   A   
ES . . . . . . . .  B ADDR   00A8H.4 A   
ET0. . . . . . . .  B ADDR   00A8H.1 A   
ET1. . . . . . . .  B ADDR   00A8H.3 A   
ET2. . . . . . . .  B ADDR   00A8H.5 A   
ETIM . . . . . . .  B ADDR   00E8H.2 A   
EX0. . . . . . . .  B ADDR   00A8H.0 A   
EX1. . . . . . . .  B ADDR   00A8H.2 A   
EXEN2. . . . . . .  B ADDR   00C8H.3 A   
EXF2 . . . . . . .  B ADDR   00C8H.6 A   
F0 . . . . . . . .  B ADDR   00D0H.5 A   
FCON . . . . . . .  D ADDR   00D1H   A   
FE . . . . . . . .  B ADDR   0098H.7 A   
FPGACON. . . . . .  D ADDR   00F1H   A   
GAMERESET. . . . .  C ADDR   018BH   A   
IE0. . . . . . . .  B ADDR   0088H.1 A   
IE1. . . . . . . .  B ADDR   0088H.3 A   
IEN0 . . . . . . .  D ADDR   00A8H   A   
IEN1 . . . . . . .  D ADDR   00E8H   A   
INIT . . . . . . .  C ADDR   0046H   A   
INT0 . . . . . . .  B ADDR   00B0H.2 A   
INT1 . . . . . . .  B ADDR   00B0H.3 A   
IPH0 . . . . . . .  D ADDR   00B7H   A   
A51 MACRO ASSEMBLER  MAIN                                                                 05/13/2016 16:04:26 PAGE    15

IPH1 . . . . . . .  D ADDR   00F7H   A   
IPL0 . . . . . . .  D ADDR   00B8H   A   
IPL1 . . . . . . .  D ADDR   00F8H   A   
ISR_ADC. . . . . .  C ADDR   012CH   A   
ISR_TMR0 . . . . .  C ADDR   009BH   A   
ISR_TMR1 . . . . .  C ADDR   00F8H   A   
IT0. . . . . . . .  B ADDR   0088H.0 A   
IT1. . . . . . . .  B ADDR   0088H.2 A   
LASTLINECOMP . . .  C ADDR   00C9H   A   
LFSR . . . . . . .  C ADDR   01BEH   A   
LFSRSHIFT. . . . .  C ADDR   01E9H   A   
LINEBYTES. . . . .  C ADDR   00B3H   A   
LOCATIONLBL. . . .  C ADDR   00DCH   A   
LOOP . . . . . . .  C ADDR   01B3H   A   
LOOP2. . . . . . .  C ADDR   01BBH   A   
MAIN . . . . . . .  C ADDR   0095H   A   
NUMBEROFCOLLUMNS .  N NUMB   0028H   A   
NUMBEROFROWS . . .  N NUMB   0007H   A   
OV . . . . . . . .  B ADDR   00D0H.2 A   
P. . . . . . . . .  B ADDR   00D0H.0 A   
P0 . . . . . . . .  D ADDR   0080H   A   
P1 . . . . . . . .  D ADDR   0090H   A   
P2 . . . . . . . .  D ADDR   00A0H   A   
P3 . . . . . . . .  D ADDR   00B0H   A   
P4 . . . . . . . .  D ADDR   00C0H   A   
PCON . . . . . . .  D ADDR   0087H   A   
PSW. . . . . . . .  D ADDR   00D0H   A   
RAMINIT. . . . . .  C ADDR   0060H   A   
RB8. . . . . . . .  B ADDR   0098H.2 A   
RCAP2H . . . . . .  D ADDR   00CBH   A   
RCAP2L . . . . . .  D ADDR   00CAH   A   
RCLK . . . . . . .  B ADDR   00C8H.5 A   
RD . . . . . . . .  B ADDR   00B0H.7 A   
REG. . . . . . . .  C ADDR   0149H   A   
REN. . . . . . . .  B ADDR   0098H.4 A   
RESET. . . . . . .  C ADDR   0189H   A   
RI . . . . . . . .  B ADDR   0098H.0 A   
ROWITERATION . . .  C ADDR   00B1H   A   
RS0. . . . . . . .  B ADDR   00D0H.3 A   
RS1. . . . . . . .  B ADDR   00D0H.4 A   
RXD. . . . . . . .  B ADDR   00B0H.0 A   
SADDR. . . . . . .  D ADDR   00A9H   A   
SADEN. . . . . . .  D ADDR   00B9H   A   
SBUF . . . . . . .  D ADDR   0099H   A   
SCON . . . . . . .  D ADDR   0098H   A   
SHIFTR6. . . . . .  C ADDR   0144H   A   
SM0. . . . . . . .  B ADDR   0098H.7 A   
SM1. . . . . . . .  B ADDR   0098H.6 A   
SM2. . . . . . . .  B ADDR   0098H.5 A   
SP . . . . . . . .  D ADDR   0081H   A   
T0 . . . . . . . .  B ADDR   00B0H.4 A   
T1 . . . . . . . .  B ADDR   00B0H.5 A   
T2CON. . . . . . .  D ADDR   00C8H   A   
T2MOD. . . . . . .  D ADDR   00C9H   A   
TB8. . . . . . . .  B ADDR   0098H.3 A   
TCLK . . . . . . .  B ADDR   00C8H.4 A   
TCON . . . . . . .  D ADDR   0088H   A   
TF0. . . . . . . .  B ADDR   0088H.5 A   
TF1. . . . . . . .  B ADDR   0088H.7 A   
TF2. . . . . . . .  B ADDR   00C8H.7 A   
TH0. . . . . . . .  D ADDR   008CH   A   
TH1. . . . . . . .  D ADDR   008DH   A   
TH2. . . . . . . .  D ADDR   00CDH   A   
TI . . . . . . . .  B ADDR   0098H.1 A   
TL0. . . . . . . .  D ADDR   008AH   A   
TL1. . . . . . . .  D ADDR   008BH   A   
A51 MACRO ASSEMBLER  MAIN                                                                 05/13/2016 16:04:26 PAGE    16

TL2. . . . . . . .  D ADDR   00CCH   A   
TMOD . . . . . . .  D ADDR   0089H   A   
TR0. . . . . . . .  B ADDR   0088H.4 A   
TR1. . . . . . . .  B ADDR   0088H.6 A   
TR2. . . . . . . .  B ADDR   00C8H.2 A   
TXD. . . . . . . .  B ADDR   00B0H.1 A   
VIDMEMEND. . . . .  N NUMB   0052H   A   
VIDMEMLENGTH . . .  N NUMB   0023H   A   
VIDMEMSTART. . . .  N NUMB   0030H   A   
WDTPRG . . . . . .  D ADDR   00A7H   A   
WDTRST . . . . . .  D ADDR   00A6H   A   
WR . . . . . . . .  B ADDR   00B0H.6 A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
