A51 MACRO ASSEMBLER  MAIN                                                                 05/09/2016 15:16:16 PAGE     1


MACRO ASSEMBLER A51 V8.02c
OBJECT MODULE PLACED IN .\Objects\main.obj
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE main.a51 NOMOD51 SET(SMALL) DEBUG PRINT(.\Listings\main.lst) OBJECT(.\O
                      bjects\main.obj) EP

LOC  OBJ            LINE     SOURCE

                       1     
                       2     ;*******************************************
                       3     ;* Sensors & Microsystem electronics       *
                       4     ;*                                         *
                       5     ;* Names: Steven Peters - Thomas Lapauw    *
                       6     ;*                                         *
                       7     ;*                Task 9                   *
                       8     ;*                                         *
                       9     ;*******************************************
                      10     
                      11     
                      12     ;Special register declarations
                      13     ;$include (t89c51cc01.inc)
                +1    14     ;*INC*************************************************************************
                +1    15     ; NAME: 89C51CC01.inc           
                +1    16     ;----------------------------------------------------------------------------
                +1    17     ; PURPOSE: for Keil
                +1    18     ;*****************************************************************************
                +1    19     
                +1    20     ;----------------------------------------
                +1    21     ; Include file for 8051 SFR Definitions  
                +1    22     ;----------------------------------------
                +1    23     
                +1    24     ;  BYTE Register 
  0080          +1    25     P0      DATA    80H
  0090          +1    26     P1      DATA    90H
  00A0          +1    27     P2      DATA    0A0H
                +1    28     
  00B0          +1    29     P3      DATA    0B0H
  00B7          +1    30     RD      BIT     0B7H
  00B6          +1    31     WR      BIT     0B6H
  00B5          +1    32     T1      BIT     0B5H
  00B4          +1    33     T0      BIT     0B4H
  00B3          +1    34     INT1    BIT     0B3H
  00B2          +1    35     INT0    BIT     0B2H
  00B1          +1    36     TXD     BIT     0B1H
  00B0          +1    37     RXD     BIT     0B0H
                +1    38     
  00C0          +1    39     P4      DATA    0C0H
                +1    40     
  00D0          +1    41     PSW     DATA    0D0H
  00D7          +1    42     CY      BIT     0D7H
  00D6          +1    43     AC      BIT     0D6H
  00D5          +1    44     F0      BIT     0D5H
  00D4          +1    45     RS1     BIT     0D4H
  00D3          +1    46     RS0     BIT     0D3H
  00D2          +1    47     OV      BIT     0D2H
  00D0          +1    48     P       BIT     0D0H
                +1    49     
  00E0          +1    50     ACC     DATA    0E0H
  00F0          +1    51     B       DATA    0F0H
  0081          +1    52     SP      DATA    81H
  0082          +1    53     DPL     DATA    82H
  0083          +1    54     DPH     DATA    83H
  0087          +1    55     PCON    DATA    87H
  008F          +1    56     CKCON   DATA    8FH
                +1    57     
A51 MACRO ASSEMBLER  MAIN                                                                 05/09/2016 15:16:16 PAGE     2

                +1    58     ;------------------ TIMERS registers ---------------------
  0088          +1    59     TCON    DATA    88H
  008F          +1    60     TF1     BIT     8FH
  008E          +1    61     TR1     BIT     8EH
  008D          +1    62     TF0     BIT     8DH
  008C          +1    63     TR0     BIT     8CH
  008B          +1    64     IE1     BIT     8BH
  008A          +1    65     IT1     BIT     8AH
  0089          +1    66     IE0     BIT     89H
  0088          +1    67     IT0     BIT     88H
                +1    68             
  0089          +1    69     TMOD    DATA    89H
                +1    70     
  00C8          +1    71     T2CON   DATA    0C8H
  00CF          +1    72     TF2     BIT     0CFH
  00CE          +1    73     EXF2    BIT     0CEH
  00CD          +1    74     RCLK    BIT     0CDH
  00CC          +1    75     TCLK    BIT     0CCH
  00CB          +1    76     EXEN2   BIT     0CBH
  00CA          +1    77     TR2     BIT     0CAH
  00C9          +1    78     C_T2    BIT     0C9H
  00C8          +1    79     CP_RL2  BIT     0C8H
                +1    80             
  00C9          +1    81     T2MOD   DATA    0C9H    
  008A          +1    82     TL0     DATA    8AH
  008B          +1    83     TL1     DATA    8BH
  00CC          +1    84     TL2     DATA    0CCH
  008C          +1    85     TH0     DATA    8CH
  008D          +1    86     TH1     DATA    8DH
  00CD          +1    87     TH2     DATA    0CDH    
  00CA          +1    88     RCAP2L  DATA    0CAH    
  00CB          +1    89     RCAP2H  DATA    0CBH    
  00A6          +1    90     WDTRST  DATA    0A6H    
  00A7          +1    91     WDTPRG  DATA    0A7H    
                +1    92     
                +1    93     
                +1    94     ;------------------- UART registers ------------------------
  0098          +1    95     SCON    DATA    98H
  009F          +1    96     SM0     BIT     9FH
  009F          +1    97     FE      BIT     9FH
  009E          +1    98     SM1     BIT     9EH
  009D          +1    99     SM2     BIT     9DH
  009C          +1   100     REN     BIT     9CH
  009B          +1   101     TB8     BIT     9BH
  009A          +1   102     RB8     BIT     9AH
  0099          +1   103     TI      BIT     99H
  0098          +1   104     RI      BIT     98H
                +1   105     
  0099          +1   106     SBUF    DATA    99H
  00B9          +1   107     SADEN   DATA    0B9H
  00A9          +1   108     SADDR   DATA    0A9H    
                +1   109     
                +1   110     ;-------------------- ADC registers ----------------------
  00F2          +1   111     ADCLK   DATA    0F2H    
  00F3          +1   112     ADCON   DATA    0F3H    
  00F4          +1   113     ADDL    DATA    0F4H    
  00F5          +1   114     ADDH    DATA    0F5H    
  00F6          +1   115     ADCF    DATA    0F6H    
                +1   116     
                +1   117     ;-------------------- FLASH EEPROM registers ------------
  00F1          +1   118     FPGACON  DATA   0F1H    
  00D1          +1   119     FCON    DATA    0D1H    
  00D2          +1   120     EECON   DATA    0D2H    
  008E          +1   121     AUXR    DATA    8EH
  00A2          +1   122     AUXR1   DATA    0A2H
                +1   123     
A51 MACRO ASSEMBLER  MAIN                                                                 05/09/2016 15:16:16 PAGE     3

                +1   124     ;-------------------- IT registers -----------------------
  00F8          +1   125     IPL1    DATA    0F8H    
  00F7          +1   126     IPH1    DATA    0F7H    
  00A8          +1   127     IEN0    DATA    0A8H    
  00B8          +1   128     IPL0    DATA    0B8H    
  00B7          +1   129     IPH0    DATA    0B7H    
  00E8          +1   130     IEN1    DATA    0E8H    
                +1   131     
                +1   132     ;  IEN0  
  00AF          +1   133     EA      BIT     0AFH
  00AE          +1   134     EC      BIT     0AEH
  00AD          +1   135     ET2     BIT     0ADH
  00AC          +1   136     ES      BIT     0ACH
  00AB          +1   137     ET1     BIT     0ABH
  00AA          +1   138     EX1     BIT     0AAH
  00A9          +1   139     ET0     BIT     0A9H
  00A8          +1   140     EX0     BIT     0A8H
                +1   141     
                +1   142     ;  IEN1 
  00EA          +1   143     ETIM    BIT     0EAH
  00E9          +1   144     EADC    BIT     0E9H
  00E8          +1   145     ECAN    BIT     0E8H
                +1   146     
                +1   147     ;--------------------- PCA registers --------------------
  00D8          +1   148     CCON    DATA    0D8H    
  00DF          +1   149     CF              BIT             0DFH
  00DE          +1   150     CR              BIT             0DEH
  00D4          +1   151     CCF4    BIT             0D4H
  00D3          +1   152     CCF3    BIT             0D3H
  00D2          +1   153     CCF2    BIT             0D2H
  00D1          +1   154     CCF1    BIT             0D1H
  00D0          +1   155     CCF0    BIT             0D0H
                +1   156     
  00D9          +1   157     CMOD    DATA    0D9H    
  00F9          +1   158     CH      DATA    0F9H    
  00E9          +1   159     CL      DATA    0E9H    
  00FA          +1   160     CCAP0H  DATA    0FAH    
  00EA          +1   161     CCAP0L  DATA    0EAH    
  00DA          +1   162     CCAPM0  DATA    0DAH    
  00FB          +1   163     CCAP1H  DATA    0FBH    
  00EB          +1   164     CCAP1L  DATA    0EBH    
  00DB          +1   165     CCAPM1  DATA    0DBH    
  00FC          +1   166     CCAP2H  DATA    0FCH    
  00EC          +1   167     CCAP2L  DATA    0ECH    
  00DC          +1   168     CCAPM2  DATA    0DCH    
  00FD          +1   169     CCAP3H  DATA    0FDH    
  00ED          +1   170     CCAP3L  DATA    0EDH    
  00DD          +1   171     CCAPM3  DATA    0DDH    
  00FE          +1   172     CCAP4H  DATA    0FEH    
  00EE          +1   173     CCAP4L  DATA    0EEH    
  00DE          +1   174     CCAPM4  DATA    0DEH    
                +1   175     
                +1   176     ;------------------- CAN registers --------------------------
  009B          +1   177     CANGIT          DATA    09BH
  009C          +1   178     CANTEC          DATA    09CH
  009D          +1   179     CANREC          DATA    09DH
  00A1          +1   180     CANTCON         DATA    0A1H    
  00A3          +1   181     CANMSG          DATA    0A3H    
  00A4          +1   182     CANTTCL         DATA    0A4H    
  00A5          +1   183     CANTTCH         DATA    0A5H    
  00AA          +1   184     CANGSTA         DATA    0AAH
  00AB          +1   185     CANGCON         DATA    0ABH
  00AC          +1   186     CANTIML         DATA    0ACH    
  00AD          +1   187     CANTIMH         DATA    0ADH    
  00AE          +1   188     CANSTMPL        DATA    0AEH    
  00AF          +1   189     CANSTMPH        DATA    0AFH
A51 MACRO ASSEMBLER  MAIN                                                                 05/09/2016 15:16:16 PAGE     4

  00B1          +1   190     CANPAGE         DATA    0B1H
  00B2          +1   191     CANSTCH         DATA    0B2H    
  00B3          +1   192     CANCONCH        DATA    0B3H    
  00B4          +1   193     CANBT1          DATA    0B4H
  00B5          +1   194     CANBT2          DATA    0B5H
  00B6          +1   195     CANBT3          DATA    0B6H
  00BA          +1   196     CANSIT1         DATA    0BAH
  00BB          +1   197     CANSIT2         DATA    0BBH    
  00BC          +1   198     CANIDT1         DATA    0BCH
  00BD          +1   199     CANIDT2         DATA    0BDH    
  00BE          +1   200     CANIDT3         DATA    0BEH    
  00BF          +1   201     CANIDT4         DATA    0BFH    
  00C1          +1   202     CANGIE          DATA    0C1H
  00C2          +1   203     CANIE1          DATA    0C2H    
  00C3          +1   204     CANIE2          DATA    0C3H
  00C4          +1   205     CANIDM1         DATA    0C4H
  00C5          +1   206     CANIDM2         DATA    0C5H
  00C6          +1   207     CANIDM3         DATA    0C6H
  00C7          +1   208     CANIDM4         DATA    0C7H
  00CE          +1   209     CANEN1          DATA    0CEH
  00CF          +1   210     CANEN2          DATA    0CFH
                +1   211     
                +1   212     
                     213     
                     214             
                     215     ;Boot code
0000                 216     ORG 0000h
0000 020046          217     LJMP init 
                     218     
                     219     ;Interrupt address vectors
000B                 220     ORG 000Bh
000B 02009F          221     LJMP ISR_tmr0
                     222     
001B                 223     ORG 001Bh
001B 0200F8          224     LJMP ISR_tmr1
                     225     
0043                 226     ORG 0043h
0043 02012E          227     LJMP ISR_ADC
                     228     
                     229     
                     230     
                     231     
                     232     ;Address declarations
  0030               233     vidMemStart EQU 030h
  0052               234     vidMemEnd EQU 052h
  0023               235     vidMemLength EQU 35
                     236     
  0028               237     numberOfCollumns EQU 40
  0007               238     numberOfRows EQU 7
  0005               239     bytesPerRow EQU 5
                     240             
  0008               241     bytesPerBlock EQU 8
                     242             
  00DF               243     cursorByte EQU 11011111b
                     244     
                     245     
                     246     
                     247     
                     248     ;Initialization code
0046                 249     init:   
                     250     
                     251                             ;init tmr0
0046 758911          252                             MOV TMOD,#00010001b ;config tmr0 & tmr1 in 16bit mode
0049 758CFF          253                             MOV TH0,#0FFh ;tmr0 MSB
004C 758AFF          254                             MOV TL0,#0FFh ;tmr0 LSB
                     255                             
A51 MACRO ASSEMBLER  MAIN                                                                 05/09/2016 15:16:16 PAGE     5

004F 758DFF          256                             MOV TH1,#0FFh ;tmr0 MSB
0052 758BFF          257                             MOV TL1,#0FFh ;tmr0 LSB
                     258                             
0055 D2AB            259                             SETB ET1
0057 D2A9            260                             SETB ET0 ;enable interrupt of tmr0
                     261     
                     262     
0059 758170          263                             MOV SP, #70h ; move stackpointer above registers
                     264                              
                     265                              
                     266     ;Initialize ram                  
005C 7830            267                             MOV R0,#vidMemStart 
005E 7928            268                             MOV R1,#numberOfCollumns
0060                 269     ramInit:
0060 76FF            270                             MOV @R0,#0FFh
0062 08              271                             INC R0
0063 D9FB            272                             DJNZ R1,ramInit
                     273                             
                     274     ; seed of LFSR          
0065 75186A          275     MOV 18h, #1101010b 
                     276     
                     277     
0068 7828            278     MOV R0,#numberOfCollumns
006A                 279     gameInit:
006A 7F3E            280                     MOV R7,#03eh ; stockate data in R7 for collumnshift
006C 12015E          281                     LCALL dispColShift
006F D8F9            282                     DJNZ R0, gameInit
                     283     
                     284     
0071 E518            285                     MOV A,18h ; get data from MSB LFSR
0073 541C            286                     ANL A,#0011100b ;mask for the number of blocks          
0075 F553            287                     MOV 53h, A ; save current adress for next block
                     288     
                     289     
                     290     ;**********************************************************************************
                     291             ; Setup for the ADC
0077 75F6FF          292             MOV ADCF,#0FFh ;enable the adc...
007A D2E9            293             SETB EADC
007C 75F32F          294             MOV ADCON, #00101111b ; set P1.0 as ADC input
                     295     
                     296     
007F 7B08            297                     MOV R3,#bytesPerBlock ; repeat 4 times
0081 E518            298                     MOV A,18h ; get data from MSB LFSR
0083 5438            299                     ANL A,#0111000b ;mask for the number of blocks          
0085 F553            300                     MOV 53h, A ; save current adress for next block
0087 120180          301                     LCALL LFSR  ; generate new random data
008A B2A4            302                     CPL P2.4 ; toggle led to see if working
                     303     
008C 8B57            304                     MOV 57h,R3
                     305             
                     306             
                     307     
                     308     
008E D28C            309     SETB TR0 ;run tmr0
0090 D28E            310     SETB TR1
0092 D2AF            311     SETB EA ;global interrupt enable
                     312     
0094 C2A3            313     CLR P2.3 ;led to see if code is running
0096 020099          314     LJMP main
                     315                             
                     316     ;Main program
0099                 317     main:           
0099 120180          318                                     LCALL LFSR  ; generate new random data
                     319                                     
                     320     
                     321                                     
A51 MACRO ASSEMBLER  MAIN                                                                 05/09/2016 15:16:16 PAGE     6

009C 020099          322                             LJMP main
                     323                     
                     324     ;Interrupt handlers
                     325     
                     326     
009F                 327     ISR_tmr0: 
009F C2AF            328                             CLR EA ;global interrupt disable
00A1 C28C            329                             CLR TR0 ;stop tmr0
00A3 C28E            330                             CLR TR1
                     331                             ;reload timer
00A5 758CD0          332                             MOV TH0,#0D0h ;tmr0 MSB
00A8 758A00          333                             MOV TL0,#000h ;tmr0 LSB
                     334                             
                     335     ;DISPLAY PART
00AB C2D4            336                     CLR RS1 ;move to registerbank 08h to 0Fh
00AD D2D3            337                     SETB RS0
00AF 7907            338                     MOV R1, #numberOfRows ;counting register to 8 for rows
00B1 7A7F            339                     MOV R2, #01111111b ;data rows (msb = 0, others are 1) single bit zero, to e
                             nable current row
00B3 7830            340                     MOV R0, #vidMemStart ; starting adress disp mem
00B5                 341     rowIteration:
                     342     
00B5 7F05            343                             MOV R7, #bytesPerRow ; counter for 5 bytes of row data
00B7                 344     lineBytes:
00B7 E6              345                             MOV A,@R0 ; get data from ram
00B8 FE              346                             MOV R6,A
00B9 3146            347                             acall shiftR6 ; shift byte into ram
00BB 08              348                             INC R0 ; get next byte
00BC DFF9            349                             DJNZ R7,lineBytes ; rinse and repeat
                     350                             
                     351                             ;shift R2 with the current row enable in the register
00BE EA              352                             MOV A,R2
00BF FE              353                             MOV R6, A
00C0 3146            354                             Acall shiftR6 ; shift column data byte into SR
00C2 D2B2            355                             SETB P3.2 ; cycle store clock
00C4 C2B2            356                             CLR P3.2
                     357     
                     358                             ;rotate row bit to enable next row
00C6 EA              359                             MOV A, R2 
00C7 03              360                             RR A
00C8 FA              361                             MOV R2,A
                     362                              ; repeat until 7 rows done
00C9 D9EA            363                             DJNZ R1, rowIteration
                     364                             
                     365                             
00CB 7EDF            366                             MOV R6, #cursorByte
00CD 3146            367                             Acall shiftR6 ; shift collumn data byte into SR
                     368                             
00CF 7904            369                             MOV R1, #04
00D1                 370     lastLineComp:                    ;loop to approximate the timing of the other rows to have 
                             similar brightness
00D1 7EFF            371                             MOV R6, #0FFh
00D3 3146            372                             Acall shiftR6 ; shift collumn data byte into SR
00D5 D9FA            373                             DJNZ R1,lastLineComp
                     374                             
                     375     
                     376                             ;MOV R6, #11101111b
00D7 E55A            377                             MOV A,5Ah
00D9 54E0            378                             ANL A, #11100000b ; mask 8 MSB 
00DB 23              379                             RL A
00DC 23              380                             RL A ;rotate so MSB become LSB
00DD 23              381                             RL A
00DE FE              382                             MOV R6, A ;stockate in R6
00DF 74FE            383                             MOV A,#11111110b ;cursor data in A
00E1                 384             locationLbl:
00E1 03              385                             RR A
A51 MACRO ASSEMBLER  MAIN                                                                 05/09/2016 15:16:16 PAGE     7

00E2 DEFD            386                             DJNZ R6,locationLbl  ;rotate cursor data equal to location
00E4 4483            387                             ORL A,#10000011b ;mask data for center 
00E6 FE              388                             MOV R6,A ; move cursor data to R6 for shift
00E7 3146            389                             Acall shiftR6 ; shift collumn data byte into SR for row enable
                     390                             
00E9 D2B2            391                             SETB P3.2 ; cycle store clock
00EB C2B2            392                             CLR P3.2
                     393     
00ED C2D4            394                             CLR RS1 ;move to registerbank 00h to 08h
00EF C2D3            395                             CLR RS0 
                     396                             ;reenable timers
00F1 D28C            397                             SETB TR0 ;run tmr0
00F3 D28E            398                             SETB TR1
00F5 D2AF            399                             SETB EA ;global interrupt disable
                     400                             
00F7 32              401                             RETI
                     402     
                     403     
00F8                 404     ISR_tmr1:
                     405     ;DISPLAY PART
00F8 C28C            406                     CLR TR0 ;stop timer during buffer update
00FA C28E            407                     CLR TR1 ;stop timer during buffer update
00FC C2AF            408                     CLR EA ;global interrupt disable
                     409                     
00FE 758D00          410                     MOV TH1,#00h ;tmr0 MSB
0101 758B00          411                     MOV TL1,#00h ;tmr0 LSB
                     412                     
                     413                     ;DJNZ R5, afterRandom
0104 C0E0            414                     push Acc
                     415                     
0106 E553            416                     MOV A, 53h
0108 9001B8          417                     MOV DPTR, #block0               ; begin bij block0
010B 93              418                     MOVC A,@A+DPTR
                     419     
010C FF              420                     MOV R7,A ; stockate data in R7 for collumnshift
010D 12015E          421                     LCALL dispColShift
                     422                     
0110 E553            423                     MOV A, 53h ; retrieve current data offset
0112 04              424                     INC A; advance one adress
0113 F553            425                     MOV 53h, A ; save current adress
0115 AB57            426                     MOV R3, 57h ;get current iteration from address
0117 DB0A            427                     DJNZ R3, afterRandom ; jupmp back to te iteration
0119 7B08            428                     MOV R3,#bytesPerBlock ; repeat 4 times
011B E518            429                     MOV A,18h ; get data from MSB LFSR
011D 5438            430                     ANL A,#0111000b ;mask for the number of blocks          
011F F553            431                     MOV 53h, A ; save current adress for next block
                     432     
0121 B2A4            433                     CPL P2.4 ; toggle led to see if working
                     434                     ;MOV R5,#2
0123                 435             afterRandom:
0123 8B57            436                     MOV 57h,R3
0125 D0E0            437                     pop Acc
0127 D28E            438                     SETB TR1 ;stop timer during buffer update
0129 D28C            439                     SETB TR0
012B D2AF            440                     SETB EA
                     441     
012D 32              442     reti
                     443     
012E                 444     ISR_ADC:
                     445     
012E C28C            446                     CLR TR0 ;stop timer during buffer update
0130 C28E            447                     CLR TR1 ;stop timer during buffer update
0132 C2AF            448                     CLR EA ;global interrupt disable
                     449                     
0134 C0E0            450     push Acc
0136 E5F5            451             MOV A, ADDH
A51 MACRO ASSEMBLER  MAIN                                                                 05/09/2016 15:16:16 PAGE     8

0138 F55A            452             MOV 5Ah,A
013A 75F32F          453             MOV ADCON, #00101111b ; set P1.0 as ADC input, restart conversion
013D D0E0            454     pop Acc
                     455     
013F D28E            456                     SETB TR1 ;stop timer during buffer update
0141 D28C            457                     SETB TR0
0143 D2AF            458                     SETB EA
0145 32              459     reti
                     460     
                     461     
                     462     ;Shift byte from R6 into shift registers
0146                 463     shiftR6:
0146 C0E0            464                                     push Acc
0148 EE              465                                     MOV A, R6 
0149 7E08            466                                     MOV R6, #08 ;counting register to 8
014B                 467                                     Reg:
014B 13              468                                     RRC A ;rotate accumulator
014C 92C1            469                                     MOV P4.1,C ;carry to Data
014E D2C0            470                                     SETB P4.0 ; cycle serial clock
0150 C2C0            471                                     CLR P4.0
0152 DEF7            472                                     DJNZ R6,Reg ;if 8 bits are shifted go further otherwise rep
                             eat
0154 D0E0            473                                     pop Acc
0156 22              474                                     ret
                     475     
                     476     
0157                 477     detectCollision:
                     478             
                     479     
                     480     
                     481     
                     482     
                     483     
                     484     
0157                 485     dispRowShift:
0157 E7              486             MOV A,@R1
0158 13              487             RRC A
0159 F7              488             MOV @R1,A
015A 19              489             DEC R1
015B DEFA            490             DJNZ R6, dispRowShift
015D 22              491             RET
                     492     ;shift 7 MSB in framebuffer
015E                 493     dispColShift:
015E EF              494             MOV A, R7
015F 7D07            495             MOV     R5, #numberOfRows ;counter to count rows
                     496             ;RRC A ;rotate to drop LSB
0161 7952            497             MOV R1, #vidMemEnd ; start at highest address to decrease each time
0163                 498     dispColShiftLoop:
0163 13              499             RRC A ;Rotate LSB in carry to shift in row
0164 7E05            500             MOV     R6, #bytesPerRow ; counter to rotate 5 horizontal bytes
0166 C0E0            501             PUSH ACC ; push acc to save current data
0168 3157            502             ACALL dispRowShift ; rotate all row bytes
016A D0E0            503             POP ACC
016C DDF5            504             DJNZ R5, dispColShiftLoop
016E 22              505             RET
                     506             
                     507             
                     508             
                     509             
                     510             
                     511     ;rudimentary delay for test purposes
016F                 512     delay:   
016F 7E9F            513                     MOV R6, #09Fh
0171 120175          514                     LCALL loop
0174 22              515                     RET
                     516     
A51 MACRO ASSEMBLER  MAIN                                                                 05/09/2016 15:16:16 PAGE     9

0175                 517     loop:   
0175 7F00            518                     MOV R7, #00h
0177 12017D          519                     LCALL loop2
017A D9F9            520                     DJNZ R1, loop
017C 22              521                     RET
                     522                     
017D DAFE            523     loop2:  DJNZ R2,loop2
017F 22              524                     RET
                     525                     
                     526                     
                     527     ;random number generator code trough LFSR               
0180                 528     LFSR: 
0180 D2D4            529             SETB RS1 ;move to registerbank 08h to 0Fh
0182 D2D3            530             SETB RS0
0184 E8              531             MOV A,R0 ;Save highest byte to address
0185 FC              532             MOV R4,A
0186 1201AB          533             lcall LFSRShift
0189 1201AB          534             lcall LFSRShift
018C 6C              535             XRL A,R4
018D FC              536             MOV R4,A
018E 1201AB          537             lcall LFSRShift
0191 1201AB          538             lcall LFSRShift
0194 1201AB          539             lcall LFSRShift
0197 1201AB          540             lcall LFSRShift
019A 6C              541             XRL A,R4
019B FC              542             MOV R4,A                
019C 1201AB          543             lcall LFSRShift
019F 6C              544             XRL A,R4
01A0 FC              545             MOV R4,A
01A1 1201AB          546             lcall LFSRShift
01A4 EC              547             MOV A,R4
01A5 FB              548             MOV R3,A
                     549             
01A6 C2D4            550             CLR RS1 ;move to registerbank 08h to 0Fh
01A8 C2D3            551             CLR RS0
                     552             
01AA 22              553             RET
                     554             
                     555     ;shift the 32 bit registers of the LFSR
01AB                 556     LFSRShift: 
01AB EB              557             MOV A,R3 ; rotate shift register
01AC 33              558             RLC A
01AD FB              559             MOV R3,A
01AE EA              560             MOV A,R2 ; rotate shift register
01AF 33              561             RLC A
01B0 FA              562             MOV R2,A
01B1 E9              563             MOV A,R1 ; rotate shift register
01B2 33              564             RLC A
01B3 F9              565             MOV R1,A
01B4 E8              566             MOV A,R0 ; rotate shift register
01B5 33              567             RLC A
01B6 F8              568             MOV R0,A
01B7 22              569             ret     
                     570             
                     571     
01B8                 572             block0:
01B8 3E              573             db 0x3e
01B9 3E              574             db 0x3e
01BA 3E              575             db 0x3e
01BB 3E              576             db 0x3e
01BC 3E              577             db 0x3e
01BD 3E              578             db 0x3e
01BE 3E              579             db 0x3e
01BF 3E              580             db 0x3e
                     581             
                     582             
A51 MACRO ASSEMBLER  MAIN                                                                 05/09/2016 15:16:16 PAGE    10

01C0                 583             block1:
                     584             
01C0 3E              585             db 0x3e
01C1 3E              586             db 0x3e
01C2 3E              587             db 0x3e
01C3 1C              588             db 0x1C
01C4 1C              589             db 0x1C
01C5 1C              590             db 0x1C
01C6 3E              591             db 0x3e
01C7 3E              592             db 0x3e
                     593             
01C8                 594             block2:
                     595             
01C8 3E              596             db 0x3e
01C9 3E              597             db 0x3e
01CA 3E              598             db 0x3e
01CB 38              599             db 0x38
01CC 38              600             db 0x38
01CD 38              601             db 0x38
01CE 3E              602             db 0x3e
01CF 3E              603             db 0x3e
                     604                     
01D0                 605             block3:
                     606             
01D0 3E              607             db 0x3e
01D1 3E              608             db 0x3e
01D2 3E              609             db 0x3e
01D3 18              610             db 0x18
01D4 18              611             db 0x18
01D5 18              612             db 0x18
01D6 3E              613             db 0x3e
01D7 3E              614             db 0x3e
                     615                     
01D8                 616             block4:
                     617             
01D8 3E              618             db 0x3e
01D9 3E              619             db 0x3e
01DA 3E              620             db 0x3e
01DB 06              621             db 0x06
01DC 06              622             db 0x06
01DD 3E              623             db 0x3e
01DE 3E              624             db 0x3e
01DF 3E              625             db 0x3e
                     626             
01E0                 627             block5:
01E0 3E              628             db 0x3e
01E1 3E              629             db 0x3e
01E2 3E              630             db 0x3e
01E3 08              631             db 0x08
01E4 08              632             db 0x08
01E5 3E              633             db 0x3e
01E6 3E              634             db 0x3e
01E7 3E              635             db 0x3e
                     636                     
01E8                 637             block6:
                     638             
01E8 3E              639             db 0x3e
01E9 3E              640             db 0x3e
01EA 3E              641             db 0x3e
01EB 32              642             db 0x32
01EC 32              643             db 0x32
01ED 3E              644             db 0x3e
01EE 3E              645             db 0x3e
01EF 3E              646             db 0x3e
                     647                     
01F0                 648             block7:
A51 MACRO ASSEMBLER  MAIN                                                                 05/09/2016 15:16:16 PAGE    11

01F0 3E              649             db 0x3e
01F1 3E              650             db 0x3e
01F2 3E              651             db 0x3e
01F3 26              652             db 0x26
01F4 26              653             db 0x26
01F5 3E              654             db 0x3e
01F6 3E              655             db 0x3e
01F7 3E              656             db 0x3e
                     657                     
01F8                 658             block8:
01F8 3E              659             db 0x3e
01F9 3E              660             db 0x3e
01FA 3E              661             db 0x3e
01FB 26              662             db 0x26
01FC 26              663             db 0x26
01FD 3E              664             db 0x3e
01FE 3E              665             db 0x3e
01FF 3E              666             db 0x3e
                     667                     
                     668                     
                     669     
                     670     END
                             
                                     
                                             
A51 MACRO ASSEMBLER  MAIN                                                                 05/09/2016 15:16:16 PAGE    12

SYMBOL TABLE LISTING
------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES

AC . . . . . . . .  B ADDR   00D0H.6 A   
ACC. . . . . . . .  D ADDR   00E0H   A   
ADCF . . . . . . .  D ADDR   00F6H   A   
ADCLK. . . . . . .  D ADDR   00F2H   A   
ADCON. . . . . . .  D ADDR   00F3H   A   
ADDH . . . . . . .  D ADDR   00F5H   A   
ADDL . . . . . . .  D ADDR   00F4H   A   
AFTERRANDOM. . . .  C ADDR   0123H   A   
AUXR . . . . . . .  D ADDR   008EH   A   
AUXR1. . . . . . .  D ADDR   00A2H   A   
B. . . . . . . . .  D ADDR   00F0H   A   
BLOCK0 . . . . . .  C ADDR   01B8H   A   
BLOCK1 . . . . . .  C ADDR   01C0H   A   
BLOCK2 . . . . . .  C ADDR   01C8H   A   
BLOCK3 . . . . . .  C ADDR   01D0H   A   
BLOCK4 . . . . . .  C ADDR   01D8H   A   
BLOCK5 . . . . . .  C ADDR   01E0H   A   
BLOCK6 . . . . . .  C ADDR   01E8H   A   
BLOCK7 . . . . . .  C ADDR   01F0H   A   
BLOCK8 . . . . . .  C ADDR   01F8H   A   
BYTESPERBLOCK. . .  N NUMB   0008H   A   
BYTESPERROW. . . .  N NUMB   0005H   A   
CANBT1 . . . . . .  D ADDR   00B4H   A   
CANBT2 . . . . . .  D ADDR   00B5H   A   
CANBT3 . . . . . .  D ADDR   00B6H   A   
CANCONCH . . . . .  D ADDR   00B3H   A   
CANEN1 . . . . . .  D ADDR   00CEH   A   
CANEN2 . . . . . .  D ADDR   00CFH   A   
CANGCON. . . . . .  D ADDR   00ABH   A   
CANGIE . . . . . .  D ADDR   00C1H   A   
CANGIT . . . . . .  D ADDR   009BH   A   
CANGSTA. . . . . .  D ADDR   00AAH   A   
CANIDM1. . . . . .  D ADDR   00C4H   A   
CANIDM2. . . . . .  D ADDR   00C5H   A   
CANIDM3. . . . . .  D ADDR   00C6H   A   
CANIDM4. . . . . .  D ADDR   00C7H   A   
CANIDT1. . . . . .  D ADDR   00BCH   A   
CANIDT2. . . . . .  D ADDR   00BDH   A   
CANIDT3. . . . . .  D ADDR   00BEH   A   
CANIDT4. . . . . .  D ADDR   00BFH   A   
CANIE1 . . . . . .  D ADDR   00C2H   A   
CANIE2 . . . . . .  D ADDR   00C3H   A   
CANMSG . . . . . .  D ADDR   00A3H   A   
CANPAGE. . . . . .  D ADDR   00B1H   A   
CANREC . . . . . .  D ADDR   009DH   A   
CANSIT1. . . . . .  D ADDR   00BAH   A   
CANSIT2. . . . . .  D ADDR   00BBH   A   
CANSTCH. . . . . .  D ADDR   00B2H   A   
CANSTMPH . . . . .  D ADDR   00AFH   A   
CANSTMPL . . . . .  D ADDR   00AEH   A   
CANTCON. . . . . .  D ADDR   00A1H   A   
CANTEC . . . . . .  D ADDR   009CH   A   
CANTIMH. . . . . .  D ADDR   00ADH   A   
CANTIML. . . . . .  D ADDR   00ACH   A   
CANTTCH. . . . . .  D ADDR   00A5H   A   
CANTTCL. . . . . .  D ADDR   00A4H   A   
CCAP0H . . . . . .  D ADDR   00FAH   A   
CCAP0L . . . . . .  D ADDR   00EAH   A   
CCAP1H . . . . . .  D ADDR   00FBH   A   
CCAP1L . . . . . .  D ADDR   00EBH   A   
A51 MACRO ASSEMBLER  MAIN                                                                 05/09/2016 15:16:16 PAGE    13

CCAP2H . . . . . .  D ADDR   00FCH   A   
CCAP2L . . . . . .  D ADDR   00ECH   A   
CCAP3H . . . . . .  D ADDR   00FDH   A   
CCAP3L . . . . . .  D ADDR   00EDH   A   
CCAP4H . . . . . .  D ADDR   00FEH   A   
CCAP4L . . . . . .  D ADDR   00EEH   A   
CCAPM0 . . . . . .  D ADDR   00DAH   A   
CCAPM1 . . . . . .  D ADDR   00DBH   A   
CCAPM2 . . . . . .  D ADDR   00DCH   A   
CCAPM3 . . . . . .  D ADDR   00DDH   A   
CCAPM4 . . . . . .  D ADDR   00DEH   A   
CCF0 . . . . . . .  B ADDR   00D0H.0 A   
CCF1 . . . . . . .  B ADDR   00D0H.1 A   
CCF2 . . . . . . .  B ADDR   00D0H.2 A   
CCF3 . . . . . . .  B ADDR   00D0H.3 A   
CCF4 . . . . . . .  B ADDR   00D0H.4 A   
CCON . . . . . . .  D ADDR   00D8H   A   
CF . . . . . . . .  B ADDR   00D8H.7 A   
CH . . . . . . . .  D ADDR   00F9H   A   
CKCON. . . . . . .  D ADDR   008FH   A   
CL . . . . . . . .  D ADDR   00E9H   A   
CMOD . . . . . . .  D ADDR   00D9H   A   
CP_RL2 . . . . . .  B ADDR   00C8H.0 A   
CR . . . . . . . .  B ADDR   00D8H.6 A   
CURSORBYTE . . . .  N NUMB   00DFH   A   
CY . . . . . . . .  B ADDR   00D0H.7 A   
C_T2 . . . . . . .  B ADDR   00C8H.1 A   
DELAY. . . . . . .  C ADDR   016FH   A   
DETECTCOLLISION. .  C ADDR   0157H   A   
DISPCOLSHIFT . . .  C ADDR   015EH   A   
DISPCOLSHIFTLOOP .  C ADDR   0163H   A   
DISPROWSHIFT . . .  C ADDR   0157H   A   
DPH. . . . . . . .  D ADDR   0083H   A   
DPL. . . . . . . .  D ADDR   0082H   A   
EA . . . . . . . .  B ADDR   00A8H.7 A   
EADC . . . . . . .  B ADDR   00E8H.1 A   
EC . . . . . . . .  B ADDR   00A8H.6 A   
ECAN . . . . . . .  B ADDR   00E8H.0 A   
EECON. . . . . . .  D ADDR   00D2H   A   
ES . . . . . . . .  B ADDR   00A8H.4 A   
ET0. . . . . . . .  B ADDR   00A8H.1 A   
ET1. . . . . . . .  B ADDR   00A8H.3 A   
ET2. . . . . . . .  B ADDR   00A8H.5 A   
ETIM . . . . . . .  B ADDR   00E8H.2 A   
EX0. . . . . . . .  B ADDR   00A8H.0 A   
EX1. . . . . . . .  B ADDR   00A8H.2 A   
EXEN2. . . . . . .  B ADDR   00C8H.3 A   
EXF2 . . . . . . .  B ADDR   00C8H.6 A   
F0 . . . . . . . .  B ADDR   00D0H.5 A   
FCON . . . . . . .  D ADDR   00D1H   A   
FE . . . . . . . .  B ADDR   0098H.7 A   
FPGACON. . . . . .  D ADDR   00F1H   A   
GAMEINIT . . . . .  C ADDR   006AH   A   
IE0. . . . . . . .  B ADDR   0088H.1 A   
IE1. . . . . . . .  B ADDR   0088H.3 A   
IEN0 . . . . . . .  D ADDR   00A8H   A   
IEN1 . . . . . . .  D ADDR   00E8H   A   
INIT . . . . . . .  C ADDR   0046H   A   
INT0 . . . . . . .  B ADDR   00B0H.2 A   
INT1 . . . . . . .  B ADDR   00B0H.3 A   
IPH0 . . . . . . .  D ADDR   00B7H   A   
IPH1 . . . . . . .  D ADDR   00F7H   A   
IPL0 . . . . . . .  D ADDR   00B8H   A   
IPL1 . . . . . . .  D ADDR   00F8H   A   
ISR_ADC. . . . . .  C ADDR   012EH   A   
ISR_TMR0 . . . . .  C ADDR   009FH   A   
A51 MACRO ASSEMBLER  MAIN                                                                 05/09/2016 15:16:16 PAGE    14

ISR_TMR1 . . . . .  C ADDR   00F8H   A   
IT0. . . . . . . .  B ADDR   0088H.0 A   
IT1. . . . . . . .  B ADDR   0088H.2 A   
LASTLINECOMP . . .  C ADDR   00D1H   A   
LFSR . . . . . . .  C ADDR   0180H   A   
LFSRSHIFT. . . . .  C ADDR   01ABH   A   
LINEBYTES. . . . .  C ADDR   00B7H   A   
LOCATIONLBL. . . .  C ADDR   00E1H   A   
LOOP . . . . . . .  C ADDR   0175H   A   
LOOP2. . . . . . .  C ADDR   017DH   A   
MAIN . . . . . . .  C ADDR   0099H   A   
NUMBEROFCOLLUMNS .  N NUMB   0028H   A   
NUMBEROFROWS . . .  N NUMB   0007H   A   
OV . . . . . . . .  B ADDR   00D0H.2 A   
P. . . . . . . . .  B ADDR   00D0H.0 A   
P0 . . . . . . . .  D ADDR   0080H   A   
P1 . . . . . . . .  D ADDR   0090H   A   
P2 . . . . . . . .  D ADDR   00A0H   A   
P3 . . . . . . . .  D ADDR   00B0H   A   
P4 . . . . . . . .  D ADDR   00C0H   A   
PCON . . . . . . .  D ADDR   0087H   A   
PSW. . . . . . . .  D ADDR   00D0H   A   
RAMINIT. . . . . .  C ADDR   0060H   A   
RB8. . . . . . . .  B ADDR   0098H.2 A   
RCAP2H . . . . . .  D ADDR   00CBH   A   
RCAP2L . . . . . .  D ADDR   00CAH   A   
RCLK . . . . . . .  B ADDR   00C8H.5 A   
RD . . . . . . . .  B ADDR   00B0H.7 A   
REG. . . . . . . .  C ADDR   014BH   A   
REN. . . . . . . .  B ADDR   0098H.4 A   
RI . . . . . . . .  B ADDR   0098H.0 A   
ROWITERATION . . .  C ADDR   00B5H   A   
RS0. . . . . . . .  B ADDR   00D0H.3 A   
RS1. . . . . . . .  B ADDR   00D0H.4 A   
RXD. . . . . . . .  B ADDR   00B0H.0 A   
SADDR. . . . . . .  D ADDR   00A9H   A   
SADEN. . . . . . .  D ADDR   00B9H   A   
SBUF . . . . . . .  D ADDR   0099H   A   
SCON . . . . . . .  D ADDR   0098H   A   
SHIFTR6. . . . . .  C ADDR   0146H   A   
SM0. . . . . . . .  B ADDR   0098H.7 A   
SM1. . . . . . . .  B ADDR   0098H.6 A   
SM2. . . . . . . .  B ADDR   0098H.5 A   
SP . . . . . . . .  D ADDR   0081H   A   
T0 . . . . . . . .  B ADDR   00B0H.4 A   
T1 . . . . . . . .  B ADDR   00B0H.5 A   
T2CON. . . . . . .  D ADDR   00C8H   A   
T2MOD. . . . . . .  D ADDR   00C9H   A   
TB8. . . . . . . .  B ADDR   0098H.3 A   
TCLK . . . . . . .  B ADDR   00C8H.4 A   
TCON . . . . . . .  D ADDR   0088H   A   
TF0. . . . . . . .  B ADDR   0088H.5 A   
TF1. . . . . . . .  B ADDR   0088H.7 A   
TF2. . . . . . . .  B ADDR   00C8H.7 A   
TH0. . . . . . . .  D ADDR   008CH   A   
TH1. . . . . . . .  D ADDR   008DH   A   
TH2. . . . . . . .  D ADDR   00CDH   A   
TI . . . . . . . .  B ADDR   0098H.1 A   
TL0. . . . . . . .  D ADDR   008AH   A   
TL1. . . . . . . .  D ADDR   008BH   A   
TL2. . . . . . . .  D ADDR   00CCH   A   
TMOD . . . . . . .  D ADDR   0089H   A   
TR0. . . . . . . .  B ADDR   0088H.4 A   
TR1. . . . . . . .  B ADDR   0088H.6 A   
TR2. . . . . . . .  B ADDR   00C8H.2 A   
TXD. . . . . . . .  B ADDR   00B0H.1 A   
A51 MACRO ASSEMBLER  MAIN                                                                 05/09/2016 15:16:16 PAGE    15

VIDMEMEND. . . . .  N NUMB   0052H   A   
VIDMEMLENGTH . . .  N NUMB   0023H   A   
VIDMEMSTART. . . .  N NUMB   0030H   A   
WDTPRG . . . . . .  D ADDR   00A7H   A   
WDTRST . . . . . .  D ADDR   00A6H   A   
WR . . . . . . . .  B ADDR   00B0H.6 A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
