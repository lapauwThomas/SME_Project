A51 MACRO ASSEMBLER  MAIN                                                                 05/09/2016 17:41:42 PAGE     1


MACRO ASSEMBLER A51 V8.02c
OBJECT MODULE PLACED IN .\Objects\main.obj
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE main.a51 NOMOD51 SET(SMALL) DEBUG PRINT(.\Listings\main.lst) OBJECT(.\O
                      bjects\main.obj) EP

LOC  OBJ            LINE     SOURCE

                       1     
                       2     ;*******************************************
                       3     ;* Sensors & Microsystem electronics       *
                       4     ;*                                         *
                       5     ;* Names: Steven Peters - Thomas Lapauw    *
                       6     ;*                                         *
                       7     ;*                Task 9                   *
                       8     ;*                                         *
                       9     ;*******************************************
                      10     
                      11     
                      12     ;Special register declarations
                      13     ;$include (t89c51cc01.inc)
                +1    14     ;*INC*************************************************************************
                +1    15     ; NAME: 89C51CC01.inc           
                +1    16     ;----------------------------------------------------------------------------
                +1    17     ; PURPOSE: for Keil
                +1    18     ;*****************************************************************************
                +1    19     
                +1    20     ;----------------------------------------
                +1    21     ; Include file for 8051 SFR Definitions  
                +1    22     ;----------------------------------------
                +1    23     
                +1    24     ;  BYTE Register 
  0080          +1    25     P0      DATA    80H
  0090          +1    26     P1      DATA    90H
  00A0          +1    27     P2      DATA    0A0H
                +1    28     
  00B0          +1    29     P3      DATA    0B0H
  00B7          +1    30     RD      BIT     0B7H
  00B6          +1    31     WR      BIT     0B6H
  00B5          +1    32     T1      BIT     0B5H
  00B4          +1    33     T0      BIT     0B4H
  00B3          +1    34     INT1    BIT     0B3H
  00B2          +1    35     INT0    BIT     0B2H
  00B1          +1    36     TXD     BIT     0B1H
  00B0          +1    37     RXD     BIT     0B0H
                +1    38     
  00C0          +1    39     P4      DATA    0C0H
                +1    40     
  00D0          +1    41     PSW     DATA    0D0H
  00D7          +1    42     CY      BIT     0D7H
  00D6          +1    43     AC      BIT     0D6H
  00D5          +1    44     F0      BIT     0D5H
  00D4          +1    45     RS1     BIT     0D4H
  00D3          +1    46     RS0     BIT     0D3H
  00D2          +1    47     OV      BIT     0D2H
  00D0          +1    48     P       BIT     0D0H
                +1    49     
  00E0          +1    50     ACC     DATA    0E0H
  00F0          +1    51     B       DATA    0F0H
  0081          +1    52     SP      DATA    81H
  0082          +1    53     DPL     DATA    82H
  0083          +1    54     DPH     DATA    83H
  0087          +1    55     PCON    DATA    87H
  008F          +1    56     CKCON   DATA    8FH
                +1    57     
A51 MACRO ASSEMBLER  MAIN                                                                 05/09/2016 17:41:42 PAGE     2

                +1    58     ;------------------ TIMERS registers ---------------------
  0088          +1    59     TCON    DATA    88H
  008F          +1    60     TF1     BIT     8FH
  008E          +1    61     TR1     BIT     8EH
  008D          +1    62     TF0     BIT     8DH
  008C          +1    63     TR0     BIT     8CH
  008B          +1    64     IE1     BIT     8BH
  008A          +1    65     IT1     BIT     8AH
  0089          +1    66     IE0     BIT     89H
  0088          +1    67     IT0     BIT     88H
                +1    68             
  0089          +1    69     TMOD    DATA    89H
                +1    70     
  00C8          +1    71     T2CON   DATA    0C8H
  00CF          +1    72     TF2     BIT     0CFH
  00CE          +1    73     EXF2    BIT     0CEH
  00CD          +1    74     RCLK    BIT     0CDH
  00CC          +1    75     TCLK    BIT     0CCH
  00CB          +1    76     EXEN2   BIT     0CBH
  00CA          +1    77     TR2     BIT     0CAH
  00C9          +1    78     C_T2    BIT     0C9H
  00C8          +1    79     CP_RL2  BIT     0C8H
                +1    80             
  00C9          +1    81     T2MOD   DATA    0C9H    
  008A          +1    82     TL0     DATA    8AH
  008B          +1    83     TL1     DATA    8BH
  00CC          +1    84     TL2     DATA    0CCH
  008C          +1    85     TH0     DATA    8CH
  008D          +1    86     TH1     DATA    8DH
  00CD          +1    87     TH2     DATA    0CDH    
  00CA          +1    88     RCAP2L  DATA    0CAH    
  00CB          +1    89     RCAP2H  DATA    0CBH    
  00A6          +1    90     WDTRST  DATA    0A6H    
  00A7          +1    91     WDTPRG  DATA    0A7H    
                +1    92     
                +1    93     
                +1    94     ;------------------- UART registers ------------------------
  0098          +1    95     SCON    DATA    98H
  009F          +1    96     SM0     BIT     9FH
  009F          +1    97     FE      BIT     9FH
  009E          +1    98     SM1     BIT     9EH
  009D          +1    99     SM2     BIT     9DH
  009C          +1   100     REN     BIT     9CH
  009B          +1   101     TB8     BIT     9BH
  009A          +1   102     RB8     BIT     9AH
  0099          +1   103     TI      BIT     99H
  0098          +1   104     RI      BIT     98H
                +1   105     
  0099          +1   106     SBUF    DATA    99H
  00B9          +1   107     SADEN   DATA    0B9H
  00A9          +1   108     SADDR   DATA    0A9H    
                +1   109     
                +1   110     ;-------------------- ADC registers ----------------------
  00F2          +1   111     ADCLK   DATA    0F2H    
  00F3          +1   112     ADCON   DATA    0F3H    
  00F4          +1   113     ADDL    DATA    0F4H    
  00F5          +1   114     ADDH    DATA    0F5H    
  00F6          +1   115     ADCF    DATA    0F6H    
                +1   116     
                +1   117     ;-------------------- FLASH EEPROM registers ------------
  00F1          +1   118     FPGACON  DATA   0F1H    
  00D1          +1   119     FCON    DATA    0D1H    
  00D2          +1   120     EECON   DATA    0D2H    
  008E          +1   121     AUXR    DATA    8EH
  00A2          +1   122     AUXR1   DATA    0A2H
                +1   123     
A51 MACRO ASSEMBLER  MAIN                                                                 05/09/2016 17:41:42 PAGE     3

                +1   124     ;-------------------- IT registers -----------------------
  00F8          +1   125     IPL1    DATA    0F8H    
  00F7          +1   126     IPH1    DATA    0F7H    
  00A8          +1   127     IEN0    DATA    0A8H    
  00B8          +1   128     IPL0    DATA    0B8H    
  00B7          +1   129     IPH0    DATA    0B7H    
  00E8          +1   130     IEN1    DATA    0E8H    
                +1   131     
                +1   132     ;  IEN0  
  00AF          +1   133     EA      BIT     0AFH
  00AE          +1   134     EC      BIT     0AEH
  00AD          +1   135     ET2     BIT     0ADH
  00AC          +1   136     ES      BIT     0ACH
  00AB          +1   137     ET1     BIT     0ABH
  00AA          +1   138     EX1     BIT     0AAH
  00A9          +1   139     ET0     BIT     0A9H
  00A8          +1   140     EX0     BIT     0A8H
                +1   141     
                +1   142     ;  IEN1 
  00EA          +1   143     ETIM    BIT     0EAH
  00E9          +1   144     EADC    BIT     0E9H
  00E8          +1   145     ECAN    BIT     0E8H
                +1   146     
                +1   147     ;--------------------- PCA registers --------------------
  00D8          +1   148     CCON    DATA    0D8H    
  00DF          +1   149     CF              BIT             0DFH
  00DE          +1   150     CR              BIT             0DEH
  00D4          +1   151     CCF4    BIT             0D4H
  00D3          +1   152     CCF3    BIT             0D3H
  00D2          +1   153     CCF2    BIT             0D2H
  00D1          +1   154     CCF1    BIT             0D1H
  00D0          +1   155     CCF0    BIT             0D0H
                +1   156     
  00D9          +1   157     CMOD    DATA    0D9H    
  00F9          +1   158     CH      DATA    0F9H    
  00E9          +1   159     CL      DATA    0E9H    
  00FA          +1   160     CCAP0H  DATA    0FAH    
  00EA          +1   161     CCAP0L  DATA    0EAH    
  00DA          +1   162     CCAPM0  DATA    0DAH    
  00FB          +1   163     CCAP1H  DATA    0FBH    
  00EB          +1   164     CCAP1L  DATA    0EBH    
  00DB          +1   165     CCAPM1  DATA    0DBH    
  00FC          +1   166     CCAP2H  DATA    0FCH    
  00EC          +1   167     CCAP2L  DATA    0ECH    
  00DC          +1   168     CCAPM2  DATA    0DCH    
  00FD          +1   169     CCAP3H  DATA    0FDH    
  00ED          +1   170     CCAP3L  DATA    0EDH    
  00DD          +1   171     CCAPM3  DATA    0DDH    
  00FE          +1   172     CCAP4H  DATA    0FEH    
  00EE          +1   173     CCAP4L  DATA    0EEH    
  00DE          +1   174     CCAPM4  DATA    0DEH    
                +1   175     
                +1   176     ;------------------- CAN registers --------------------------
  009B          +1   177     CANGIT          DATA    09BH
  009C          +1   178     CANTEC          DATA    09CH
  009D          +1   179     CANREC          DATA    09DH
  00A1          +1   180     CANTCON         DATA    0A1H    
  00A3          +1   181     CANMSG          DATA    0A3H    
  00A4          +1   182     CANTTCL         DATA    0A4H    
  00A5          +1   183     CANTTCH         DATA    0A5H    
  00AA          +1   184     CANGSTA         DATA    0AAH
  00AB          +1   185     CANGCON         DATA    0ABH
  00AC          +1   186     CANTIML         DATA    0ACH    
  00AD          +1   187     CANTIMH         DATA    0ADH    
  00AE          +1   188     CANSTMPL        DATA    0AEH    
  00AF          +1   189     CANSTMPH        DATA    0AFH
A51 MACRO ASSEMBLER  MAIN                                                                 05/09/2016 17:41:42 PAGE     4

  00B1          +1   190     CANPAGE         DATA    0B1H
  00B2          +1   191     CANSTCH         DATA    0B2H    
  00B3          +1   192     CANCONCH        DATA    0B3H    
  00B4          +1   193     CANBT1          DATA    0B4H
  00B5          +1   194     CANBT2          DATA    0B5H
  00B6          +1   195     CANBT3          DATA    0B6H
  00BA          +1   196     CANSIT1         DATA    0BAH
  00BB          +1   197     CANSIT2         DATA    0BBH    
  00BC          +1   198     CANIDT1         DATA    0BCH
  00BD          +1   199     CANIDT2         DATA    0BDH    
  00BE          +1   200     CANIDT3         DATA    0BEH    
  00BF          +1   201     CANIDT4         DATA    0BFH    
  00C1          +1   202     CANGIE          DATA    0C1H
  00C2          +1   203     CANIE1          DATA    0C2H    
  00C3          +1   204     CANIE2          DATA    0C3H
  00C4          +1   205     CANIDM1         DATA    0C4H
  00C5          +1   206     CANIDM2         DATA    0C5H
  00C6          +1   207     CANIDM3         DATA    0C6H
  00C7          +1   208     CANIDM4         DATA    0C7H
  00CE          +1   209     CANEN1          DATA    0CEH
  00CF          +1   210     CANEN2          DATA    0CFH
                +1   211     
                +1   212     
                     213     
                     214     
----                 215     DSEG AT 30h
                     216     
  0054               217             cursor DATA 54h
  0053               218             blockIndex DATA 53h
  0057               219             blockIteration DATA 57h
  005A               220             ADCVal DATA 5Ah
----                 221     CSEG    
                     222     ;Boot code
0000                 223     ORG 0000h
0000 020046          224     LJMP init 
                     225     
                     226     ;Interrupt address vectors
000B                 227     ORG 000Bh
000B 0200A2          228     LJMP ISR_tmr0
                     229     
001B                 230     ORG 001Bh
001B 020100          231     LJMP ISR_tmr1
                     232     
0043                 233     ORG 0043h
0043 020136          234     LJMP ISR_ADC
                     235     
                     236     
                     237     
                     238     
                     239     ;Address declarations
  0030               240     vidMemStart EQU 030h
  0052               241     vidMemEnd EQU 052h
  0023               242     vidMemLength EQU 35
                     243     
  0028               244     numberOfCollumns EQU 40
  0007               245     numberOfRows EQU 7
  0005               246     bytesPerRow EQU 5
                     247             
  0008               248     bytesPerBlock EQU 8
                     249             
  00FE               250     cursorByte EQU 11111110b
  0001               251     cursorByteMask EQU 00000001b
                     252     
                     253     
                     254     
                     255     
A51 MACRO ASSEMBLER  MAIN                                                                 05/09/2016 17:41:42 PAGE     5

                     256     ;Initialization code
0046                 257     init:   
                     258     
                     259                             ;init tmr0
0046 758911          260                             MOV TMOD,#00010001b ;config tmr0 & tmr1 in 16bit mode
0049 758CFF          261                             MOV TH0,#0FFh ;tmr0 MSB
004C 758AFF          262                             MOV TL0,#0FFh ;tmr0 LSB
                     263                             
004F 758DFF          264                             MOV TH1,#0FFh ;tmr0 MSB
0052 758BFF          265                             MOV TL1,#0FFh ;tmr0 LSB
                     266                             
0055 D2AB            267                             SETB ET1
0057 D2A9            268                             SETB ET0 ;enable interrupt of tmr0
                     269     
                     270     
0059 758170          271                             MOV SP, #70h ; move stackpointer above registers
                     272                              
                     273                              
                     274     ;Initialize ram                  
005C 7830            275                             MOV R0,#vidMemStart 
005E 7928            276                             MOV R1,#numberOfCollumns
0060                 277     ramInit:
0060 76FF            278                             MOV @R0,#0FFh
0062 08              279                             INC R0
0063 D9FB            280                             DJNZ R1,ramInit
                     281                             
                     282     ; seed of LFSR          
0065 75186A          283     MOV 18h, #1101010b 
                     284     
                     285     
0068 7828            286     MOV R0,#numberOfCollumns
006A                 287     gameInit:
006A 7F3E            288                     MOV R7,#03eh ; stockate data in R7 for collumnshift
006C 120183          289                     LCALL dispColShift
006F D8F9            290                     DJNZ R0, gameInit
                     291     
                     292     
0071 E518            293                     MOV A,18h ; get data from MSB LFSR
0073 541C            294                     ANL A,#0011100b ;mask for the number of blocks          
0075 F553            295                     MOV blockIndex, A ; save current adress for next block
                     296     
                     297     
                     298     ;**********************************************************************************
                     299             ; Setup for the ADC
0077 75F6FF          300             MOV ADCF,#0FFh ;enable the adc...
007A D2E9            301             SETB EADC
007C 75F32F          302             MOV ADCON, #00101111b ; set P1.0 as ADC input
                     303     
                     304     
007F 7B08            305                     MOV R3,#bytesPerBlock ; repeat 4 times
0081 E518            306                     MOV A,18h ; get data from MSB LFSR
0083 5438            307                     ANL A,#0111000b ;mask for the number of blocks          
0085 F553            308                     MOV blockIndex, A ; save current adress for next block
0087 1201A5          309                     LCALL LFSR  ; generate new random data
008A B2A4            310                     CPL P2.4 ; toggle led to see if working
                     311     
008C 8B57            312                     MOV blockIteration,R3
                     313             
008E 755A60          314                     MOV ADCVal,#01100000b
                     315     
                     316     
0091 D28C            317     SETB TR0 ;run tmr0
0093 D28E            318     SETB TR1
0095 D2AF            319     SETB EA ;global interrupt enable
                     320     
0097 C2A3            321     CLR P2.3 ;led to see if code is running
A51 MACRO ASSEMBLER  MAIN                                                                 05/09/2016 17:41:42 PAGE     6

0099 02009C          322     LJMP main
                     323                             
                     324     ;Main program
009C                 325     main:           
009C 1201A5          326                                     LCALL LFSR  ; generate new random data
                     327     ;                               LCALL detectCollision
                     328     
                     329                                     
009F 02009C          330                             LJMP main
                     331                     
                     332     ;Interrupt handlers
                     333     
                     334     
00A2                 335     ISR_tmr0: 
00A2 C2AF            336                             CLR EA ;global interrupt disable
00A4 C28C            337                             CLR TR0 ;stop tmr0
00A6 C28E            338                             CLR TR1
                     339                             ;reload timer
00A8 758CD0          340                             MOV TH0,#0D0h ;tmr0 MSB
00AB 758A00          341                             MOV TL0,#000h ;tmr0 LSB
                     342                             
                     343     ;DISPLAY PART
00AE C2D4            344                     CLR RS1 ;move to registerbank 08h to 0Fh
00B0 D2D3            345                     SETB RS0
00B2 7907            346                     MOV R1, #numberOfRows ;counting register to 8 for rows
00B4 7A7F            347                     MOV R2, #01111111b ;data rows (msb = 0, others are 1) single bit zero, to e
                             nable current row
00B6 7830            348                     MOV R0, #vidMemStart ; starting adress disp mem
00B8                 349     rowIteration:
                     350     
00B8 7F05            351                             MOV R7, #bytesPerRow ; counter for 5 bytes of row data
00BA                 352     lineBytes:
00BA E6              353                             MOV A,@R0 ; get data from ram
00BB FE              354                             MOV R6,A
00BC 314E            355                             acall shiftR6 ; shift byte into ram
00BE 08              356                             INC R0 ; get next byte
00BF DFF9            357                             DJNZ R7,lineBytes ; rinse and repeat
                     358                             
                     359                             ;shift R2 with the current row enable in the register
00C1 EA              360                             MOV A,R2
00C2 FE              361                             MOV R6, A
00C3 314E            362                             Acall shiftR6 ; shift column data byte into SR
00C5 D2B2            363                             SETB P3.2 ; cycle store clock
00C7 C2B2            364                             CLR P3.2
                     365     
                     366                             ;rotate row bit to enable next row
00C9 EA              367                             MOV A, R2 
00CA 03              368                             RR A
00CB FA              369                             MOV R2,A
                     370                              ; repeat until 7 rows done
00CC D9EA            371                             DJNZ R1, rowIteration
                     372                             
                     373                             
                     374     
00CE 7904            375                             MOV R1, #04
00D0                 376     lastLineComp:                    ;loop to approximate the timing of the other rows to have 
                             similar brightness
00D0 7EFF            377                             MOV R6, #0FFh
00D2 314E            378                             Acall shiftR6 ; shift collumn data byte into SR
00D4 D9FA            379                             DJNZ R1,lastLineComp
00D6 7EFE            380                                                     MOV R6, #cursorByte
00D8 314E            381                             Acall shiftR6 ; shift collumn data byte into SR
                     382                             
                     383     
                     384                             ;MOV R6, #11101111b
00DA E55A            385                             MOV A,ADCVal
A51 MACRO ASSEMBLER  MAIN                                                                 05/09/2016 17:41:42 PAGE     7

00DC 54E0            386                             ANL A, #11100000b ; mask 8 MSB 
00DE 23              387                             RL A
00DF 23              388                             RL A ;rotate so MSB become LSB
00E0 23              389                             RL A
00E1 FE              390                             MOV R6, A ;stockate in R6
00E2 74FE            391                             MOV A,#11111110b ;cursor data in A
00E4                 392             locationLbl:
00E4 03              393                             RR A
00E5 DEFD            394                             DJNZ R6,locationLbl  ;rotate cursor data equal to location
00E7 4401            395                             ORL A,#00000001b ;mask data for center 
00E9 FE              396                             MOV R6,A ; move cursor data to R6 for shift
00EA 314E            397                             Acall shiftR6 ; shift collumn data byte into SR for row enable
00EC F554            398                             MOV cursor,A
00EE D2B2            399                             SETB P3.2 ; cycle store clock
00F0 C2B2            400                             CLR P3.2
                     401                             
00F2 12015F          402                             LCALL detectCollision
                     403     
00F5 C2D4            404                             CLR RS1 ;move to registerbank 00h to 08h
00F7 C2D3            405                             CLR RS0 
                     406                             ;reenable timers
00F9 D28C            407                             SETB TR0 ;run tmr0
00FB D28E            408                             SETB TR1
00FD D2AF            409                             SETB EA ;global interrupt disable
                     410                             
00FF 32              411                             RETI
                     412     
                     413     
0100                 414     ISR_tmr1:
                     415     ;DISPLAY PART
0100 C28C            416                     CLR TR0 ;stop timer during buffer update
0102 C28E            417                     CLR TR1 ;stop timer during buffer update
0104 C2AF            418                     CLR EA ;global interrupt disable
                     419                     
0106 758D00          420                     MOV TH1,#00h ;tmr0 MSB
0109 758B00          421                     MOV TL1,#00h ;tmr0 LSB
                     422                     
                     423                     ;DJNZ R5, afterRandom
010C C0E0            424                     push Acc
                     425                     
010E E553            426                     MOV A, blockIndex
0110 9001DD          427                     MOV DPTR, #block0               ; begin bij block0
0113 93              428                     MOVC A,@A+DPTR
                     429     
0114 FF              430                     MOV R7,A ; stockate data in R7 for collumnshift
0115 120183          431                     LCALL dispColShift
                     432                     
0118 E553            433                     MOV A, blockIndex ; retrieve current data offset
011A 04              434                     INC A; advance one adress
011B F553            435                     MOV blockIndex, A ; save current adress
011D AB57            436                     MOV R3, blockIteration ;get current iteration from address
011F DB0A            437                     DJNZ R3, afterRandom ; jupmp back to te iteration
0121 7B08            438                     MOV R3,#bytesPerBlock ; repeat 4 times
0123 E518            439                     MOV A,18h ; get data from MSB LFSR
0125 5438            440                     ANL A,#0111000b ;mask for the number of blocks          
0127 F553            441                     MOV blockIndex, A ; save current adress for next block
                     442     
0129 B2A4            443                     CPL P2.4 ; toggle led to see if working
                     444                     ;MOV R5,#2
012B                 445             afterRandom:
012B 8B57            446                     MOV blockIteration,R3
012D D0E0            447                     pop Acc
012F D28E            448                     SETB TR1 ;stop timer during buffer update
0131 D28C            449                     SETB TR0
0133 D2AF            450                     SETB EA
                     451     
A51 MACRO ASSEMBLER  MAIN                                                                 05/09/2016 17:41:42 PAGE     8

0135 32              452     reti
                     453     
0136                 454     ISR_ADC:
                     455     
0136 C28C            456                     CLR TR0 ;stop timer during buffer update
0138 C28E            457                     CLR TR1 ;stop timer during buffer update
013A C2AF            458                     CLR EA ;global interrupt disable
                     459                     
013C C0E0            460     push Acc
013E E5F5            461             MOV A, ADDH
0140 F55A            462             MOV ADCVal,A
0142 75F32F          463             MOV ADCON, #00101111b ; set P1.0 as ADC input, restart conversion
0145 D0E0            464     pop Acc
                     465     
0147 D28E            466                     SETB TR1 ;stop timer during buffer update
0149 D28C            467                     SETB TR0
014B D2AF            468                     SETB EA
014D 32              469     reti
                     470     
                     471     
                     472     ;Shift byte from R6 into shift registers
014E                 473     shiftR6:
014E C0E0            474                                     push Acc
0150 EE              475                                     MOV A, R6 
0151 7E08            476                                     MOV R6, #08 ;counting register to 8
0153                 477                                     Reg:
0153 13              478                                     RRC A ;rotate accumulator
0154 92C1            479                                     MOV P4.1,C ;carry to Data
0156 D2C0            480                                     SETB P4.0 ; cycle serial clock
0158 C2C0            481                                     CLR P4.0
015A DEF7            482                                     DJNZ R6,Reg ;if 8 bits are shifted go further otherwise rep
                             eat
015C D0E0            483                                     pop Acc
015E 22              484                                     ret
                     485     
                     486     
015F                 487     detectCollision:
                     488     ;       CLR TR0 ;stop timer during buffer update
                     489     ;       CLR TR1 ;stop timer during buffer update
                     490     ;       CLR EA ;global interrupt disable
                     491             
015F AF07            492             MOV R7,numberOfRows
0161 A830            493             MOV R0,vidMemStart
0163 7900            494             MOV R1,#0
0165                 495             iteration:
0165 E6              496             MOV A,@R0
0166 F4              497             CPL A
0167 5501            498             ANL A,cursorByteMask
                     499     
0169 13              500             RRC A ;rotate until bit from mask is in Carry
016A E9              501             MOV A,R1
016B 33              502             RLC A ; rotate so carry comes in R1
016C F9              503             MOV R1,A
016D E8              504             MOV A,R0
016E 2405            505             ADD A,#bytesPerRow
0170 F8              506             MOV R0,A
0171 DFF2            507             DJNZ R7,iteration
                     508             
0173 E554            509             MOV A,cursor
0175 F4              510             CPL A
0176 03              511             RR A
0177 59              512             ANL A,R1
                     513             ;JNZ reset
                     514     ;       SETB TR0 ;stop timer during buffer update
                     515     ;       SETB TR1 ;stop timer during buffer update
                     516     ;       SETB EA ;global interrupt disable
A51 MACRO ASSEMBLER  MAIN                                                                 05/09/2016 17:41:42 PAGE     9

                     517                     
0178 22              518             ret
                     519             
0179                 520     reset:
0179 020046          521     LJMP init
                     522             
                     523     
                     524     
                     525     
                     526     
                     527     
                     528     
017C                 529     dispRowShift:
017C E7              530             MOV A,@R1
017D 33              531             RLC A
017E F7              532             MOV @R1,A
017F 09              533             INC R1
0180 DEFA            534             DJNZ R6, dispRowShift
0182 22              535             RET
                     536     ;shift 7 MSB in framebuffer
0183                 537     dispColShift:
0183 EF              538             MOV A, R7
0184 7D07            539             MOV     R5, #numberOfRows ;counter to count rows
                     540             ;RRC A ;rotate to drop LSB
0186 7930            541             MOV R1, #vidMemStart ; start at highest address to decrease each time
0188                 542     dispColShiftLoop:
0188 13              543             RRC A ;Rotate LSB in carry to shift in row
0189 7E05            544             MOV     R6, #bytesPerRow ; counter to rotate 5 horizontal bytes
018B C0E0            545             PUSH ACC ; push acc to save current data
018D 317C            546             ACALL dispRowShift ; rotate all row bytes
018F D0E0            547             POP ACC
0191 DDF5            548             DJNZ R5, dispColShiftLoop
0193 22              549             RET
                     550             
                     551             
                     552             
                     553             
                     554             
                     555     ;rudimentary delay for test purposes
0194                 556     delay:   
0194 7E9F            557                     MOV R6, #09Fh
0196 12019A          558                     LCALL loop
0199 22              559                     RET
                     560     
019A                 561     loop:   
019A 7F00            562                     MOV R7, #00h
019C 1201A2          563                     LCALL loop2
019F D9F9            564                     DJNZ R1, loop
01A1 22              565                     RET
                     566                     
01A2 DAFE            567     loop2:  DJNZ R2,loop2
01A4 22              568                     RET
                     569                     
                     570                     
                     571     ;random number generator code trough LFSR               
01A5                 572     LFSR: 
01A5 D2D4            573             SETB RS1 ;move to registerbank 08h to 0Fh
01A7 D2D3            574             SETB RS0
01A9 E8              575             MOV A,R0 ;Save highest byte to address
01AA FC              576             MOV R4,A
01AB 1201D0          577             lcall LFSRShift
01AE 1201D0          578             lcall LFSRShift
01B1 6C              579             XRL A,R4
01B2 FC              580             MOV R4,A
01B3 1201D0          581             lcall LFSRShift
01B6 1201D0          582             lcall LFSRShift
A51 MACRO ASSEMBLER  MAIN                                                                 05/09/2016 17:41:42 PAGE    10

01B9 1201D0          583             lcall LFSRShift
01BC 1201D0          584             lcall LFSRShift
01BF 6C              585             XRL A,R4
01C0 FC              586             MOV R4,A                
01C1 1201D0          587             lcall LFSRShift
01C4 6C              588             XRL A,R4
01C5 FC              589             MOV R4,A
01C6 1201D0          590             lcall LFSRShift
01C9 EC              591             MOV A,R4
01CA FB              592             MOV R3,A
                     593             
01CB C2D4            594             CLR RS1 ;move to registerbank 08h to 0Fh
01CD C2D3            595             CLR RS0
                     596             
01CF 22              597             RET
                     598             
                     599     ;shift the 32 bit registers of the LFSR
01D0                 600     LFSRShift: 
01D0 EB              601             MOV A,R3 ; rotate shift register
01D1 33              602             RLC A
01D2 FB              603             MOV R3,A
01D3 EA              604             MOV A,R2 ; rotate shift register
01D4 33              605             RLC A
01D5 FA              606             MOV R2,A
01D6 E9              607             MOV A,R1 ; rotate shift register
01D7 33              608             RLC A
01D8 F9              609             MOV R1,A
01D9 E8              610             MOV A,R0 ; rotate shift register
01DA 33              611             RLC A
01DB F8              612             MOV R0,A
01DC 22              613             ret     
                     614             
                     615     
01DD                 616             block0:
01DD 3E              617             db 0x3e
01DE 3E              618             db 0x3e
01DF 3E              619             db 0x3e
01E0 3E              620             db 0x3e
01E1 3E              621             db 0x3e
01E2 3E              622             db 0x3e
01E3 3E              623             db 0x3e
01E4 3E              624             db 0x3e
                     625             
                     626             
01E5                 627             block1:
                     628             
01E5 3E              629             db 0x3e
01E6 3E              630             db 0x3e
01E7 3E              631             db 0x3e
01E8 1C              632             db 0x1C
01E9 1C              633             db 0x1C
01EA 1C              634             db 0x1C
01EB 3E              635             db 0x3e
01EC 3E              636             db 0x3e
                     637             
01ED                 638             block2:
                     639             
01ED 3E              640             db 0x3e
01EE 3E              641             db 0x3e
01EF 3E              642             db 0x3e
01F0 38              643             db 0x38
01F1 38              644             db 0x38
01F2 38              645             db 0x38
01F3 3E              646             db 0x3e
01F4 3E              647             db 0x3e
                     648                     
A51 MACRO ASSEMBLER  MAIN                                                                 05/09/2016 17:41:42 PAGE    11

01F5                 649             block3:
                     650             
01F5 3E              651             db 0x3e
01F6 3E              652             db 0x3e
01F7 3E              653             db 0x3e
01F8 18              654             db 0x18
01F9 18              655             db 0x18
01FA 18              656             db 0x18
01FB 3E              657             db 0x3e
01FC 3E              658             db 0x3e
                     659                     
01FD                 660             block4:
                     661             
01FD 3E              662             db 0x3e
01FE 3E              663             db 0x3e
01FF 3E              664             db 0x3e
0200 06              665             db 0x06
0201 06              666             db 0x06
0202 3E              667             db 0x3e
0203 3E              668             db 0x3e
0204 3E              669             db 0x3e
                     670             
0205                 671             block5:
0205 3E              672             db 0x3e
0206 3E              673             db 0x3e
0207 3E              674             db 0x3e
0208 08              675             db 0x08
0209 08              676             db 0x08
020A 3E              677             db 0x3e
020B 3E              678             db 0x3e
020C 3E              679             db 0x3e
                     680                     
020D                 681             block6:
                     682             
020D 3E              683             db 0x3e
020E 3E              684             db 0x3e
020F 3E              685             db 0x3e
0210 32              686             db 0x32
0211 32              687             db 0x32
0212 3E              688             db 0x3e
0213 3E              689             db 0x3e
0214 3E              690             db 0x3e
                     691                     
0215                 692             block7:
0215 3E              693             db 0x3e
0216 3E              694             db 0x3e
0217 3E              695             db 0x3e
0218 26              696             db 0x26
0219 26              697             db 0x26
021A 3E              698             db 0x3e
021B 3E              699             db 0x3e
021C 3E              700             db 0x3e
                     701                     
021D                 702             block8:
021D 3E              703             db 0x3e
021E 3E              704             db 0x3e
021F 3E              705             db 0x3e
0220 26              706             db 0x26
0221 26              707             db 0x26
0222 3E              708             db 0x3e
0223 3E              709             db 0x3e
0224 3E              710             db 0x3e
                     711                     
                     712                     
                     713     
                     714     END
A51 MACRO ASSEMBLER  MAIN                                                                 05/09/2016 17:41:42 PAGE    12

                             
                                     
                                             
A51 MACRO ASSEMBLER  MAIN                                                                 05/09/2016 17:41:42 PAGE    13

SYMBOL TABLE LISTING
------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES

AC . . . . . . . .  B ADDR   00D0H.6 A   
ACC. . . . . . . .  D ADDR   00E0H   A   
ADCF . . . . . . .  D ADDR   00F6H   A   
ADCLK. . . . . . .  D ADDR   00F2H   A   
ADCON. . . . . . .  D ADDR   00F3H   A   
ADCVAL . . . . . .  D ADDR   005AH   A   
ADDH . . . . . . .  D ADDR   00F5H   A   
ADDL . . . . . . .  D ADDR   00F4H   A   
AFTERRANDOM. . . .  C ADDR   012BH   A   
AUXR . . . . . . .  D ADDR   008EH   A   
AUXR1. . . . . . .  D ADDR   00A2H   A   
B. . . . . . . . .  D ADDR   00F0H   A   
BLOCK0 . . . . . .  C ADDR   01DDH   A   
BLOCK1 . . . . . .  C ADDR   01E5H   A   
BLOCK2 . . . . . .  C ADDR   01EDH   A   
BLOCK3 . . . . . .  C ADDR   01F5H   A   
BLOCK4 . . . . . .  C ADDR   01FDH   A   
BLOCK5 . . . . . .  C ADDR   0205H   A   
BLOCK6 . . . . . .  C ADDR   020DH   A   
BLOCK7 . . . . . .  C ADDR   0215H   A   
BLOCK8 . . . . . .  C ADDR   021DH   A   
BLOCKINDEX . . . .  D ADDR   0053H   A   
BLOCKITERATION . .  D ADDR   0057H   A   
BYTESPERBLOCK. . .  N NUMB   0008H   A   
BYTESPERROW. . . .  N NUMB   0005H   A   
CANBT1 . . . . . .  D ADDR   00B4H   A   
CANBT2 . . . . . .  D ADDR   00B5H   A   
CANBT3 . . . . . .  D ADDR   00B6H   A   
CANCONCH . . . . .  D ADDR   00B3H   A   
CANEN1 . . . . . .  D ADDR   00CEH   A   
CANEN2 . . . . . .  D ADDR   00CFH   A   
CANGCON. . . . . .  D ADDR   00ABH   A   
CANGIE . . . . . .  D ADDR   00C1H   A   
CANGIT . . . . . .  D ADDR   009BH   A   
CANGSTA. . . . . .  D ADDR   00AAH   A   
CANIDM1. . . . . .  D ADDR   00C4H   A   
CANIDM2. . . . . .  D ADDR   00C5H   A   
CANIDM3. . . . . .  D ADDR   00C6H   A   
CANIDM4. . . . . .  D ADDR   00C7H   A   
CANIDT1. . . . . .  D ADDR   00BCH   A   
CANIDT2. . . . . .  D ADDR   00BDH   A   
CANIDT3. . . . . .  D ADDR   00BEH   A   
CANIDT4. . . . . .  D ADDR   00BFH   A   
CANIE1 . . . . . .  D ADDR   00C2H   A   
CANIE2 . . . . . .  D ADDR   00C3H   A   
CANMSG . . . . . .  D ADDR   00A3H   A   
CANPAGE. . . . . .  D ADDR   00B1H   A   
CANREC . . . . . .  D ADDR   009DH   A   
CANSIT1. . . . . .  D ADDR   00BAH   A   
CANSIT2. . . . . .  D ADDR   00BBH   A   
CANSTCH. . . . . .  D ADDR   00B2H   A   
CANSTMPH . . . . .  D ADDR   00AFH   A   
CANSTMPL . . . . .  D ADDR   00AEH   A   
CANTCON. . . . . .  D ADDR   00A1H   A   
CANTEC . . . . . .  D ADDR   009CH   A   
CANTIMH. . . . . .  D ADDR   00ADH   A   
CANTIML. . . . . .  D ADDR   00ACH   A   
CANTTCH. . . . . .  D ADDR   00A5H   A   
CANTTCL. . . . . .  D ADDR   00A4H   A   
CCAP0H . . . . . .  D ADDR   00FAH   A   
A51 MACRO ASSEMBLER  MAIN                                                                 05/09/2016 17:41:42 PAGE    14

CCAP0L . . . . . .  D ADDR   00EAH   A   
CCAP1H . . . . . .  D ADDR   00FBH   A   
CCAP1L . . . . . .  D ADDR   00EBH   A   
CCAP2H . . . . . .  D ADDR   00FCH   A   
CCAP2L . . . . . .  D ADDR   00ECH   A   
CCAP3H . . . . . .  D ADDR   00FDH   A   
CCAP3L . . . . . .  D ADDR   00EDH   A   
CCAP4H . . . . . .  D ADDR   00FEH   A   
CCAP4L . . . . . .  D ADDR   00EEH   A   
CCAPM0 . . . . . .  D ADDR   00DAH   A   
CCAPM1 . . . . . .  D ADDR   00DBH   A   
CCAPM2 . . . . . .  D ADDR   00DCH   A   
CCAPM3 . . . . . .  D ADDR   00DDH   A   
CCAPM4 . . . . . .  D ADDR   00DEH   A   
CCF0 . . . . . . .  B ADDR   00D0H.0 A   
CCF1 . . . . . . .  B ADDR   00D0H.1 A   
CCF2 . . . . . . .  B ADDR   00D0H.2 A   
CCF3 . . . . . . .  B ADDR   00D0H.3 A   
CCF4 . . . . . . .  B ADDR   00D0H.4 A   
CCON . . . . . . .  D ADDR   00D8H   A   
CF . . . . . . . .  B ADDR   00D8H.7 A   
CH . . . . . . . .  D ADDR   00F9H   A   
CKCON. . . . . . .  D ADDR   008FH   A   
CL . . . . . . . .  D ADDR   00E9H   A   
CMOD . . . . . . .  D ADDR   00D9H   A   
CP_RL2 . . . . . .  B ADDR   00C8H.0 A   
CR . . . . . . . .  B ADDR   00D8H.6 A   
CURSOR . . . . . .  D ADDR   0054H   A   
CURSORBYTE . . . .  N NUMB   00FEH   A   
CURSORBYTEMASK . .  N NUMB   0001H   A   
CY . . . . . . . .  B ADDR   00D0H.7 A   
C_T2 . . . . . . .  B ADDR   00C8H.1 A   
DELAY. . . . . . .  C ADDR   0194H   A   
DETECTCOLLISION. .  C ADDR   015FH   A   
DISPCOLSHIFT . . .  C ADDR   0183H   A   
DISPCOLSHIFTLOOP .  C ADDR   0188H   A   
DISPROWSHIFT . . .  C ADDR   017CH   A   
DPH. . . . . . . .  D ADDR   0083H   A   
DPL. . . . . . . .  D ADDR   0082H   A   
EA . . . . . . . .  B ADDR   00A8H.7 A   
EADC . . . . . . .  B ADDR   00E8H.1 A   
EC . . . . . . . .  B ADDR   00A8H.6 A   
ECAN . . . . . . .  B ADDR   00E8H.0 A   
EECON. . . . . . .  D ADDR   00D2H   A   
ES . . . . . . . .  B ADDR   00A8H.4 A   
ET0. . . . . . . .  B ADDR   00A8H.1 A   
ET1. . . . . . . .  B ADDR   00A8H.3 A   
ET2. . . . . . . .  B ADDR   00A8H.5 A   
ETIM . . . . . . .  B ADDR   00E8H.2 A   
EX0. . . . . . . .  B ADDR   00A8H.0 A   
EX1. . . . . . . .  B ADDR   00A8H.2 A   
EXEN2. . . . . . .  B ADDR   00C8H.3 A   
EXF2 . . . . . . .  B ADDR   00C8H.6 A   
F0 . . . . . . . .  B ADDR   00D0H.5 A   
FCON . . . . . . .  D ADDR   00D1H   A   
FE . . . . . . . .  B ADDR   0098H.7 A   
FPGACON. . . . . .  D ADDR   00F1H   A   
GAMEINIT . . . . .  C ADDR   006AH   A   
IE0. . . . . . . .  B ADDR   0088H.1 A   
IE1. . . . . . . .  B ADDR   0088H.3 A   
IEN0 . . . . . . .  D ADDR   00A8H   A   
IEN1 . . . . . . .  D ADDR   00E8H   A   
INIT . . . . . . .  C ADDR   0046H   A   
INT0 . . . . . . .  B ADDR   00B0H.2 A   
INT1 . . . . . . .  B ADDR   00B0H.3 A   
IPH0 . . . . . . .  D ADDR   00B7H   A   
A51 MACRO ASSEMBLER  MAIN                                                                 05/09/2016 17:41:42 PAGE    15

IPH1 . . . . . . .  D ADDR   00F7H   A   
IPL0 . . . . . . .  D ADDR   00B8H   A   
IPL1 . . . . . . .  D ADDR   00F8H   A   
ISR_ADC. . . . . .  C ADDR   0136H   A   
ISR_TMR0 . . . . .  C ADDR   00A2H   A   
ISR_TMR1 . . . . .  C ADDR   0100H   A   
IT0. . . . . . . .  B ADDR   0088H.0 A   
IT1. . . . . . . .  B ADDR   0088H.2 A   
ITERATION. . . . .  C ADDR   0165H   A   
LASTLINECOMP . . .  C ADDR   00D0H   A   
LFSR . . . . . . .  C ADDR   01A5H   A   
LFSRSHIFT. . . . .  C ADDR   01D0H   A   
LINEBYTES. . . . .  C ADDR   00BAH   A   
LOCATIONLBL. . . .  C ADDR   00E4H   A   
LOOP . . . . . . .  C ADDR   019AH   A   
LOOP2. . . . . . .  C ADDR   01A2H   A   
MAIN . . . . . . .  C ADDR   009CH   A   
NUMBEROFCOLLUMNS .  N NUMB   0028H   A   
NUMBEROFROWS . . .  N NUMB   0007H   A   
OV . . . . . . . .  B ADDR   00D0H.2 A   
P. . . . . . . . .  B ADDR   00D0H.0 A   
P0 . . . . . . . .  D ADDR   0080H   A   
P1 . . . . . . . .  D ADDR   0090H   A   
P2 . . . . . . . .  D ADDR   00A0H   A   
P3 . . . . . . . .  D ADDR   00B0H   A   
P4 . . . . . . . .  D ADDR   00C0H   A   
PCON . . . . . . .  D ADDR   0087H   A   
PSW. . . . . . . .  D ADDR   00D0H   A   
RAMINIT. . . . . .  C ADDR   0060H   A   
RB8. . . . . . . .  B ADDR   0098H.2 A   
RCAP2H . . . . . .  D ADDR   00CBH   A   
RCAP2L . . . . . .  D ADDR   00CAH   A   
RCLK . . . . . . .  B ADDR   00C8H.5 A   
RD . . . . . . . .  B ADDR   00B0H.7 A   
REG. . . . . . . .  C ADDR   0153H   A   
REN. . . . . . . .  B ADDR   0098H.4 A   
RESET. . . . . . .  C ADDR   0179H   A   
RI . . . . . . . .  B ADDR   0098H.0 A   
ROWITERATION . . .  C ADDR   00B8H   A   
RS0. . . . . . . .  B ADDR   00D0H.3 A   
RS1. . . . . . . .  B ADDR   00D0H.4 A   
RXD. . . . . . . .  B ADDR   00B0H.0 A   
SADDR. . . . . . .  D ADDR   00A9H   A   
SADEN. . . . . . .  D ADDR   00B9H   A   
SBUF . . . . . . .  D ADDR   0099H   A   
SCON . . . . . . .  D ADDR   0098H   A   
SHIFTR6. . . . . .  C ADDR   014EH   A   
SM0. . . . . . . .  B ADDR   0098H.7 A   
SM1. . . . . . . .  B ADDR   0098H.6 A   
SM2. . . . . . . .  B ADDR   0098H.5 A   
SP . . . . . . . .  D ADDR   0081H   A   
T0 . . . . . . . .  B ADDR   00B0H.4 A   
T1 . . . . . . . .  B ADDR   00B0H.5 A   
T2CON. . . . . . .  D ADDR   00C8H   A   
T2MOD. . . . . . .  D ADDR   00C9H   A   
TB8. . . . . . . .  B ADDR   0098H.3 A   
TCLK . . . . . . .  B ADDR   00C8H.4 A   
TCON . . . . . . .  D ADDR   0088H   A   
TF0. . . . . . . .  B ADDR   0088H.5 A   
TF1. . . . . . . .  B ADDR   0088H.7 A   
TF2. . . . . . . .  B ADDR   00C8H.7 A   
TH0. . . . . . . .  D ADDR   008CH   A   
TH1. . . . . . . .  D ADDR   008DH   A   
TH2. . . . . . . .  D ADDR   00CDH   A   
TI . . . . . . . .  B ADDR   0098H.1 A   
TL0. . . . . . . .  D ADDR   008AH   A   
A51 MACRO ASSEMBLER  MAIN                                                                 05/09/2016 17:41:42 PAGE    16

TL1. . . . . . . .  D ADDR   008BH   A   
TL2. . . . . . . .  D ADDR   00CCH   A   
TMOD . . . . . . .  D ADDR   0089H   A   
TR0. . . . . . . .  B ADDR   0088H.4 A   
TR1. . . . . . . .  B ADDR   0088H.6 A   
TR2. . . . . . . .  B ADDR   00C8H.2 A   
TXD. . . . . . . .  B ADDR   00B0H.1 A   
VIDMEMEND. . . . .  N NUMB   0052H   A   
VIDMEMLENGTH . . .  N NUMB   0023H   A   
VIDMEMSTART. . . .  N NUMB   0030H   A   
WDTPRG . . . . . .  D ADDR   00A7H   A   
WDTRST . . . . . .  D ADDR   00A6H   A   
WR . . . . . . . .  B ADDR   00B0H.6 A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
